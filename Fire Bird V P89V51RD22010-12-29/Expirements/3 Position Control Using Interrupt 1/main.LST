C51 COMPILER V8.18   MAIN                                                                  12/09/2009 11:17:56 PAGE 1   


C51 COMPILER V8.18, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /*********************************************************************************************************
             -*****
   2                          Platform: Fire Bird V P89V51RD2
   3                          Position Control Using Interrupt 1
   4                          Written by: Omkar Pradhan, NEX Robotics Pvt. Ltd.
   5                          Edited By: Sachitanand Malewar, NEX Robotics Pvt. Ltd.
   6                          Last Modification: 2009-12-08
   7                          This program shows how to control position of the robot using left position encoder using interrupt 1.
   8                          Compiled with: uVision3 V3.90; C Compiler: C51.Exe, V8.18
   9          **********************************************************************************************************
             -****/                
  10          
  11          
  12          
  13          #include <intrins.h>
  14          #include "p89v51rx2.H"
  15          
  16          
  17          //program specific declarations
  18          sbit LB=P1^0;       //LEFT BACK Pin.
  19          sbit LF=P1^1;           //LEFT FRONT Pin.
  20          sbit RF=P1^2;           //RIGHT FRONT Pin.
  21          sbit RB=P3^4;           //RIGHT BACK Pin.
  22          
  23          sbit left_velocity=P1^3;  //Left velocity control pin. 
  24          sbit right_velocity=P1^4; //Right velocity control pin. 
  25          
  26          unsigned int left_shaft_count=0;//initialize a variable to store the count pulses of the left position enc
             -oder.
  27          
  28          //initialization routine for Interrupt 1 setup.
  29          void int1_setup() //Initalisation of the Int 1 should be done in the same sequence as given in this functi
             -on.
  30          {
  31   1      TCON = 0x04; //Set Interrupt 1 trigger type to falling edge trigger.
  32   1      IEN0 = 0x84; //External Interrupt 1 Enable and Global Interrupt Enable. 
  33   1      
  34   1      P3 = 0x08; //set P3.3 (INT 1) as input port.
  35   1                         // Can also be written as INT1 = 0; (refer to p89v51rx2.H).
  36   1      }
  37          
  38          
  39          //ISR for external Interrupt 1
  40          void int1_isr(void)interrupt 2     //ISR Routine for External Interrupt 1.
  41                                                                             //Refer to chapter 4 in the software manual (table 4.1)for syntax explanation.
  42          {
  43   1       left_shaft_count++;//when the slotted disc passes through the encoder pulses will be generated,each pulse
             - will generate an interrupt and the right shaft count value will be incremented.
  44   1       IE1 = 0; // When interrupt is processed it is cleared automatically by the hardware  or it can also be cl
             -eared by the software.
  45   1                        // Clearing IE1 flag to 0.    
  46   1      }
  47          
  48          // function for forward motion. 
  49          void forward(void)
C51 COMPILER V8.18   MAIN                                                                  12/09/2009 11:17:56 PAGE 2   

  50          {
  51   1      RF=1;
  52   1      LF=1;
  53   1      RB=0;
  54   1      LB=0;
  55   1      }
  56          
  57          // function to stop robot.
  58          void stop(void)
  59          {
  60   1      RF=0;
  61   1      LF=0;
  62   1      RB=0;
  63   1      LB=0;
  64   1      }
  65          
  66          void main()
  67          { 
  68   1       unsigned int reqd_shaft_count_int=0;
  69   1       unsigned int distance=0;
  70   1      
  71   1       distance=100;  //Enter here the distance to be travelled in mm.     
  72   1       
  73   1       reqd_shaft_count_int=(unsigned int)(distance * 100 / 544);  //This equation will calculate the count requ
             -ired for distance to be travelled.
  74   1       
  75   1       int1_setup();//external linterrupt 1 initialization.
  76   1                                              
  77   1       left_velocity = 1;      //setting motor enable pines to 1
  78   1       right_velocity = 1; //setting motor enable pines to 1
  79   1       forward();       //go forward
  80   1                                    
  81   1       while(left_shaft_count<reqd_shaft_count_int); //wait till desired distance is covered.
  82   1      
  83   1       stop();         //stop motor                                           
  84   1      
  85   1       while(1);
  86   1       
  87   1      }//main ends                
  88          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     84    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
