
Insect_Walk.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000108  00800200  00003134  000031a8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00003134  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .debug_aranges 00000020  00000000  00000000  000032b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_pubnames 00000227  00000000  00000000  000032d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00000d14  00000000  00000000  000034f7  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 0000013d  00000000  00000000  0000420b  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00001238  00000000  00000000  00004348  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000210  00000000  00000000  00005580  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    000002b3  00000000  00000000  00005790  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
       4:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
       8:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
       c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      10:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      14:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      18:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      1c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      20:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      24:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      28:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      2c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      30:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      34:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      38:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      3c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      40:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      44:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      48:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      4c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      50:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      54:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      58:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      5c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      60:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      64:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      68:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      6c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      70:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      74:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      78:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      7c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      80:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      84:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      88:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      8c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      90:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      94:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      98:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      9c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      a0:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      a4:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      a8:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      ac:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      b0:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      b4:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      b8:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      bc:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      c0:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      c4:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      c8:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      cc:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      d0:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      d4:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      d8:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      dc:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      e0:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	13 e0       	ldi	r17, 0x03	; 3
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	e4 e3       	ldi	r30, 0x34	; 52
      fc:	f1 e3       	ldi	r31, 0x31	; 49
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	a8 30       	cpi	r26, 0x08	; 8
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>
     10e:	0e 94 e3 10 	call	0x21c6	; 0x21c6 <main>
     112:	0c 94 98 18 	jmp	0x3130	; 0x3130 <_exit>

00000116 <__bad_interrupt>:
     116:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000011a <servo1_pin_config>:
#define mid_leg_right_down_angle 105 //mid leg right side down angle


//Configure PORTB 5 pin for servo motor 1 operation
void servo1_pin_config (void)
{
     11a:	df 93       	push	r29
     11c:	cf 93       	push	r28
     11e:	cd b7       	in	r28, 0x3d	; 61
     120:	de b7       	in	r29, 0x3e	; 62
 DDRB  = DDRB | 0x20;  //making PORTB 5 pin output
     122:	a4 e2       	ldi	r26, 0x24	; 36
     124:	b0 e0       	ldi	r27, 0x00	; 0
     126:	e4 e2       	ldi	r30, 0x24	; 36
     128:	f0 e0       	ldi	r31, 0x00	; 0
     12a:	80 81       	ld	r24, Z
     12c:	80 62       	ori	r24, 0x20	; 32
     12e:	8c 93       	st	X, r24
 PORTB = PORTB | 0x20; //setting PORTB 5 pin to logic 1
     130:	a5 e2       	ldi	r26, 0x25	; 37
     132:	b0 e0       	ldi	r27, 0x00	; 0
     134:	e5 e2       	ldi	r30, 0x25	; 37
     136:	f0 e0       	ldi	r31, 0x00	; 0
     138:	80 81       	ld	r24, Z
     13a:	80 62       	ori	r24, 0x20	; 32
     13c:	8c 93       	st	X, r24
}
     13e:	cf 91       	pop	r28
     140:	df 91       	pop	r29
     142:	08 95       	ret

00000144 <servo2_pin_config>:

//Configure PORTB 6 pin for servo motor 2 operation
void servo2_pin_config (void)
{
     144:	df 93       	push	r29
     146:	cf 93       	push	r28
     148:	cd b7       	in	r28, 0x3d	; 61
     14a:	de b7       	in	r29, 0x3e	; 62
 DDRB  = DDRB | 0x40;  //making PORTB 6 pin output
     14c:	a4 e2       	ldi	r26, 0x24	; 36
     14e:	b0 e0       	ldi	r27, 0x00	; 0
     150:	e4 e2       	ldi	r30, 0x24	; 36
     152:	f0 e0       	ldi	r31, 0x00	; 0
     154:	80 81       	ld	r24, Z
     156:	80 64       	ori	r24, 0x40	; 64
     158:	8c 93       	st	X, r24
 PORTB = PORTB | 0x40; //setting PORTB 6 pin to logic 1
     15a:	a5 e2       	ldi	r26, 0x25	; 37
     15c:	b0 e0       	ldi	r27, 0x00	; 0
     15e:	e5 e2       	ldi	r30, 0x25	; 37
     160:	f0 e0       	ldi	r31, 0x00	; 0
     162:	80 81       	ld	r24, Z
     164:	80 64       	ori	r24, 0x40	; 64
     166:	8c 93       	st	X, r24
}
     168:	cf 91       	pop	r28
     16a:	df 91       	pop	r29
     16c:	08 95       	ret

0000016e <servo3_pin_config>:

//Configure PORTB 7 pin for servo motor 3 operation
void servo3_pin_config (void)
{
     16e:	df 93       	push	r29
     170:	cf 93       	push	r28
     172:	cd b7       	in	r28, 0x3d	; 61
     174:	de b7       	in	r29, 0x3e	; 62
 DDRB  = DDRB | 0x80;  //making PORTB 7 pin output
     176:	a4 e2       	ldi	r26, 0x24	; 36
     178:	b0 e0       	ldi	r27, 0x00	; 0
     17a:	e4 e2       	ldi	r30, 0x24	; 36
     17c:	f0 e0       	ldi	r31, 0x00	; 0
     17e:	80 81       	ld	r24, Z
     180:	80 68       	ori	r24, 0x80	; 128
     182:	8c 93       	st	X, r24
 PORTB = PORTB | 0x80; //setting PORTB 7 pin to logic 1
     184:	a5 e2       	ldi	r26, 0x25	; 37
     186:	b0 e0       	ldi	r27, 0x00	; 0
     188:	e5 e2       	ldi	r30, 0x25	; 37
     18a:	f0 e0       	ldi	r31, 0x00	; 0
     18c:	80 81       	ld	r24, Z
     18e:	80 68       	ori	r24, 0x80	; 128
     190:	8c 93       	st	X, r24
}
     192:	cf 91       	pop	r28
     194:	df 91       	pop	r29
     196:	08 95       	ret

00000198 <port_init>:

//Initialize the ports
void port_init(void)
{
     198:	df 93       	push	r29
     19a:	cf 93       	push	r28
     19c:	cd b7       	in	r28, 0x3d	; 61
     19e:	de b7       	in	r29, 0x3e	; 62
 servo1_pin_config(); //Configure PORTB 5 pin for servo motor 1 operation
     1a0:	0e 94 8d 00 	call	0x11a	; 0x11a <servo1_pin_config>
 servo2_pin_config(); //Configure PORTB 6 pin for servo motor 2 operation 
     1a4:	0e 94 a2 00 	call	0x144	; 0x144 <servo2_pin_config>
 servo3_pin_config(); //Configure PORTB 7 pin for servo motor 3 operation  
     1a8:	0e 94 b7 00 	call	0x16e	; 0x16e <servo3_pin_config>
}
     1ac:	cf 91       	pop	r28
     1ae:	df 91       	pop	r29
     1b0:	08 95       	ret

000001b2 <timer1_init>:
//TIMER1 initialization in 10 bit fast PWM mode  
//prescale:256
// WGM: 7) PWM 10bit fast, TOP=0x03FF
// actual value: 42.187Hz 
void timer1_init(void)
{
     1b2:	df 93       	push	r29
     1b4:	cf 93       	push	r28
     1b6:	cd b7       	in	r28, 0x3d	; 61
     1b8:	de b7       	in	r29, 0x3e	; 62
 TCCR1B = 0x00; //stop
     1ba:	e1 e8       	ldi	r30, 0x81	; 129
     1bc:	f0 e0       	ldi	r31, 0x00	; 0
     1be:	10 82       	st	Z, r1
 TCNT1H = 0xFC; //Counter high value to which OCR1xH value is to be compared with
     1c0:	e5 e8       	ldi	r30, 0x85	; 133
     1c2:	f0 e0       	ldi	r31, 0x00	; 0
     1c4:	8c ef       	ldi	r24, 0xFC	; 252
     1c6:	80 83       	st	Z, r24
 TCNT1L = 0x01;	//Counter low value to which OCR1xH value is to be compared with
     1c8:	e4 e8       	ldi	r30, 0x84	; 132
     1ca:	f0 e0       	ldi	r31, 0x00	; 0
     1cc:	81 e0       	ldi	r24, 0x01	; 1
     1ce:	80 83       	st	Z, r24
 OCR1AH = 0x03;	//Output compare Register high value for servo 1
     1d0:	e9 e8       	ldi	r30, 0x89	; 137
     1d2:	f0 e0       	ldi	r31, 0x00	; 0
     1d4:	83 e0       	ldi	r24, 0x03	; 3
     1d6:	80 83       	st	Z, r24
 OCR1AL = 0xFF;	//Output Compare Register low Value For servo 1
     1d8:	e8 e8       	ldi	r30, 0x88	; 136
     1da:	f0 e0       	ldi	r31, 0x00	; 0
     1dc:	8f ef       	ldi	r24, 0xFF	; 255
     1de:	80 83       	st	Z, r24
 OCR1BH = 0x03;	//Output compare Register high value for servo 2
     1e0:	eb e8       	ldi	r30, 0x8B	; 139
     1e2:	f0 e0       	ldi	r31, 0x00	; 0
     1e4:	83 e0       	ldi	r24, 0x03	; 3
     1e6:	80 83       	st	Z, r24
 OCR1BL = 0xFF;	//Output Compare Register low Value For servo 2
     1e8:	ea e8       	ldi	r30, 0x8A	; 138
     1ea:	f0 e0       	ldi	r31, 0x00	; 0
     1ec:	8f ef       	ldi	r24, 0xFF	; 255
     1ee:	80 83       	st	Z, r24
 OCR1CH = 0x03;	//Output compare Register high value for servo 3
     1f0:	ed e8       	ldi	r30, 0x8D	; 141
     1f2:	f0 e0       	ldi	r31, 0x00	; 0
     1f4:	83 e0       	ldi	r24, 0x03	; 3
     1f6:	80 83       	st	Z, r24
 OCR1CL = 0xFF;	//Output Compare Register low Value For servo 3
     1f8:	ec e8       	ldi	r30, 0x8C	; 140
     1fa:	f0 e0       	ldi	r31, 0x00	; 0
     1fc:	8f ef       	ldi	r24, 0xFF	; 255
     1fe:	80 83       	st	Z, r24
 ICR1H  = 0x03;	
     200:	e7 e8       	ldi	r30, 0x87	; 135
     202:	f0 e0       	ldi	r31, 0x00	; 0
     204:	83 e0       	ldi	r24, 0x03	; 3
     206:	80 83       	st	Z, r24
 ICR1L  = 0xFF;
     208:	e6 e8       	ldi	r30, 0x86	; 134
     20a:	f0 e0       	ldi	r31, 0x00	; 0
     20c:	8f ef       	ldi	r24, 0xFF	; 255
     20e:	80 83       	st	Z, r24
 TCCR1A = 0xAB; /*{COM1A1=1, COM1A0=0; COM1B1=1, COM1B0=0; COM1C1=1 COM1C0=0}
     210:	e0 e8       	ldi	r30, 0x80	; 128
     212:	f0 e0       	ldi	r31, 0x00	; 0
     214:	8b ea       	ldi	r24, 0xAB	; 171
     216:	80 83       	st	Z, r24
 					For Overriding normal port functionality to OCRnA outputs.
				  {WGM11=1, WGM10=1} Along With WGM12 in TCCR1B for Selecting FAST PWM Mode*/
 TCCR1C = 0x00;
     218:	e2 e8       	ldi	r30, 0x82	; 130
     21a:	f0 e0       	ldi	r31, 0x00	; 0
     21c:	10 82       	st	Z, r1
 TCCR1B = 0x0C; //WGM12=1; CS12=1, CS11=0, CS10=0 (Prescaler=256)
     21e:	e1 e8       	ldi	r30, 0x81	; 129
     220:	f0 e0       	ldi	r31, 0x00	; 0
     222:	8c e0       	ldi	r24, 0x0C	; 12
     224:	80 83       	st	Z, r24
}
     226:	cf 91       	pop	r28
     228:	df 91       	pop	r29
     22a:	08 95       	ret

0000022c <init_devices>:


//Function to initialize all the peripherals
void init_devices(void)
{
     22c:	df 93       	push	r29
     22e:	cf 93       	push	r28
     230:	cd b7       	in	r28, 0x3d	; 61
     232:	de b7       	in	r29, 0x3e	; 62
 cli(); //disable all interrupts
     234:	f8 94       	cli
 port_init();
     236:	0e 94 cc 00 	call	0x198	; 0x198 <port_init>
 timer1_init();
     23a:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <timer1_init>
 sei(); //re-enable interrupts 
     23e:	78 94       	sei
}
     240:	cf 91       	pop	r28
     242:	df 91       	pop	r29
     244:	08 95       	ret

00000246 <servo_1>:


//Function to rotate Servo 1 by a specified angle in the multiples of 1.86 degrees
void servo_1(unsigned char degrees)  
{
     246:	0f 93       	push	r16
     248:	1f 93       	push	r17
     24a:	df 93       	push	r29
     24c:	cf 93       	push	r28
     24e:	00 d0       	rcall	.+0      	; 0x250 <servo_1+0xa>
     250:	0f 92       	push	r0
     252:	0f 92       	push	r0
     254:	cd b7       	in	r28, 0x3d	; 61
     256:	de b7       	in	r29, 0x3e	; 62
     258:	8d 83       	std	Y+5, r24	; 0x05
 float PositionPanServo = 0;
     25a:	80 e0       	ldi	r24, 0x00	; 0
     25c:	90 e0       	ldi	r25, 0x00	; 0
     25e:	a0 e0       	ldi	r26, 0x00	; 0
     260:	b0 e0       	ldi	r27, 0x00	; 0
     262:	89 83       	std	Y+1, r24	; 0x01
     264:	9a 83       	std	Y+2, r25	; 0x02
     266:	ab 83       	std	Y+3, r26	; 0x03
     268:	bc 83       	std	Y+4, r27	; 0x04
 PositionPanServo = ((float)degrees / 1.86) + 35.0;
     26a:	8d 81       	ldd	r24, Y+5	; 0x05
     26c:	88 2f       	mov	r24, r24
     26e:	90 e0       	ldi	r25, 0x00	; 0
     270:	a0 e0       	ldi	r26, 0x00	; 0
     272:	b0 e0       	ldi	r27, 0x00	; 0
     274:	bc 01       	movw	r22, r24
     276:	cd 01       	movw	r24, r26
     278:	0e 94 f3 15 	call	0x2be6	; 0x2be6 <__floatunsisf>
     27c:	dc 01       	movw	r26, r24
     27e:	cb 01       	movw	r24, r22
     280:	bc 01       	movw	r22, r24
     282:	cd 01       	movw	r24, r26
     284:	2b e7       	ldi	r18, 0x7B	; 123
     286:	34 e1       	ldi	r19, 0x14	; 20
     288:	4e ee       	ldi	r20, 0xEE	; 238
     28a:	5f e3       	ldi	r21, 0x3F	; 63
     28c:	0e 94 63 14 	call	0x28c6	; 0x28c6 <__divsf3>
     290:	dc 01       	movw	r26, r24
     292:	cb 01       	movw	r24, r22
     294:	bc 01       	movw	r22, r24
     296:	cd 01       	movw	r24, r26
     298:	20 e0       	ldi	r18, 0x00	; 0
     29a:	30 e0       	ldi	r19, 0x00	; 0
     29c:	4c e0       	ldi	r20, 0x0C	; 12
     29e:	52 e4       	ldi	r21, 0x42	; 66
     2a0:	0e 94 3c 13 	call	0x2678	; 0x2678 <__addsf3>
     2a4:	dc 01       	movw	r26, r24
     2a6:	cb 01       	movw	r24, r22
     2a8:	89 83       	std	Y+1, r24	; 0x01
     2aa:	9a 83       	std	Y+2, r25	; 0x02
     2ac:	ab 83       	std	Y+3, r26	; 0x03
     2ae:	bc 83       	std	Y+4, r27	; 0x04
 OCR1AH = 0x00;
     2b0:	e9 e8       	ldi	r30, 0x89	; 137
     2b2:	f0 e0       	ldi	r31, 0x00	; 0
     2b4:	10 82       	st	Z, r1
 OCR1AL = (unsigned char) PositionPanServo;
     2b6:	08 e8       	ldi	r16, 0x88	; 136
     2b8:	10 e0       	ldi	r17, 0x00	; 0
     2ba:	69 81       	ldd	r22, Y+1	; 0x01
     2bc:	7a 81       	ldd	r23, Y+2	; 0x02
     2be:	8b 81       	ldd	r24, Y+3	; 0x03
     2c0:	9c 81       	ldd	r25, Y+4	; 0x04
     2c2:	0e 94 93 11 	call	0x2326	; 0x2326 <__fixunssfsi>
     2c6:	dc 01       	movw	r26, r24
     2c8:	cb 01       	movw	r24, r22
     2ca:	f8 01       	movw	r30, r16
     2cc:	80 83       	st	Z, r24
}
     2ce:	0f 90       	pop	r0
     2d0:	0f 90       	pop	r0
     2d2:	0f 90       	pop	r0
     2d4:	0f 90       	pop	r0
     2d6:	0f 90       	pop	r0
     2d8:	cf 91       	pop	r28
     2da:	df 91       	pop	r29
     2dc:	1f 91       	pop	r17
     2de:	0f 91       	pop	r16
     2e0:	08 95       	ret

000002e2 <servo_2>:


//Function to rotate Servo 2 by a specified angle in the multiples of 1.86 degrees
void servo_2(unsigned char degrees)
{
     2e2:	0f 93       	push	r16
     2e4:	1f 93       	push	r17
     2e6:	df 93       	push	r29
     2e8:	cf 93       	push	r28
     2ea:	00 d0       	rcall	.+0      	; 0x2ec <servo_2+0xa>
     2ec:	0f 92       	push	r0
     2ee:	0f 92       	push	r0
     2f0:	cd b7       	in	r28, 0x3d	; 61
     2f2:	de b7       	in	r29, 0x3e	; 62
     2f4:	8d 83       	std	Y+5, r24	; 0x05
 float PositionTiltServo = 0;
     2f6:	80 e0       	ldi	r24, 0x00	; 0
     2f8:	90 e0       	ldi	r25, 0x00	; 0
     2fa:	a0 e0       	ldi	r26, 0x00	; 0
     2fc:	b0 e0       	ldi	r27, 0x00	; 0
     2fe:	89 83       	std	Y+1, r24	; 0x01
     300:	9a 83       	std	Y+2, r25	; 0x02
     302:	ab 83       	std	Y+3, r26	; 0x03
     304:	bc 83       	std	Y+4, r27	; 0x04
 PositionTiltServo = ((float)degrees / 1.86) + 35.0;
     306:	8d 81       	ldd	r24, Y+5	; 0x05
     308:	88 2f       	mov	r24, r24
     30a:	90 e0       	ldi	r25, 0x00	; 0
     30c:	a0 e0       	ldi	r26, 0x00	; 0
     30e:	b0 e0       	ldi	r27, 0x00	; 0
     310:	bc 01       	movw	r22, r24
     312:	cd 01       	movw	r24, r26
     314:	0e 94 f3 15 	call	0x2be6	; 0x2be6 <__floatunsisf>
     318:	dc 01       	movw	r26, r24
     31a:	cb 01       	movw	r24, r22
     31c:	bc 01       	movw	r22, r24
     31e:	cd 01       	movw	r24, r26
     320:	2b e7       	ldi	r18, 0x7B	; 123
     322:	34 e1       	ldi	r19, 0x14	; 20
     324:	4e ee       	ldi	r20, 0xEE	; 238
     326:	5f e3       	ldi	r21, 0x3F	; 63
     328:	0e 94 63 14 	call	0x28c6	; 0x28c6 <__divsf3>
     32c:	dc 01       	movw	r26, r24
     32e:	cb 01       	movw	r24, r22
     330:	bc 01       	movw	r22, r24
     332:	cd 01       	movw	r24, r26
     334:	20 e0       	ldi	r18, 0x00	; 0
     336:	30 e0       	ldi	r19, 0x00	; 0
     338:	4c e0       	ldi	r20, 0x0C	; 12
     33a:	52 e4       	ldi	r21, 0x42	; 66
     33c:	0e 94 3c 13 	call	0x2678	; 0x2678 <__addsf3>
     340:	dc 01       	movw	r26, r24
     342:	cb 01       	movw	r24, r22
     344:	89 83       	std	Y+1, r24	; 0x01
     346:	9a 83       	std	Y+2, r25	; 0x02
     348:	ab 83       	std	Y+3, r26	; 0x03
     34a:	bc 83       	std	Y+4, r27	; 0x04
 OCR1BH = 0x00;
     34c:	eb e8       	ldi	r30, 0x8B	; 139
     34e:	f0 e0       	ldi	r31, 0x00	; 0
     350:	10 82       	st	Z, r1
 OCR1BL = (unsigned char) PositionTiltServo;
     352:	0a e8       	ldi	r16, 0x8A	; 138
     354:	10 e0       	ldi	r17, 0x00	; 0
     356:	69 81       	ldd	r22, Y+1	; 0x01
     358:	7a 81       	ldd	r23, Y+2	; 0x02
     35a:	8b 81       	ldd	r24, Y+3	; 0x03
     35c:	9c 81       	ldd	r25, Y+4	; 0x04
     35e:	0e 94 93 11 	call	0x2326	; 0x2326 <__fixunssfsi>
     362:	dc 01       	movw	r26, r24
     364:	cb 01       	movw	r24, r22
     366:	f8 01       	movw	r30, r16
     368:	80 83       	st	Z, r24
}
     36a:	0f 90       	pop	r0
     36c:	0f 90       	pop	r0
     36e:	0f 90       	pop	r0
     370:	0f 90       	pop	r0
     372:	0f 90       	pop	r0
     374:	cf 91       	pop	r28
     376:	df 91       	pop	r29
     378:	1f 91       	pop	r17
     37a:	0f 91       	pop	r16
     37c:	08 95       	ret

0000037e <servo_3>:

//Function to rotate Servo 3 by a specified angle in the multiples of 1.86 degrees
void servo_3(unsigned char degrees)
{
     37e:	0f 93       	push	r16
     380:	1f 93       	push	r17
     382:	df 93       	push	r29
     384:	cf 93       	push	r28
     386:	00 d0       	rcall	.+0      	; 0x388 <servo_3+0xa>
     388:	0f 92       	push	r0
     38a:	0f 92       	push	r0
     38c:	cd b7       	in	r28, 0x3d	; 61
     38e:	de b7       	in	r29, 0x3e	; 62
     390:	8d 83       	std	Y+5, r24	; 0x05
 float PositionServo = 0;
     392:	80 e0       	ldi	r24, 0x00	; 0
     394:	90 e0       	ldi	r25, 0x00	; 0
     396:	a0 e0       	ldi	r26, 0x00	; 0
     398:	b0 e0       	ldi	r27, 0x00	; 0
     39a:	89 83       	std	Y+1, r24	; 0x01
     39c:	9a 83       	std	Y+2, r25	; 0x02
     39e:	ab 83       	std	Y+3, r26	; 0x03
     3a0:	bc 83       	std	Y+4, r27	; 0x04
 PositionServo = ((float)degrees / 1.86) + 35.0;
     3a2:	8d 81       	ldd	r24, Y+5	; 0x05
     3a4:	88 2f       	mov	r24, r24
     3a6:	90 e0       	ldi	r25, 0x00	; 0
     3a8:	a0 e0       	ldi	r26, 0x00	; 0
     3aa:	b0 e0       	ldi	r27, 0x00	; 0
     3ac:	bc 01       	movw	r22, r24
     3ae:	cd 01       	movw	r24, r26
     3b0:	0e 94 f3 15 	call	0x2be6	; 0x2be6 <__floatunsisf>
     3b4:	dc 01       	movw	r26, r24
     3b6:	cb 01       	movw	r24, r22
     3b8:	bc 01       	movw	r22, r24
     3ba:	cd 01       	movw	r24, r26
     3bc:	2b e7       	ldi	r18, 0x7B	; 123
     3be:	34 e1       	ldi	r19, 0x14	; 20
     3c0:	4e ee       	ldi	r20, 0xEE	; 238
     3c2:	5f e3       	ldi	r21, 0x3F	; 63
     3c4:	0e 94 63 14 	call	0x28c6	; 0x28c6 <__divsf3>
     3c8:	dc 01       	movw	r26, r24
     3ca:	cb 01       	movw	r24, r22
     3cc:	bc 01       	movw	r22, r24
     3ce:	cd 01       	movw	r24, r26
     3d0:	20 e0       	ldi	r18, 0x00	; 0
     3d2:	30 e0       	ldi	r19, 0x00	; 0
     3d4:	4c e0       	ldi	r20, 0x0C	; 12
     3d6:	52 e4       	ldi	r21, 0x42	; 66
     3d8:	0e 94 3c 13 	call	0x2678	; 0x2678 <__addsf3>
     3dc:	dc 01       	movw	r26, r24
     3de:	cb 01       	movw	r24, r22
     3e0:	89 83       	std	Y+1, r24	; 0x01
     3e2:	9a 83       	std	Y+2, r25	; 0x02
     3e4:	ab 83       	std	Y+3, r26	; 0x03
     3e6:	bc 83       	std	Y+4, r27	; 0x04
 OCR1CH = 0x00;
     3e8:	ed e8       	ldi	r30, 0x8D	; 141
     3ea:	f0 e0       	ldi	r31, 0x00	; 0
     3ec:	10 82       	st	Z, r1
 OCR1CL = (unsigned char) PositionServo;
     3ee:	0c e8       	ldi	r16, 0x8C	; 140
     3f0:	10 e0       	ldi	r17, 0x00	; 0
     3f2:	69 81       	ldd	r22, Y+1	; 0x01
     3f4:	7a 81       	ldd	r23, Y+2	; 0x02
     3f6:	8b 81       	ldd	r24, Y+3	; 0x03
     3f8:	9c 81       	ldd	r25, Y+4	; 0x04
     3fa:	0e 94 93 11 	call	0x2326	; 0x2326 <__fixunssfsi>
     3fe:	dc 01       	movw	r26, r24
     400:	cb 01       	movw	r24, r22
     402:	f8 01       	movw	r30, r16
     404:	80 83       	st	Z, r24
}
     406:	0f 90       	pop	r0
     408:	0f 90       	pop	r0
     40a:	0f 90       	pop	r0
     40c:	0f 90       	pop	r0
     40e:	0f 90       	pop	r0
     410:	cf 91       	pop	r28
     412:	df 91       	pop	r29
     414:	1f 91       	pop	r17
     416:	0f 91       	pop	r16
     418:	08 95       	ret

0000041a <servo_1_free>:
//servo_free functions unlocks the servo motors from the any angle 
//and make them free by giving 100% duty cycle at the PWM. This function can be used to 
//reduce the power consumption of the motor if it is holding load against the gravity.

void servo_1_free (void) //makes servo 1 free rotating
{
     41a:	df 93       	push	r29
     41c:	cf 93       	push	r28
     41e:	cd b7       	in	r28, 0x3d	; 61
     420:	de b7       	in	r29, 0x3e	; 62
 OCR1AH = 0x03; 
     422:	e9 e8       	ldi	r30, 0x89	; 137
     424:	f0 e0       	ldi	r31, 0x00	; 0
     426:	83 e0       	ldi	r24, 0x03	; 3
     428:	80 83       	st	Z, r24
 OCR1AL = 0xFF; //Servo 1 off
     42a:	e8 e8       	ldi	r30, 0x88	; 136
     42c:	f0 e0       	ldi	r31, 0x00	; 0
     42e:	8f ef       	ldi	r24, 0xFF	; 255
     430:	80 83       	st	Z, r24
}
     432:	cf 91       	pop	r28
     434:	df 91       	pop	r29
     436:	08 95       	ret

00000438 <servo_2_free>:

void servo_2_free (void) //makes servo 2 free rotating
{
     438:	df 93       	push	r29
     43a:	cf 93       	push	r28
     43c:	cd b7       	in	r28, 0x3d	; 61
     43e:	de b7       	in	r29, 0x3e	; 62
 OCR1BH = 0x03;
     440:	eb e8       	ldi	r30, 0x8B	; 139
     442:	f0 e0       	ldi	r31, 0x00	; 0
     444:	83 e0       	ldi	r24, 0x03	; 3
     446:	80 83       	st	Z, r24
 OCR1BL = 0xFF; //Servo 2 off
     448:	ea e8       	ldi	r30, 0x8A	; 138
     44a:	f0 e0       	ldi	r31, 0x00	; 0
     44c:	8f ef       	ldi	r24, 0xFF	; 255
     44e:	80 83       	st	Z, r24
}
     450:	cf 91       	pop	r28
     452:	df 91       	pop	r29
     454:	08 95       	ret

00000456 <servo_3_free>:

void servo_3_free (void) //makes servo 3 free rotating
{
     456:	df 93       	push	r29
     458:	cf 93       	push	r28
     45a:	cd b7       	in	r28, 0x3d	; 61
     45c:	de b7       	in	r29, 0x3e	; 62
 OCR1CH = 0x03;
     45e:	ed e8       	ldi	r30, 0x8D	; 141
     460:	f0 e0       	ldi	r31, 0x00	; 0
     462:	83 e0       	ldi	r24, 0x03	; 3
     464:	80 83       	st	Z, r24
 OCR1CL = 0xFF; //Servo 3 off
     466:	ec e8       	ldi	r30, 0x8C	; 140
     468:	f0 e0       	ldi	r31, 0x00	; 0
     46a:	8f ef       	ldi	r24, 0xFF	; 255
     46c:	80 83       	st	Z, r24
} 
     46e:	cf 91       	pop	r28
     470:	df 91       	pop	r29
     472:	08 95       	ret

00000474 <all_leg_free>:

void all_leg_free (void) //makes all servo motors free to rotate while power is on.
						 //use this function to reduce power consumption and stress on the servo motors
						 //when robot is not moving
{
     474:	df 93       	push	r29
     476:	cf 93       	push	r28
     478:	cd b7       	in	r28, 0x3d	; 61
     47a:	de b7       	in	r29, 0x3e	; 62
 void servo_1_free();
 void servo_2_free();
 void servo_3_free();
}
     47c:	cf 91       	pop	r28
     47e:	df 91       	pop	r29
     480:	08 95       	ret

00000482 <stand_position>:

void stand_position (void) //Robot stands in its inital position. Use this function for calibration while 
							//assembling robot's leg
{
     482:	df 93       	push	r29
     484:	cf 93       	push	r28
     486:	cd b7       	in	r28, 0x3d	; 61
     488:	de b7       	in	r29, 0x3e	; 62
 servo_1(robot_stand_angle_left_servo);
     48a:	8a e5       	ldi	r24, 0x5A	; 90
     48c:	0e 94 23 01 	call	0x246	; 0x246 <servo_1>
 servo_2(robot_stand_angle_right_servo);
     490:	8a e5       	ldi	r24, 0x5A	; 90
     492:	0e 94 71 01 	call	0x2e2	; 0x2e2 <servo_2>
 servo_3(robot_stand_angle_centere_servo);
     496:	8a e5       	ldi	r24, 0x5A	; 90
     498:	0e 94 bf 01 	call	0x37e	; 0x37e <servo_3>
}
     49c:	cf 91       	pop	r28
     49e:	df 91       	pop	r29
     4a0:	08 95       	ret

000004a2 <left_leg_centere>:

void left_leg_centere (void)
{
     4a2:	df 93       	push	r29
     4a4:	cf 93       	push	r28
     4a6:	cd b7       	in	r28, 0x3d	; 61
     4a8:	de b7       	in	r29, 0x3e	; 62
 servo_1(robot_stand_angle_left_servo);
     4aa:	8a e5       	ldi	r24, 0x5A	; 90
     4ac:	0e 94 23 01 	call	0x246	; 0x246 <servo_1>
}
     4b0:	cf 91       	pop	r28
     4b2:	df 91       	pop	r29
     4b4:	08 95       	ret

000004b6 <left_leg_forward>:

void left_leg_forward (void)
{
     4b6:	df 93       	push	r29
     4b8:	cf 93       	push	r28
     4ba:	cd b7       	in	r28, 0x3d	; 61
     4bc:	de b7       	in	r29, 0x3e	; 62
 servo_1(left_leg_forward_angle);
     4be:	88 e7       	ldi	r24, 0x78	; 120
     4c0:	0e 94 23 01 	call	0x246	; 0x246 <servo_1>
}
     4c4:	cf 91       	pop	r28
     4c6:	df 91       	pop	r29
     4c8:	08 95       	ret

000004ca <left_leg_back>:

void left_leg_back (void)
{
     4ca:	df 93       	push	r29
     4cc:	cf 93       	push	r28
     4ce:	cd b7       	in	r28, 0x3d	; 61
     4d0:	de b7       	in	r29, 0x3e	; 62
 servo_1(left_leg_back_angle);
     4d2:	8c e3       	ldi	r24, 0x3C	; 60
     4d4:	0e 94 23 01 	call	0x246	; 0x246 <servo_1>
}
     4d8:	cf 91       	pop	r28
     4da:	df 91       	pop	r29
     4dc:	08 95       	ret

000004de <right_leg_centere>:

void right_leg_centere (void)
{
     4de:	df 93       	push	r29
     4e0:	cf 93       	push	r28
     4e2:	cd b7       	in	r28, 0x3d	; 61
     4e4:	de b7       	in	r29, 0x3e	; 62
 servo_2(robot_stand_angle_right_servo);
     4e6:	8a e5       	ldi	r24, 0x5A	; 90
     4e8:	0e 94 71 01 	call	0x2e2	; 0x2e2 <servo_2>
}
     4ec:	cf 91       	pop	r28
     4ee:	df 91       	pop	r29
     4f0:	08 95       	ret

000004f2 <right_leg_forward>:

void right_leg_forward (void)
{
     4f2:	df 93       	push	r29
     4f4:	cf 93       	push	r28
     4f6:	cd b7       	in	r28, 0x3d	; 61
     4f8:	de b7       	in	r29, 0x3e	; 62
 servo_2(right_leg_forward_angle);
     4fa:	8c e3       	ldi	r24, 0x3C	; 60
     4fc:	0e 94 71 01 	call	0x2e2	; 0x2e2 <servo_2>
}
     500:	cf 91       	pop	r28
     502:	df 91       	pop	r29
     504:	08 95       	ret

00000506 <right_leg_back>:

void right_leg_back (void)
{
     506:	df 93       	push	r29
     508:	cf 93       	push	r28
     50a:	cd b7       	in	r28, 0x3d	; 61
     50c:	de b7       	in	r29, 0x3e	; 62
 servo_2(right_leg_back_angle);
     50e:	88 e7       	ldi	r24, 0x78	; 120
     510:	0e 94 71 01 	call	0x2e2	; 0x2e2 <servo_2>
}
     514:	cf 91       	pop	r28
     516:	df 91       	pop	r29
     518:	08 95       	ret

0000051a <mid_leg_centere>:

void mid_leg_centere (void)
{
     51a:	df 93       	push	r29
     51c:	cf 93       	push	r28
     51e:	cd b7       	in	r28, 0x3d	; 61
     520:	de b7       	in	r29, 0x3e	; 62
 servo_3(robot_stand_angle_centere_servo);
     522:	8a e5       	ldi	r24, 0x5A	; 90
     524:	0e 94 bf 01 	call	0x37e	; 0x37e <servo_3>
}
     528:	cf 91       	pop	r28
     52a:	df 91       	pop	r29
     52c:	08 95       	ret

0000052e <mid_leg_left_down>:

void mid_leg_left_down (void)
{
     52e:	df 93       	push	r29
     530:	cf 93       	push	r28
     532:	cd b7       	in	r28, 0x3d	; 61
     534:	de b7       	in	r29, 0x3e	; 62
 servo_3(mid_leg_left_down_angle);
     536:	8b e4       	ldi	r24, 0x4B	; 75
     538:	0e 94 bf 01 	call	0x37e	; 0x37e <servo_3>
}
     53c:	cf 91       	pop	r28
     53e:	df 91       	pop	r29
     540:	08 95       	ret

00000542 <mid_leg_right_down>:

void mid_leg_right_down (void)
{
     542:	df 93       	push	r29
     544:	cf 93       	push	r28
     546:	cd b7       	in	r28, 0x3d	; 61
     548:	de b7       	in	r29, 0x3e	; 62
 servo_3(mid_leg_right_down_angle);
     54a:	89 e6       	ldi	r24, 0x69	; 105
     54c:	0e 94 bf 01 	call	0x37e	; 0x37e <servo_3>
}
     550:	cf 91       	pop	r28
     552:	df 91       	pop	r29
     554:	08 95       	ret

00000556 <forward_init>:


void forward_init (void) //sets robot's legs in proper angle without skidding before starting forward walk
						 //if robot moves forward without calling this function it might drift a bit in left or right
						 //direction at the time of starting foreard motion
{
     556:	df 93       	push	r29
     558:	cf 93       	push	r28
     55a:	cd b7       	in	r28, 0x3d	; 61
     55c:	de b7       	in	r29, 0x3e	; 62
     55e:	aa 97       	sbiw	r28, 0x2a	; 42
     560:	0f b6       	in	r0, 0x3f	; 63
     562:	f8 94       	cli
     564:	de bf       	out	0x3e, r29	; 62
     566:	0f be       	out	0x3f, r0	; 63
     568:	cd bf       	out	0x3d, r28	; 61
 stand_position();
     56a:	0e 94 41 02 	call	0x482	; 0x482 <stand_position>
     56e:	80 e0       	ldi	r24, 0x00	; 0
     570:	90 e0       	ldi	r25, 0x00	; 0
     572:	aa e7       	ldi	r26, 0x7A	; 122
     574:	b3 e4       	ldi	r27, 0x43	; 67
     576:	8f a3       	std	Y+39, r24	; 0x27
     578:	98 a7       	std	Y+40, r25	; 0x28
     57a:	a9 a7       	std	Y+41, r26	; 0x29
     57c:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     57e:	6f a1       	ldd	r22, Y+39	; 0x27
     580:	78 a5       	ldd	r23, Y+40	; 0x28
     582:	89 a5       	ldd	r24, Y+41	; 0x29
     584:	9a a5       	ldd	r25, Y+42	; 0x2a
     586:	26 e6       	ldi	r18, 0x66	; 102
     588:	36 e6       	ldi	r19, 0x66	; 102
     58a:	46 e6       	ldi	r20, 0x66	; 102
     58c:	55 e4       	ldi	r21, 0x45	; 69
     58e:	0e 94 69 13 	call	0x26d2	; 0x26d2 <__mulsf3>
     592:	dc 01       	movw	r26, r24
     594:	cb 01       	movw	r24, r22
     596:	8b a3       	std	Y+35, r24	; 0x23
     598:	9c a3       	std	Y+36, r25	; 0x24
     59a:	ad a3       	std	Y+37, r26	; 0x25
     59c:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
     59e:	6b a1       	ldd	r22, Y+35	; 0x23
     5a0:	7c a1       	ldd	r23, Y+36	; 0x24
     5a2:	8d a1       	ldd	r24, Y+37	; 0x25
     5a4:	9e a1       	ldd	r25, Y+38	; 0x26
     5a6:	20 e0       	ldi	r18, 0x00	; 0
     5a8:	30 e0       	ldi	r19, 0x00	; 0
     5aa:	40 e8       	ldi	r20, 0x80	; 128
     5ac:	5f e3       	ldi	r21, 0x3F	; 63
     5ae:	0e 94 6f 15 	call	0x2ade	; 0x2ade <__ltsf2>
     5b2:	88 23       	and	r24, r24
     5b4:	2c f4       	brge	.+10     	; 0x5c0 <forward_init+0x6a>
		__ticks = 1;
     5b6:	81 e0       	ldi	r24, 0x01	; 1
     5b8:	90 e0       	ldi	r25, 0x00	; 0
     5ba:	9a a3       	std	Y+34, r25	; 0x22
     5bc:	89 a3       	std	Y+33, r24	; 0x21
     5be:	3f c0       	rjmp	.+126    	; 0x63e <forward_init+0xe8>
	else if (__tmp > 65535)
     5c0:	6b a1       	ldd	r22, Y+35	; 0x23
     5c2:	7c a1       	ldd	r23, Y+36	; 0x24
     5c4:	8d a1       	ldd	r24, Y+37	; 0x25
     5c6:	9e a1       	ldd	r25, Y+38	; 0x26
     5c8:	20 e0       	ldi	r18, 0x00	; 0
     5ca:	3f ef       	ldi	r19, 0xFF	; 255
     5cc:	4f e7       	ldi	r20, 0x7F	; 127
     5ce:	57 e4       	ldi	r21, 0x47	; 71
     5d0:	0e 94 0f 15 	call	0x2a1e	; 0x2a1e <__gtsf2>
     5d4:	18 16       	cp	r1, r24
     5d6:	4c f5       	brge	.+82     	; 0x62a <forward_init+0xd4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     5d8:	6f a1       	ldd	r22, Y+39	; 0x27
     5da:	78 a5       	ldd	r23, Y+40	; 0x28
     5dc:	89 a5       	ldd	r24, Y+41	; 0x29
     5de:	9a a5       	ldd	r25, Y+42	; 0x2a
     5e0:	20 e0       	ldi	r18, 0x00	; 0
     5e2:	30 e0       	ldi	r19, 0x00	; 0
     5e4:	40 e2       	ldi	r20, 0x20	; 32
     5e6:	51 e4       	ldi	r21, 0x41	; 65
     5e8:	0e 94 69 13 	call	0x26d2	; 0x26d2 <__mulsf3>
     5ec:	dc 01       	movw	r26, r24
     5ee:	cb 01       	movw	r24, r22
     5f0:	bc 01       	movw	r22, r24
     5f2:	cd 01       	movw	r24, r26
     5f4:	0e 94 93 11 	call	0x2326	; 0x2326 <__fixunssfsi>
     5f8:	dc 01       	movw	r26, r24
     5fa:	cb 01       	movw	r24, r22
     5fc:	9a a3       	std	Y+34, r25	; 0x22
     5fe:	89 a3       	std	Y+33, r24	; 0x21
     600:	0f c0       	rjmp	.+30     	; 0x620 <forward_init+0xca>
     602:	80 e7       	ldi	r24, 0x70	; 112
     604:	91 e0       	ldi	r25, 0x01	; 1
     606:	98 a3       	std	Y+32, r25	; 0x20
     608:	8f 8f       	std	Y+31, r24	; 0x1f
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     60a:	8f 8d       	ldd	r24, Y+31	; 0x1f
     60c:	98 a1       	ldd	r25, Y+32	; 0x20
     60e:	01 97       	sbiw	r24, 0x01	; 1
     610:	f1 f7       	brne	.-4      	; 0x60e <forward_init+0xb8>
     612:	98 a3       	std	Y+32, r25	; 0x20
     614:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     616:	89 a1       	ldd	r24, Y+33	; 0x21
     618:	9a a1       	ldd	r25, Y+34	; 0x22
     61a:	01 97       	sbiw	r24, 0x01	; 1
     61c:	9a a3       	std	Y+34, r25	; 0x22
     61e:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     620:	89 a1       	ldd	r24, Y+33	; 0x21
     622:	9a a1       	ldd	r25, Y+34	; 0x22
     624:	00 97       	sbiw	r24, 0x00	; 0
     626:	69 f7       	brne	.-38     	; 0x602 <forward_init+0xac>
     628:	14 c0       	rjmp	.+40     	; 0x652 <forward_init+0xfc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     62a:	6b a1       	ldd	r22, Y+35	; 0x23
     62c:	7c a1       	ldd	r23, Y+36	; 0x24
     62e:	8d a1       	ldd	r24, Y+37	; 0x25
     630:	9e a1       	ldd	r25, Y+38	; 0x26
     632:	0e 94 93 11 	call	0x2326	; 0x2326 <__fixunssfsi>
     636:	dc 01       	movw	r26, r24
     638:	cb 01       	movw	r24, r22
     63a:	9a a3       	std	Y+34, r25	; 0x22
     63c:	89 a3       	std	Y+33, r24	; 0x21
     63e:	89 a1       	ldd	r24, Y+33	; 0x21
     640:	9a a1       	ldd	r25, Y+34	; 0x22
     642:	9e 8f       	std	Y+30, r25	; 0x1e
     644:	8d 8f       	std	Y+29, r24	; 0x1d
     646:	8d 8d       	ldd	r24, Y+29	; 0x1d
     648:	9e 8d       	ldd	r25, Y+30	; 0x1e
     64a:	01 97       	sbiw	r24, 0x01	; 1
     64c:	f1 f7       	brne	.-4      	; 0x64a <forward_init+0xf4>
     64e:	9e 8f       	std	Y+30, r25	; 0x1e
     650:	8d 8f       	std	Y+29, r24	; 0x1d
 _delay_ms(250);

 mid_leg_right_down();
     652:	0e 94 a1 02 	call	0x542	; 0x542 <mid_leg_right_down>
     656:	80 e0       	ldi	r24, 0x00	; 0
     658:	90 e0       	ldi	r25, 0x00	; 0
     65a:	aa e7       	ldi	r26, 0x7A	; 122
     65c:	b3 e4       	ldi	r27, 0x43	; 67
     65e:	89 8f       	std	Y+25, r24	; 0x19
     660:	9a 8f       	std	Y+26, r25	; 0x1a
     662:	ab 8f       	std	Y+27, r26	; 0x1b
     664:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     666:	69 8d       	ldd	r22, Y+25	; 0x19
     668:	7a 8d       	ldd	r23, Y+26	; 0x1a
     66a:	8b 8d       	ldd	r24, Y+27	; 0x1b
     66c:	9c 8d       	ldd	r25, Y+28	; 0x1c
     66e:	26 e6       	ldi	r18, 0x66	; 102
     670:	36 e6       	ldi	r19, 0x66	; 102
     672:	46 e6       	ldi	r20, 0x66	; 102
     674:	55 e4       	ldi	r21, 0x45	; 69
     676:	0e 94 69 13 	call	0x26d2	; 0x26d2 <__mulsf3>
     67a:	dc 01       	movw	r26, r24
     67c:	cb 01       	movw	r24, r22
     67e:	8d 8b       	std	Y+21, r24	; 0x15
     680:	9e 8b       	std	Y+22, r25	; 0x16
     682:	af 8b       	std	Y+23, r26	; 0x17
     684:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     686:	6d 89       	ldd	r22, Y+21	; 0x15
     688:	7e 89       	ldd	r23, Y+22	; 0x16
     68a:	8f 89       	ldd	r24, Y+23	; 0x17
     68c:	98 8d       	ldd	r25, Y+24	; 0x18
     68e:	20 e0       	ldi	r18, 0x00	; 0
     690:	30 e0       	ldi	r19, 0x00	; 0
     692:	40 e8       	ldi	r20, 0x80	; 128
     694:	5f e3       	ldi	r21, 0x3F	; 63
     696:	0e 94 6f 15 	call	0x2ade	; 0x2ade <__ltsf2>
     69a:	88 23       	and	r24, r24
     69c:	2c f4       	brge	.+10     	; 0x6a8 <forward_init+0x152>
		__ticks = 1;
     69e:	81 e0       	ldi	r24, 0x01	; 1
     6a0:	90 e0       	ldi	r25, 0x00	; 0
     6a2:	9c 8b       	std	Y+20, r25	; 0x14
     6a4:	8b 8b       	std	Y+19, r24	; 0x13
     6a6:	3f c0       	rjmp	.+126    	; 0x726 <forward_init+0x1d0>
	else if (__tmp > 65535)
     6a8:	6d 89       	ldd	r22, Y+21	; 0x15
     6aa:	7e 89       	ldd	r23, Y+22	; 0x16
     6ac:	8f 89       	ldd	r24, Y+23	; 0x17
     6ae:	98 8d       	ldd	r25, Y+24	; 0x18
     6b0:	20 e0       	ldi	r18, 0x00	; 0
     6b2:	3f ef       	ldi	r19, 0xFF	; 255
     6b4:	4f e7       	ldi	r20, 0x7F	; 127
     6b6:	57 e4       	ldi	r21, 0x47	; 71
     6b8:	0e 94 0f 15 	call	0x2a1e	; 0x2a1e <__gtsf2>
     6bc:	18 16       	cp	r1, r24
     6be:	4c f5       	brge	.+82     	; 0x712 <forward_init+0x1bc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     6c0:	69 8d       	ldd	r22, Y+25	; 0x19
     6c2:	7a 8d       	ldd	r23, Y+26	; 0x1a
     6c4:	8b 8d       	ldd	r24, Y+27	; 0x1b
     6c6:	9c 8d       	ldd	r25, Y+28	; 0x1c
     6c8:	20 e0       	ldi	r18, 0x00	; 0
     6ca:	30 e0       	ldi	r19, 0x00	; 0
     6cc:	40 e2       	ldi	r20, 0x20	; 32
     6ce:	51 e4       	ldi	r21, 0x41	; 65
     6d0:	0e 94 69 13 	call	0x26d2	; 0x26d2 <__mulsf3>
     6d4:	dc 01       	movw	r26, r24
     6d6:	cb 01       	movw	r24, r22
     6d8:	bc 01       	movw	r22, r24
     6da:	cd 01       	movw	r24, r26
     6dc:	0e 94 93 11 	call	0x2326	; 0x2326 <__fixunssfsi>
     6e0:	dc 01       	movw	r26, r24
     6e2:	cb 01       	movw	r24, r22
     6e4:	9c 8b       	std	Y+20, r25	; 0x14
     6e6:	8b 8b       	std	Y+19, r24	; 0x13
     6e8:	0f c0       	rjmp	.+30     	; 0x708 <forward_init+0x1b2>
     6ea:	80 e7       	ldi	r24, 0x70	; 112
     6ec:	91 e0       	ldi	r25, 0x01	; 1
     6ee:	9a 8b       	std	Y+18, r25	; 0x12
     6f0:	89 8b       	std	Y+17, r24	; 0x11
     6f2:	89 89       	ldd	r24, Y+17	; 0x11
     6f4:	9a 89       	ldd	r25, Y+18	; 0x12
     6f6:	01 97       	sbiw	r24, 0x01	; 1
     6f8:	f1 f7       	brne	.-4      	; 0x6f6 <forward_init+0x1a0>
     6fa:	9a 8b       	std	Y+18, r25	; 0x12
     6fc:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     6fe:	8b 89       	ldd	r24, Y+19	; 0x13
     700:	9c 89       	ldd	r25, Y+20	; 0x14
     702:	01 97       	sbiw	r24, 0x01	; 1
     704:	9c 8b       	std	Y+20, r25	; 0x14
     706:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     708:	8b 89       	ldd	r24, Y+19	; 0x13
     70a:	9c 89       	ldd	r25, Y+20	; 0x14
     70c:	00 97       	sbiw	r24, 0x00	; 0
     70e:	69 f7       	brne	.-38     	; 0x6ea <forward_init+0x194>
     710:	14 c0       	rjmp	.+40     	; 0x73a <forward_init+0x1e4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     712:	6d 89       	ldd	r22, Y+21	; 0x15
     714:	7e 89       	ldd	r23, Y+22	; 0x16
     716:	8f 89       	ldd	r24, Y+23	; 0x17
     718:	98 8d       	ldd	r25, Y+24	; 0x18
     71a:	0e 94 93 11 	call	0x2326	; 0x2326 <__fixunssfsi>
     71e:	dc 01       	movw	r26, r24
     720:	cb 01       	movw	r24, r22
     722:	9c 8b       	std	Y+20, r25	; 0x14
     724:	8b 8b       	std	Y+19, r24	; 0x13
     726:	8b 89       	ldd	r24, Y+19	; 0x13
     728:	9c 89       	ldd	r25, Y+20	; 0x14
     72a:	98 8b       	std	Y+16, r25	; 0x10
     72c:	8f 87       	std	Y+15, r24	; 0x0f
     72e:	8f 85       	ldd	r24, Y+15	; 0x0f
     730:	98 89       	ldd	r25, Y+16	; 0x10
     732:	01 97       	sbiw	r24, 0x01	; 1
     734:	f1 f7       	brne	.-4      	; 0x732 <forward_init+0x1dc>
     736:	98 8b       	std	Y+16, r25	; 0x10
     738:	8f 87       	std	Y+15, r24	; 0x0f
 _delay_ms(250);
 right_leg_back();
     73a:	0e 94 83 02 	call	0x506	; 0x506 <right_leg_back>
     73e:	80 e0       	ldi	r24, 0x00	; 0
     740:	90 e0       	ldi	r25, 0x00	; 0
     742:	aa e7       	ldi	r26, 0x7A	; 122
     744:	b3 e4       	ldi	r27, 0x43	; 67
     746:	8b 87       	std	Y+11, r24	; 0x0b
     748:	9c 87       	std	Y+12, r25	; 0x0c
     74a:	ad 87       	std	Y+13, r26	; 0x0d
     74c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     74e:	6b 85       	ldd	r22, Y+11	; 0x0b
     750:	7c 85       	ldd	r23, Y+12	; 0x0c
     752:	8d 85       	ldd	r24, Y+13	; 0x0d
     754:	9e 85       	ldd	r25, Y+14	; 0x0e
     756:	26 e6       	ldi	r18, 0x66	; 102
     758:	36 e6       	ldi	r19, 0x66	; 102
     75a:	46 e6       	ldi	r20, 0x66	; 102
     75c:	55 e4       	ldi	r21, 0x45	; 69
     75e:	0e 94 69 13 	call	0x26d2	; 0x26d2 <__mulsf3>
     762:	dc 01       	movw	r26, r24
     764:	cb 01       	movw	r24, r22
     766:	8f 83       	std	Y+7, r24	; 0x07
     768:	98 87       	std	Y+8, r25	; 0x08
     76a:	a9 87       	std	Y+9, r26	; 0x09
     76c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     76e:	6f 81       	ldd	r22, Y+7	; 0x07
     770:	78 85       	ldd	r23, Y+8	; 0x08
     772:	89 85       	ldd	r24, Y+9	; 0x09
     774:	9a 85       	ldd	r25, Y+10	; 0x0a
     776:	20 e0       	ldi	r18, 0x00	; 0
     778:	30 e0       	ldi	r19, 0x00	; 0
     77a:	40 e8       	ldi	r20, 0x80	; 128
     77c:	5f e3       	ldi	r21, 0x3F	; 63
     77e:	0e 94 6f 15 	call	0x2ade	; 0x2ade <__ltsf2>
     782:	88 23       	and	r24, r24
     784:	2c f4       	brge	.+10     	; 0x790 <forward_init+0x23a>
		__ticks = 1;
     786:	81 e0       	ldi	r24, 0x01	; 1
     788:	90 e0       	ldi	r25, 0x00	; 0
     78a:	9e 83       	std	Y+6, r25	; 0x06
     78c:	8d 83       	std	Y+5, r24	; 0x05
     78e:	3f c0       	rjmp	.+126    	; 0x80e <forward_init+0x2b8>
	else if (__tmp > 65535)
     790:	6f 81       	ldd	r22, Y+7	; 0x07
     792:	78 85       	ldd	r23, Y+8	; 0x08
     794:	89 85       	ldd	r24, Y+9	; 0x09
     796:	9a 85       	ldd	r25, Y+10	; 0x0a
     798:	20 e0       	ldi	r18, 0x00	; 0
     79a:	3f ef       	ldi	r19, 0xFF	; 255
     79c:	4f e7       	ldi	r20, 0x7F	; 127
     79e:	57 e4       	ldi	r21, 0x47	; 71
     7a0:	0e 94 0f 15 	call	0x2a1e	; 0x2a1e <__gtsf2>
     7a4:	18 16       	cp	r1, r24
     7a6:	4c f5       	brge	.+82     	; 0x7fa <forward_init+0x2a4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     7a8:	6b 85       	ldd	r22, Y+11	; 0x0b
     7aa:	7c 85       	ldd	r23, Y+12	; 0x0c
     7ac:	8d 85       	ldd	r24, Y+13	; 0x0d
     7ae:	9e 85       	ldd	r25, Y+14	; 0x0e
     7b0:	20 e0       	ldi	r18, 0x00	; 0
     7b2:	30 e0       	ldi	r19, 0x00	; 0
     7b4:	40 e2       	ldi	r20, 0x20	; 32
     7b6:	51 e4       	ldi	r21, 0x41	; 65
     7b8:	0e 94 69 13 	call	0x26d2	; 0x26d2 <__mulsf3>
     7bc:	dc 01       	movw	r26, r24
     7be:	cb 01       	movw	r24, r22
     7c0:	bc 01       	movw	r22, r24
     7c2:	cd 01       	movw	r24, r26
     7c4:	0e 94 93 11 	call	0x2326	; 0x2326 <__fixunssfsi>
     7c8:	dc 01       	movw	r26, r24
     7ca:	cb 01       	movw	r24, r22
     7cc:	9e 83       	std	Y+6, r25	; 0x06
     7ce:	8d 83       	std	Y+5, r24	; 0x05
     7d0:	0f c0       	rjmp	.+30     	; 0x7f0 <forward_init+0x29a>
     7d2:	80 e7       	ldi	r24, 0x70	; 112
     7d4:	91 e0       	ldi	r25, 0x01	; 1
     7d6:	9c 83       	std	Y+4, r25	; 0x04
     7d8:	8b 83       	std	Y+3, r24	; 0x03
     7da:	8b 81       	ldd	r24, Y+3	; 0x03
     7dc:	9c 81       	ldd	r25, Y+4	; 0x04
     7de:	01 97       	sbiw	r24, 0x01	; 1
     7e0:	f1 f7       	brne	.-4      	; 0x7de <forward_init+0x288>
     7e2:	9c 83       	std	Y+4, r25	; 0x04
     7e4:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     7e6:	8d 81       	ldd	r24, Y+5	; 0x05
     7e8:	9e 81       	ldd	r25, Y+6	; 0x06
     7ea:	01 97       	sbiw	r24, 0x01	; 1
     7ec:	9e 83       	std	Y+6, r25	; 0x06
     7ee:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     7f0:	8d 81       	ldd	r24, Y+5	; 0x05
     7f2:	9e 81       	ldd	r25, Y+6	; 0x06
     7f4:	00 97       	sbiw	r24, 0x00	; 0
     7f6:	69 f7       	brne	.-38     	; 0x7d2 <forward_init+0x27c>
     7f8:	14 c0       	rjmp	.+40     	; 0x822 <forward_init+0x2cc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     7fa:	6f 81       	ldd	r22, Y+7	; 0x07
     7fc:	78 85       	ldd	r23, Y+8	; 0x08
     7fe:	89 85       	ldd	r24, Y+9	; 0x09
     800:	9a 85       	ldd	r25, Y+10	; 0x0a
     802:	0e 94 93 11 	call	0x2326	; 0x2326 <__fixunssfsi>
     806:	dc 01       	movw	r26, r24
     808:	cb 01       	movw	r24, r22
     80a:	9e 83       	std	Y+6, r25	; 0x06
     80c:	8d 83       	std	Y+5, r24	; 0x05
     80e:	8d 81       	ldd	r24, Y+5	; 0x05
     810:	9e 81       	ldd	r25, Y+6	; 0x06
     812:	9a 83       	std	Y+2, r25	; 0x02
     814:	89 83       	std	Y+1, r24	; 0x01
     816:	89 81       	ldd	r24, Y+1	; 0x01
     818:	9a 81       	ldd	r25, Y+2	; 0x02
     81a:	01 97       	sbiw	r24, 0x01	; 1
     81c:	f1 f7       	brne	.-4      	; 0x81a <forward_init+0x2c4>
     81e:	9a 83       	std	Y+2, r25	; 0x02
     820:	89 83       	std	Y+1, r24	; 0x01
 _delay_ms(250);
}
     822:	aa 96       	adiw	r28, 0x2a	; 42
     824:	0f b6       	in	r0, 0x3f	; 63
     826:	f8 94       	cli
     828:	de bf       	out	0x3e, r29	; 62
     82a:	0f be       	out	0x3f, r0	; 63
     82c:	cd bf       	out	0x3d, r28	; 61
     82e:	cf 91       	pop	r28
     830:	df 91       	pop	r29
     832:	08 95       	ret

00000834 <forward>:

void forward (void) //move forward
{
     834:	df 93       	push	r29
     836:	cf 93       	push	r28
     838:	cd b7       	in	r28, 0x3d	; 61
     83a:	de b7       	in	r29, 0x3e	; 62
     83c:	e8 97       	sbiw	r28, 0x38	; 56
     83e:	0f b6       	in	r0, 0x3f	; 63
     840:	f8 94       	cli
     842:	de bf       	out	0x3e, r29	; 62
     844:	0f be       	out	0x3f, r0	; 63
     846:	cd bf       	out	0x3d, r28	; 61
 mid_leg_left_down();
     848:	0e 94 97 02 	call	0x52e	; 0x52e <mid_leg_left_down>
     84c:	80 e0       	ldi	r24, 0x00	; 0
     84e:	90 e0       	ldi	r25, 0x00	; 0
     850:	aa e7       	ldi	r26, 0x7A	; 122
     852:	b3 e4       	ldi	r27, 0x43	; 67
     854:	8d ab       	std	Y+53, r24	; 0x35
     856:	9e ab       	std	Y+54, r25	; 0x36
     858:	af ab       	std	Y+55, r26	; 0x37
     85a:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     85c:	6d a9       	ldd	r22, Y+53	; 0x35
     85e:	7e a9       	ldd	r23, Y+54	; 0x36
     860:	8f a9       	ldd	r24, Y+55	; 0x37
     862:	98 ad       	ldd	r25, Y+56	; 0x38
     864:	26 e6       	ldi	r18, 0x66	; 102
     866:	36 e6       	ldi	r19, 0x66	; 102
     868:	46 e6       	ldi	r20, 0x66	; 102
     86a:	55 e4       	ldi	r21, 0x45	; 69
     86c:	0e 94 69 13 	call	0x26d2	; 0x26d2 <__mulsf3>
     870:	dc 01       	movw	r26, r24
     872:	cb 01       	movw	r24, r22
     874:	89 ab       	std	Y+49, r24	; 0x31
     876:	9a ab       	std	Y+50, r25	; 0x32
     878:	ab ab       	std	Y+51, r26	; 0x33
     87a:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
     87c:	69 a9       	ldd	r22, Y+49	; 0x31
     87e:	7a a9       	ldd	r23, Y+50	; 0x32
     880:	8b a9       	ldd	r24, Y+51	; 0x33
     882:	9c a9       	ldd	r25, Y+52	; 0x34
     884:	20 e0       	ldi	r18, 0x00	; 0
     886:	30 e0       	ldi	r19, 0x00	; 0
     888:	40 e8       	ldi	r20, 0x80	; 128
     88a:	5f e3       	ldi	r21, 0x3F	; 63
     88c:	0e 94 6f 15 	call	0x2ade	; 0x2ade <__ltsf2>
     890:	88 23       	and	r24, r24
     892:	2c f4       	brge	.+10     	; 0x89e <forward+0x6a>
		__ticks = 1;
     894:	81 e0       	ldi	r24, 0x01	; 1
     896:	90 e0       	ldi	r25, 0x00	; 0
     898:	98 ab       	std	Y+48, r25	; 0x30
     89a:	8f a7       	std	Y+47, r24	; 0x2f
     89c:	3f c0       	rjmp	.+126    	; 0x91c <forward+0xe8>
	else if (__tmp > 65535)
     89e:	69 a9       	ldd	r22, Y+49	; 0x31
     8a0:	7a a9       	ldd	r23, Y+50	; 0x32
     8a2:	8b a9       	ldd	r24, Y+51	; 0x33
     8a4:	9c a9       	ldd	r25, Y+52	; 0x34
     8a6:	20 e0       	ldi	r18, 0x00	; 0
     8a8:	3f ef       	ldi	r19, 0xFF	; 255
     8aa:	4f e7       	ldi	r20, 0x7F	; 127
     8ac:	57 e4       	ldi	r21, 0x47	; 71
     8ae:	0e 94 0f 15 	call	0x2a1e	; 0x2a1e <__gtsf2>
     8b2:	18 16       	cp	r1, r24
     8b4:	4c f5       	brge	.+82     	; 0x908 <forward+0xd4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     8b6:	6d a9       	ldd	r22, Y+53	; 0x35
     8b8:	7e a9       	ldd	r23, Y+54	; 0x36
     8ba:	8f a9       	ldd	r24, Y+55	; 0x37
     8bc:	98 ad       	ldd	r25, Y+56	; 0x38
     8be:	20 e0       	ldi	r18, 0x00	; 0
     8c0:	30 e0       	ldi	r19, 0x00	; 0
     8c2:	40 e2       	ldi	r20, 0x20	; 32
     8c4:	51 e4       	ldi	r21, 0x41	; 65
     8c6:	0e 94 69 13 	call	0x26d2	; 0x26d2 <__mulsf3>
     8ca:	dc 01       	movw	r26, r24
     8cc:	cb 01       	movw	r24, r22
     8ce:	bc 01       	movw	r22, r24
     8d0:	cd 01       	movw	r24, r26
     8d2:	0e 94 93 11 	call	0x2326	; 0x2326 <__fixunssfsi>
     8d6:	dc 01       	movw	r26, r24
     8d8:	cb 01       	movw	r24, r22
     8da:	98 ab       	std	Y+48, r25	; 0x30
     8dc:	8f a7       	std	Y+47, r24	; 0x2f
     8de:	0f c0       	rjmp	.+30     	; 0x8fe <forward+0xca>
     8e0:	80 e7       	ldi	r24, 0x70	; 112
     8e2:	91 e0       	ldi	r25, 0x01	; 1
     8e4:	9e a7       	std	Y+46, r25	; 0x2e
     8e6:	8d a7       	std	Y+45, r24	; 0x2d
     8e8:	8d a5       	ldd	r24, Y+45	; 0x2d
     8ea:	9e a5       	ldd	r25, Y+46	; 0x2e
     8ec:	01 97       	sbiw	r24, 0x01	; 1
     8ee:	f1 f7       	brne	.-4      	; 0x8ec <forward+0xb8>
     8f0:	9e a7       	std	Y+46, r25	; 0x2e
     8f2:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     8f4:	8f a5       	ldd	r24, Y+47	; 0x2f
     8f6:	98 a9       	ldd	r25, Y+48	; 0x30
     8f8:	01 97       	sbiw	r24, 0x01	; 1
     8fa:	98 ab       	std	Y+48, r25	; 0x30
     8fc:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     8fe:	8f a5       	ldd	r24, Y+47	; 0x2f
     900:	98 a9       	ldd	r25, Y+48	; 0x30
     902:	00 97       	sbiw	r24, 0x00	; 0
     904:	69 f7       	brne	.-38     	; 0x8e0 <forward+0xac>
     906:	14 c0       	rjmp	.+40     	; 0x930 <forward+0xfc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     908:	69 a9       	ldd	r22, Y+49	; 0x31
     90a:	7a a9       	ldd	r23, Y+50	; 0x32
     90c:	8b a9       	ldd	r24, Y+51	; 0x33
     90e:	9c a9       	ldd	r25, Y+52	; 0x34
     910:	0e 94 93 11 	call	0x2326	; 0x2326 <__fixunssfsi>
     914:	dc 01       	movw	r26, r24
     916:	cb 01       	movw	r24, r22
     918:	98 ab       	std	Y+48, r25	; 0x30
     91a:	8f a7       	std	Y+47, r24	; 0x2f
     91c:	8f a5       	ldd	r24, Y+47	; 0x2f
     91e:	98 a9       	ldd	r25, Y+48	; 0x30
     920:	9c a7       	std	Y+44, r25	; 0x2c
     922:	8b a7       	std	Y+43, r24	; 0x2b
     924:	8b a5       	ldd	r24, Y+43	; 0x2b
     926:	9c a5       	ldd	r25, Y+44	; 0x2c
     928:	01 97       	sbiw	r24, 0x01	; 1
     92a:	f1 f7       	brne	.-4      	; 0x928 <forward+0xf4>
     92c:	9c a7       	std	Y+44, r25	; 0x2c
     92e:	8b a7       	std	Y+43, r24	; 0x2b
 _delay_ms(step_time);
 
 left_leg_forward();
     930:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <left_leg_forward>
 right_leg_back();
     934:	0e 94 83 02 	call	0x506	; 0x506 <right_leg_back>
     938:	80 e0       	ldi	r24, 0x00	; 0
     93a:	90 e0       	ldi	r25, 0x00	; 0
     93c:	aa e7       	ldi	r26, 0x7A	; 122
     93e:	b3 e4       	ldi	r27, 0x43	; 67
     940:	8f a3       	std	Y+39, r24	; 0x27
     942:	98 a7       	std	Y+40, r25	; 0x28
     944:	a9 a7       	std	Y+41, r26	; 0x29
     946:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     948:	6f a1       	ldd	r22, Y+39	; 0x27
     94a:	78 a5       	ldd	r23, Y+40	; 0x28
     94c:	89 a5       	ldd	r24, Y+41	; 0x29
     94e:	9a a5       	ldd	r25, Y+42	; 0x2a
     950:	26 e6       	ldi	r18, 0x66	; 102
     952:	36 e6       	ldi	r19, 0x66	; 102
     954:	46 e6       	ldi	r20, 0x66	; 102
     956:	55 e4       	ldi	r21, 0x45	; 69
     958:	0e 94 69 13 	call	0x26d2	; 0x26d2 <__mulsf3>
     95c:	dc 01       	movw	r26, r24
     95e:	cb 01       	movw	r24, r22
     960:	8b a3       	std	Y+35, r24	; 0x23
     962:	9c a3       	std	Y+36, r25	; 0x24
     964:	ad a3       	std	Y+37, r26	; 0x25
     966:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
     968:	6b a1       	ldd	r22, Y+35	; 0x23
     96a:	7c a1       	ldd	r23, Y+36	; 0x24
     96c:	8d a1       	ldd	r24, Y+37	; 0x25
     96e:	9e a1       	ldd	r25, Y+38	; 0x26
     970:	20 e0       	ldi	r18, 0x00	; 0
     972:	30 e0       	ldi	r19, 0x00	; 0
     974:	40 e8       	ldi	r20, 0x80	; 128
     976:	5f e3       	ldi	r21, 0x3F	; 63
     978:	0e 94 6f 15 	call	0x2ade	; 0x2ade <__ltsf2>
     97c:	88 23       	and	r24, r24
     97e:	2c f4       	brge	.+10     	; 0x98a <forward+0x156>
		__ticks = 1;
     980:	81 e0       	ldi	r24, 0x01	; 1
     982:	90 e0       	ldi	r25, 0x00	; 0
     984:	9a a3       	std	Y+34, r25	; 0x22
     986:	89 a3       	std	Y+33, r24	; 0x21
     988:	3f c0       	rjmp	.+126    	; 0xa08 <forward+0x1d4>
	else if (__tmp > 65535)
     98a:	6b a1       	ldd	r22, Y+35	; 0x23
     98c:	7c a1       	ldd	r23, Y+36	; 0x24
     98e:	8d a1       	ldd	r24, Y+37	; 0x25
     990:	9e a1       	ldd	r25, Y+38	; 0x26
     992:	20 e0       	ldi	r18, 0x00	; 0
     994:	3f ef       	ldi	r19, 0xFF	; 255
     996:	4f e7       	ldi	r20, 0x7F	; 127
     998:	57 e4       	ldi	r21, 0x47	; 71
     99a:	0e 94 0f 15 	call	0x2a1e	; 0x2a1e <__gtsf2>
     99e:	18 16       	cp	r1, r24
     9a0:	4c f5       	brge	.+82     	; 0x9f4 <forward+0x1c0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     9a2:	6f a1       	ldd	r22, Y+39	; 0x27
     9a4:	78 a5       	ldd	r23, Y+40	; 0x28
     9a6:	89 a5       	ldd	r24, Y+41	; 0x29
     9a8:	9a a5       	ldd	r25, Y+42	; 0x2a
     9aa:	20 e0       	ldi	r18, 0x00	; 0
     9ac:	30 e0       	ldi	r19, 0x00	; 0
     9ae:	40 e2       	ldi	r20, 0x20	; 32
     9b0:	51 e4       	ldi	r21, 0x41	; 65
     9b2:	0e 94 69 13 	call	0x26d2	; 0x26d2 <__mulsf3>
     9b6:	dc 01       	movw	r26, r24
     9b8:	cb 01       	movw	r24, r22
     9ba:	bc 01       	movw	r22, r24
     9bc:	cd 01       	movw	r24, r26
     9be:	0e 94 93 11 	call	0x2326	; 0x2326 <__fixunssfsi>
     9c2:	dc 01       	movw	r26, r24
     9c4:	cb 01       	movw	r24, r22
     9c6:	9a a3       	std	Y+34, r25	; 0x22
     9c8:	89 a3       	std	Y+33, r24	; 0x21
     9ca:	0f c0       	rjmp	.+30     	; 0x9ea <forward+0x1b6>
     9cc:	80 e7       	ldi	r24, 0x70	; 112
     9ce:	91 e0       	ldi	r25, 0x01	; 1
     9d0:	98 a3       	std	Y+32, r25	; 0x20
     9d2:	8f 8f       	std	Y+31, r24	; 0x1f
     9d4:	8f 8d       	ldd	r24, Y+31	; 0x1f
     9d6:	98 a1       	ldd	r25, Y+32	; 0x20
     9d8:	01 97       	sbiw	r24, 0x01	; 1
     9da:	f1 f7       	brne	.-4      	; 0x9d8 <forward+0x1a4>
     9dc:	98 a3       	std	Y+32, r25	; 0x20
     9de:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     9e0:	89 a1       	ldd	r24, Y+33	; 0x21
     9e2:	9a a1       	ldd	r25, Y+34	; 0x22
     9e4:	01 97       	sbiw	r24, 0x01	; 1
     9e6:	9a a3       	std	Y+34, r25	; 0x22
     9e8:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     9ea:	89 a1       	ldd	r24, Y+33	; 0x21
     9ec:	9a a1       	ldd	r25, Y+34	; 0x22
     9ee:	00 97       	sbiw	r24, 0x00	; 0
     9f0:	69 f7       	brne	.-38     	; 0x9cc <forward+0x198>
     9f2:	14 c0       	rjmp	.+40     	; 0xa1c <forward+0x1e8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     9f4:	6b a1       	ldd	r22, Y+35	; 0x23
     9f6:	7c a1       	ldd	r23, Y+36	; 0x24
     9f8:	8d a1       	ldd	r24, Y+37	; 0x25
     9fa:	9e a1       	ldd	r25, Y+38	; 0x26
     9fc:	0e 94 93 11 	call	0x2326	; 0x2326 <__fixunssfsi>
     a00:	dc 01       	movw	r26, r24
     a02:	cb 01       	movw	r24, r22
     a04:	9a a3       	std	Y+34, r25	; 0x22
     a06:	89 a3       	std	Y+33, r24	; 0x21
     a08:	89 a1       	ldd	r24, Y+33	; 0x21
     a0a:	9a a1       	ldd	r25, Y+34	; 0x22
     a0c:	9e 8f       	std	Y+30, r25	; 0x1e
     a0e:	8d 8f       	std	Y+29, r24	; 0x1d
     a10:	8d 8d       	ldd	r24, Y+29	; 0x1d
     a12:	9e 8d       	ldd	r25, Y+30	; 0x1e
     a14:	01 97       	sbiw	r24, 0x01	; 1
     a16:	f1 f7       	brne	.-4      	; 0xa14 <forward+0x1e0>
     a18:	9e 8f       	std	Y+30, r25	; 0x1e
     a1a:	8d 8f       	std	Y+29, r24	; 0x1d
 _delay_ms(step_time);

 mid_leg_right_down();
     a1c:	0e 94 a1 02 	call	0x542	; 0x542 <mid_leg_right_down>
     a20:	80 e0       	ldi	r24, 0x00	; 0
     a22:	90 e0       	ldi	r25, 0x00	; 0
     a24:	aa e7       	ldi	r26, 0x7A	; 122
     a26:	b3 e4       	ldi	r27, 0x43	; 67
     a28:	89 8f       	std	Y+25, r24	; 0x19
     a2a:	9a 8f       	std	Y+26, r25	; 0x1a
     a2c:	ab 8f       	std	Y+27, r26	; 0x1b
     a2e:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     a30:	69 8d       	ldd	r22, Y+25	; 0x19
     a32:	7a 8d       	ldd	r23, Y+26	; 0x1a
     a34:	8b 8d       	ldd	r24, Y+27	; 0x1b
     a36:	9c 8d       	ldd	r25, Y+28	; 0x1c
     a38:	26 e6       	ldi	r18, 0x66	; 102
     a3a:	36 e6       	ldi	r19, 0x66	; 102
     a3c:	46 e6       	ldi	r20, 0x66	; 102
     a3e:	55 e4       	ldi	r21, 0x45	; 69
     a40:	0e 94 69 13 	call	0x26d2	; 0x26d2 <__mulsf3>
     a44:	dc 01       	movw	r26, r24
     a46:	cb 01       	movw	r24, r22
     a48:	8d 8b       	std	Y+21, r24	; 0x15
     a4a:	9e 8b       	std	Y+22, r25	; 0x16
     a4c:	af 8b       	std	Y+23, r26	; 0x17
     a4e:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     a50:	6d 89       	ldd	r22, Y+21	; 0x15
     a52:	7e 89       	ldd	r23, Y+22	; 0x16
     a54:	8f 89       	ldd	r24, Y+23	; 0x17
     a56:	98 8d       	ldd	r25, Y+24	; 0x18
     a58:	20 e0       	ldi	r18, 0x00	; 0
     a5a:	30 e0       	ldi	r19, 0x00	; 0
     a5c:	40 e8       	ldi	r20, 0x80	; 128
     a5e:	5f e3       	ldi	r21, 0x3F	; 63
     a60:	0e 94 6f 15 	call	0x2ade	; 0x2ade <__ltsf2>
     a64:	88 23       	and	r24, r24
     a66:	2c f4       	brge	.+10     	; 0xa72 <forward+0x23e>
		__ticks = 1;
     a68:	81 e0       	ldi	r24, 0x01	; 1
     a6a:	90 e0       	ldi	r25, 0x00	; 0
     a6c:	9c 8b       	std	Y+20, r25	; 0x14
     a6e:	8b 8b       	std	Y+19, r24	; 0x13
     a70:	3f c0       	rjmp	.+126    	; 0xaf0 <forward+0x2bc>
	else if (__tmp > 65535)
     a72:	6d 89       	ldd	r22, Y+21	; 0x15
     a74:	7e 89       	ldd	r23, Y+22	; 0x16
     a76:	8f 89       	ldd	r24, Y+23	; 0x17
     a78:	98 8d       	ldd	r25, Y+24	; 0x18
     a7a:	20 e0       	ldi	r18, 0x00	; 0
     a7c:	3f ef       	ldi	r19, 0xFF	; 255
     a7e:	4f e7       	ldi	r20, 0x7F	; 127
     a80:	57 e4       	ldi	r21, 0x47	; 71
     a82:	0e 94 0f 15 	call	0x2a1e	; 0x2a1e <__gtsf2>
     a86:	18 16       	cp	r1, r24
     a88:	4c f5       	brge	.+82     	; 0xadc <forward+0x2a8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     a8a:	69 8d       	ldd	r22, Y+25	; 0x19
     a8c:	7a 8d       	ldd	r23, Y+26	; 0x1a
     a8e:	8b 8d       	ldd	r24, Y+27	; 0x1b
     a90:	9c 8d       	ldd	r25, Y+28	; 0x1c
     a92:	20 e0       	ldi	r18, 0x00	; 0
     a94:	30 e0       	ldi	r19, 0x00	; 0
     a96:	40 e2       	ldi	r20, 0x20	; 32
     a98:	51 e4       	ldi	r21, 0x41	; 65
     a9a:	0e 94 69 13 	call	0x26d2	; 0x26d2 <__mulsf3>
     a9e:	dc 01       	movw	r26, r24
     aa0:	cb 01       	movw	r24, r22
     aa2:	bc 01       	movw	r22, r24
     aa4:	cd 01       	movw	r24, r26
     aa6:	0e 94 93 11 	call	0x2326	; 0x2326 <__fixunssfsi>
     aaa:	dc 01       	movw	r26, r24
     aac:	cb 01       	movw	r24, r22
     aae:	9c 8b       	std	Y+20, r25	; 0x14
     ab0:	8b 8b       	std	Y+19, r24	; 0x13
     ab2:	0f c0       	rjmp	.+30     	; 0xad2 <forward+0x29e>
     ab4:	80 e7       	ldi	r24, 0x70	; 112
     ab6:	91 e0       	ldi	r25, 0x01	; 1
     ab8:	9a 8b       	std	Y+18, r25	; 0x12
     aba:	89 8b       	std	Y+17, r24	; 0x11
     abc:	89 89       	ldd	r24, Y+17	; 0x11
     abe:	9a 89       	ldd	r25, Y+18	; 0x12
     ac0:	01 97       	sbiw	r24, 0x01	; 1
     ac2:	f1 f7       	brne	.-4      	; 0xac0 <forward+0x28c>
     ac4:	9a 8b       	std	Y+18, r25	; 0x12
     ac6:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     ac8:	8b 89       	ldd	r24, Y+19	; 0x13
     aca:	9c 89       	ldd	r25, Y+20	; 0x14
     acc:	01 97       	sbiw	r24, 0x01	; 1
     ace:	9c 8b       	std	Y+20, r25	; 0x14
     ad0:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     ad2:	8b 89       	ldd	r24, Y+19	; 0x13
     ad4:	9c 89       	ldd	r25, Y+20	; 0x14
     ad6:	00 97       	sbiw	r24, 0x00	; 0
     ad8:	69 f7       	brne	.-38     	; 0xab4 <forward+0x280>
     ada:	14 c0       	rjmp	.+40     	; 0xb04 <forward+0x2d0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     adc:	6d 89       	ldd	r22, Y+21	; 0x15
     ade:	7e 89       	ldd	r23, Y+22	; 0x16
     ae0:	8f 89       	ldd	r24, Y+23	; 0x17
     ae2:	98 8d       	ldd	r25, Y+24	; 0x18
     ae4:	0e 94 93 11 	call	0x2326	; 0x2326 <__fixunssfsi>
     ae8:	dc 01       	movw	r26, r24
     aea:	cb 01       	movw	r24, r22
     aec:	9c 8b       	std	Y+20, r25	; 0x14
     aee:	8b 8b       	std	Y+19, r24	; 0x13
     af0:	8b 89       	ldd	r24, Y+19	; 0x13
     af2:	9c 89       	ldd	r25, Y+20	; 0x14
     af4:	98 8b       	std	Y+16, r25	; 0x10
     af6:	8f 87       	std	Y+15, r24	; 0x0f
     af8:	8f 85       	ldd	r24, Y+15	; 0x0f
     afa:	98 89       	ldd	r25, Y+16	; 0x10
     afc:	01 97       	sbiw	r24, 0x01	; 1
     afe:	f1 f7       	brne	.-4      	; 0xafc <forward+0x2c8>
     b00:	98 8b       	std	Y+16, r25	; 0x10
     b02:	8f 87       	std	Y+15, r24	; 0x0f
 _delay_ms(step_time);
 
 left_leg_back();
     b04:	0e 94 65 02 	call	0x4ca	; 0x4ca <left_leg_back>
 right_leg_forward();
     b08:	0e 94 79 02 	call	0x4f2	; 0x4f2 <right_leg_forward>
     b0c:	80 e0       	ldi	r24, 0x00	; 0
     b0e:	90 e0       	ldi	r25, 0x00	; 0
     b10:	aa e7       	ldi	r26, 0x7A	; 122
     b12:	b3 e4       	ldi	r27, 0x43	; 67
     b14:	8b 87       	std	Y+11, r24	; 0x0b
     b16:	9c 87       	std	Y+12, r25	; 0x0c
     b18:	ad 87       	std	Y+13, r26	; 0x0d
     b1a:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     b1c:	6b 85       	ldd	r22, Y+11	; 0x0b
     b1e:	7c 85       	ldd	r23, Y+12	; 0x0c
     b20:	8d 85       	ldd	r24, Y+13	; 0x0d
     b22:	9e 85       	ldd	r25, Y+14	; 0x0e
     b24:	26 e6       	ldi	r18, 0x66	; 102
     b26:	36 e6       	ldi	r19, 0x66	; 102
     b28:	46 e6       	ldi	r20, 0x66	; 102
     b2a:	55 e4       	ldi	r21, 0x45	; 69
     b2c:	0e 94 69 13 	call	0x26d2	; 0x26d2 <__mulsf3>
     b30:	dc 01       	movw	r26, r24
     b32:	cb 01       	movw	r24, r22
     b34:	8f 83       	std	Y+7, r24	; 0x07
     b36:	98 87       	std	Y+8, r25	; 0x08
     b38:	a9 87       	std	Y+9, r26	; 0x09
     b3a:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     b3c:	6f 81       	ldd	r22, Y+7	; 0x07
     b3e:	78 85       	ldd	r23, Y+8	; 0x08
     b40:	89 85       	ldd	r24, Y+9	; 0x09
     b42:	9a 85       	ldd	r25, Y+10	; 0x0a
     b44:	20 e0       	ldi	r18, 0x00	; 0
     b46:	30 e0       	ldi	r19, 0x00	; 0
     b48:	40 e8       	ldi	r20, 0x80	; 128
     b4a:	5f e3       	ldi	r21, 0x3F	; 63
     b4c:	0e 94 6f 15 	call	0x2ade	; 0x2ade <__ltsf2>
     b50:	88 23       	and	r24, r24
     b52:	2c f4       	brge	.+10     	; 0xb5e <forward+0x32a>
		__ticks = 1;
     b54:	81 e0       	ldi	r24, 0x01	; 1
     b56:	90 e0       	ldi	r25, 0x00	; 0
     b58:	9e 83       	std	Y+6, r25	; 0x06
     b5a:	8d 83       	std	Y+5, r24	; 0x05
     b5c:	3f c0       	rjmp	.+126    	; 0xbdc <forward+0x3a8>
	else if (__tmp > 65535)
     b5e:	6f 81       	ldd	r22, Y+7	; 0x07
     b60:	78 85       	ldd	r23, Y+8	; 0x08
     b62:	89 85       	ldd	r24, Y+9	; 0x09
     b64:	9a 85       	ldd	r25, Y+10	; 0x0a
     b66:	20 e0       	ldi	r18, 0x00	; 0
     b68:	3f ef       	ldi	r19, 0xFF	; 255
     b6a:	4f e7       	ldi	r20, 0x7F	; 127
     b6c:	57 e4       	ldi	r21, 0x47	; 71
     b6e:	0e 94 0f 15 	call	0x2a1e	; 0x2a1e <__gtsf2>
     b72:	18 16       	cp	r1, r24
     b74:	4c f5       	brge	.+82     	; 0xbc8 <forward+0x394>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     b76:	6b 85       	ldd	r22, Y+11	; 0x0b
     b78:	7c 85       	ldd	r23, Y+12	; 0x0c
     b7a:	8d 85       	ldd	r24, Y+13	; 0x0d
     b7c:	9e 85       	ldd	r25, Y+14	; 0x0e
     b7e:	20 e0       	ldi	r18, 0x00	; 0
     b80:	30 e0       	ldi	r19, 0x00	; 0
     b82:	40 e2       	ldi	r20, 0x20	; 32
     b84:	51 e4       	ldi	r21, 0x41	; 65
     b86:	0e 94 69 13 	call	0x26d2	; 0x26d2 <__mulsf3>
     b8a:	dc 01       	movw	r26, r24
     b8c:	cb 01       	movw	r24, r22
     b8e:	bc 01       	movw	r22, r24
     b90:	cd 01       	movw	r24, r26
     b92:	0e 94 93 11 	call	0x2326	; 0x2326 <__fixunssfsi>
     b96:	dc 01       	movw	r26, r24
     b98:	cb 01       	movw	r24, r22
     b9a:	9e 83       	std	Y+6, r25	; 0x06
     b9c:	8d 83       	std	Y+5, r24	; 0x05
     b9e:	0f c0       	rjmp	.+30     	; 0xbbe <forward+0x38a>
     ba0:	80 e7       	ldi	r24, 0x70	; 112
     ba2:	91 e0       	ldi	r25, 0x01	; 1
     ba4:	9c 83       	std	Y+4, r25	; 0x04
     ba6:	8b 83       	std	Y+3, r24	; 0x03
     ba8:	8b 81       	ldd	r24, Y+3	; 0x03
     baa:	9c 81       	ldd	r25, Y+4	; 0x04
     bac:	01 97       	sbiw	r24, 0x01	; 1
     bae:	f1 f7       	brne	.-4      	; 0xbac <forward+0x378>
     bb0:	9c 83       	std	Y+4, r25	; 0x04
     bb2:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     bb4:	8d 81       	ldd	r24, Y+5	; 0x05
     bb6:	9e 81       	ldd	r25, Y+6	; 0x06
     bb8:	01 97       	sbiw	r24, 0x01	; 1
     bba:	9e 83       	std	Y+6, r25	; 0x06
     bbc:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     bbe:	8d 81       	ldd	r24, Y+5	; 0x05
     bc0:	9e 81       	ldd	r25, Y+6	; 0x06
     bc2:	00 97       	sbiw	r24, 0x00	; 0
     bc4:	69 f7       	brne	.-38     	; 0xba0 <forward+0x36c>
     bc6:	14 c0       	rjmp	.+40     	; 0xbf0 <forward+0x3bc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     bc8:	6f 81       	ldd	r22, Y+7	; 0x07
     bca:	78 85       	ldd	r23, Y+8	; 0x08
     bcc:	89 85       	ldd	r24, Y+9	; 0x09
     bce:	9a 85       	ldd	r25, Y+10	; 0x0a
     bd0:	0e 94 93 11 	call	0x2326	; 0x2326 <__fixunssfsi>
     bd4:	dc 01       	movw	r26, r24
     bd6:	cb 01       	movw	r24, r22
     bd8:	9e 83       	std	Y+6, r25	; 0x06
     bda:	8d 83       	std	Y+5, r24	; 0x05
     bdc:	8d 81       	ldd	r24, Y+5	; 0x05
     bde:	9e 81       	ldd	r25, Y+6	; 0x06
     be0:	9a 83       	std	Y+2, r25	; 0x02
     be2:	89 83       	std	Y+1, r24	; 0x01
     be4:	89 81       	ldd	r24, Y+1	; 0x01
     be6:	9a 81       	ldd	r25, Y+2	; 0x02
     be8:	01 97       	sbiw	r24, 0x01	; 1
     bea:	f1 f7       	brne	.-4      	; 0xbe8 <forward+0x3b4>
     bec:	9a 83       	std	Y+2, r25	; 0x02
     bee:	89 83       	std	Y+1, r24	; 0x01
 _delay_ms(step_time);
}
     bf0:	e8 96       	adiw	r28, 0x38	; 56
     bf2:	0f b6       	in	r0, 0x3f	; 63
     bf4:	f8 94       	cli
     bf6:	de bf       	out	0x3e, r29	; 62
     bf8:	0f be       	out	0x3f, r0	; 63
     bfa:	cd bf       	out	0x3d, r28	; 61
     bfc:	cf 91       	pop	r28
     bfe:	df 91       	pop	r29
     c00:	08 95       	ret

00000c02 <back_init>:

void back_init (void) //sets robot's legs in proper angle without skidding before starting back walk
					  //if robot moves back without calling this function it might drift a bit in left or right
					  //direction at the time of starting back motion
{
     c02:	df 93       	push	r29
     c04:	cf 93       	push	r28
     c06:	cd b7       	in	r28, 0x3d	; 61
     c08:	de b7       	in	r29, 0x3e	; 62
     c0a:	aa 97       	sbiw	r28, 0x2a	; 42
     c0c:	0f b6       	in	r0, 0x3f	; 63
     c0e:	f8 94       	cli
     c10:	de bf       	out	0x3e, r29	; 62
     c12:	0f be       	out	0x3f, r0	; 63
     c14:	cd bf       	out	0x3d, r28	; 61
 stand_position();
     c16:	0e 94 41 02 	call	0x482	; 0x482 <stand_position>
     c1a:	80 e0       	ldi	r24, 0x00	; 0
     c1c:	90 e0       	ldi	r25, 0x00	; 0
     c1e:	aa e7       	ldi	r26, 0x7A	; 122
     c20:	b3 e4       	ldi	r27, 0x43	; 67
     c22:	8f a3       	std	Y+39, r24	; 0x27
     c24:	98 a7       	std	Y+40, r25	; 0x28
     c26:	a9 a7       	std	Y+41, r26	; 0x29
     c28:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     c2a:	6f a1       	ldd	r22, Y+39	; 0x27
     c2c:	78 a5       	ldd	r23, Y+40	; 0x28
     c2e:	89 a5       	ldd	r24, Y+41	; 0x29
     c30:	9a a5       	ldd	r25, Y+42	; 0x2a
     c32:	26 e6       	ldi	r18, 0x66	; 102
     c34:	36 e6       	ldi	r19, 0x66	; 102
     c36:	46 e6       	ldi	r20, 0x66	; 102
     c38:	55 e4       	ldi	r21, 0x45	; 69
     c3a:	0e 94 69 13 	call	0x26d2	; 0x26d2 <__mulsf3>
     c3e:	dc 01       	movw	r26, r24
     c40:	cb 01       	movw	r24, r22
     c42:	8b a3       	std	Y+35, r24	; 0x23
     c44:	9c a3       	std	Y+36, r25	; 0x24
     c46:	ad a3       	std	Y+37, r26	; 0x25
     c48:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
     c4a:	6b a1       	ldd	r22, Y+35	; 0x23
     c4c:	7c a1       	ldd	r23, Y+36	; 0x24
     c4e:	8d a1       	ldd	r24, Y+37	; 0x25
     c50:	9e a1       	ldd	r25, Y+38	; 0x26
     c52:	20 e0       	ldi	r18, 0x00	; 0
     c54:	30 e0       	ldi	r19, 0x00	; 0
     c56:	40 e8       	ldi	r20, 0x80	; 128
     c58:	5f e3       	ldi	r21, 0x3F	; 63
     c5a:	0e 94 6f 15 	call	0x2ade	; 0x2ade <__ltsf2>
     c5e:	88 23       	and	r24, r24
     c60:	2c f4       	brge	.+10     	; 0xc6c <back_init+0x6a>
		__ticks = 1;
     c62:	81 e0       	ldi	r24, 0x01	; 1
     c64:	90 e0       	ldi	r25, 0x00	; 0
     c66:	9a a3       	std	Y+34, r25	; 0x22
     c68:	89 a3       	std	Y+33, r24	; 0x21
     c6a:	3f c0       	rjmp	.+126    	; 0xcea <back_init+0xe8>
	else if (__tmp > 65535)
     c6c:	6b a1       	ldd	r22, Y+35	; 0x23
     c6e:	7c a1       	ldd	r23, Y+36	; 0x24
     c70:	8d a1       	ldd	r24, Y+37	; 0x25
     c72:	9e a1       	ldd	r25, Y+38	; 0x26
     c74:	20 e0       	ldi	r18, 0x00	; 0
     c76:	3f ef       	ldi	r19, 0xFF	; 255
     c78:	4f e7       	ldi	r20, 0x7F	; 127
     c7a:	57 e4       	ldi	r21, 0x47	; 71
     c7c:	0e 94 0f 15 	call	0x2a1e	; 0x2a1e <__gtsf2>
     c80:	18 16       	cp	r1, r24
     c82:	4c f5       	brge	.+82     	; 0xcd6 <back_init+0xd4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     c84:	6f a1       	ldd	r22, Y+39	; 0x27
     c86:	78 a5       	ldd	r23, Y+40	; 0x28
     c88:	89 a5       	ldd	r24, Y+41	; 0x29
     c8a:	9a a5       	ldd	r25, Y+42	; 0x2a
     c8c:	20 e0       	ldi	r18, 0x00	; 0
     c8e:	30 e0       	ldi	r19, 0x00	; 0
     c90:	40 e2       	ldi	r20, 0x20	; 32
     c92:	51 e4       	ldi	r21, 0x41	; 65
     c94:	0e 94 69 13 	call	0x26d2	; 0x26d2 <__mulsf3>
     c98:	dc 01       	movw	r26, r24
     c9a:	cb 01       	movw	r24, r22
     c9c:	bc 01       	movw	r22, r24
     c9e:	cd 01       	movw	r24, r26
     ca0:	0e 94 93 11 	call	0x2326	; 0x2326 <__fixunssfsi>
     ca4:	dc 01       	movw	r26, r24
     ca6:	cb 01       	movw	r24, r22
     ca8:	9a a3       	std	Y+34, r25	; 0x22
     caa:	89 a3       	std	Y+33, r24	; 0x21
     cac:	0f c0       	rjmp	.+30     	; 0xccc <back_init+0xca>
     cae:	80 e7       	ldi	r24, 0x70	; 112
     cb0:	91 e0       	ldi	r25, 0x01	; 1
     cb2:	98 a3       	std	Y+32, r25	; 0x20
     cb4:	8f 8f       	std	Y+31, r24	; 0x1f
     cb6:	8f 8d       	ldd	r24, Y+31	; 0x1f
     cb8:	98 a1       	ldd	r25, Y+32	; 0x20
     cba:	01 97       	sbiw	r24, 0x01	; 1
     cbc:	f1 f7       	brne	.-4      	; 0xcba <back_init+0xb8>
     cbe:	98 a3       	std	Y+32, r25	; 0x20
     cc0:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     cc2:	89 a1       	ldd	r24, Y+33	; 0x21
     cc4:	9a a1       	ldd	r25, Y+34	; 0x22
     cc6:	01 97       	sbiw	r24, 0x01	; 1
     cc8:	9a a3       	std	Y+34, r25	; 0x22
     cca:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     ccc:	89 a1       	ldd	r24, Y+33	; 0x21
     cce:	9a a1       	ldd	r25, Y+34	; 0x22
     cd0:	00 97       	sbiw	r24, 0x00	; 0
     cd2:	69 f7       	brne	.-38     	; 0xcae <back_init+0xac>
     cd4:	14 c0       	rjmp	.+40     	; 0xcfe <back_init+0xfc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     cd6:	6b a1       	ldd	r22, Y+35	; 0x23
     cd8:	7c a1       	ldd	r23, Y+36	; 0x24
     cda:	8d a1       	ldd	r24, Y+37	; 0x25
     cdc:	9e a1       	ldd	r25, Y+38	; 0x26
     cde:	0e 94 93 11 	call	0x2326	; 0x2326 <__fixunssfsi>
     ce2:	dc 01       	movw	r26, r24
     ce4:	cb 01       	movw	r24, r22
     ce6:	9a a3       	std	Y+34, r25	; 0x22
     ce8:	89 a3       	std	Y+33, r24	; 0x21
     cea:	89 a1       	ldd	r24, Y+33	; 0x21
     cec:	9a a1       	ldd	r25, Y+34	; 0x22
     cee:	9e 8f       	std	Y+30, r25	; 0x1e
     cf0:	8d 8f       	std	Y+29, r24	; 0x1d
     cf2:	8d 8d       	ldd	r24, Y+29	; 0x1d
     cf4:	9e 8d       	ldd	r25, Y+30	; 0x1e
     cf6:	01 97       	sbiw	r24, 0x01	; 1
     cf8:	f1 f7       	brne	.-4      	; 0xcf6 <back_init+0xf4>
     cfa:	9e 8f       	std	Y+30, r25	; 0x1e
     cfc:	8d 8f       	std	Y+29, r24	; 0x1d
 _delay_ms(250);

 mid_leg_right_down();
     cfe:	0e 94 a1 02 	call	0x542	; 0x542 <mid_leg_right_down>
     d02:	80 e0       	ldi	r24, 0x00	; 0
     d04:	90 e0       	ldi	r25, 0x00	; 0
     d06:	aa e7       	ldi	r26, 0x7A	; 122
     d08:	b3 e4       	ldi	r27, 0x43	; 67
     d0a:	89 8f       	std	Y+25, r24	; 0x19
     d0c:	9a 8f       	std	Y+26, r25	; 0x1a
     d0e:	ab 8f       	std	Y+27, r26	; 0x1b
     d10:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     d12:	69 8d       	ldd	r22, Y+25	; 0x19
     d14:	7a 8d       	ldd	r23, Y+26	; 0x1a
     d16:	8b 8d       	ldd	r24, Y+27	; 0x1b
     d18:	9c 8d       	ldd	r25, Y+28	; 0x1c
     d1a:	26 e6       	ldi	r18, 0x66	; 102
     d1c:	36 e6       	ldi	r19, 0x66	; 102
     d1e:	46 e6       	ldi	r20, 0x66	; 102
     d20:	55 e4       	ldi	r21, 0x45	; 69
     d22:	0e 94 69 13 	call	0x26d2	; 0x26d2 <__mulsf3>
     d26:	dc 01       	movw	r26, r24
     d28:	cb 01       	movw	r24, r22
     d2a:	8d 8b       	std	Y+21, r24	; 0x15
     d2c:	9e 8b       	std	Y+22, r25	; 0x16
     d2e:	af 8b       	std	Y+23, r26	; 0x17
     d30:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     d32:	6d 89       	ldd	r22, Y+21	; 0x15
     d34:	7e 89       	ldd	r23, Y+22	; 0x16
     d36:	8f 89       	ldd	r24, Y+23	; 0x17
     d38:	98 8d       	ldd	r25, Y+24	; 0x18
     d3a:	20 e0       	ldi	r18, 0x00	; 0
     d3c:	30 e0       	ldi	r19, 0x00	; 0
     d3e:	40 e8       	ldi	r20, 0x80	; 128
     d40:	5f e3       	ldi	r21, 0x3F	; 63
     d42:	0e 94 6f 15 	call	0x2ade	; 0x2ade <__ltsf2>
     d46:	88 23       	and	r24, r24
     d48:	2c f4       	brge	.+10     	; 0xd54 <back_init+0x152>
		__ticks = 1;
     d4a:	81 e0       	ldi	r24, 0x01	; 1
     d4c:	90 e0       	ldi	r25, 0x00	; 0
     d4e:	9c 8b       	std	Y+20, r25	; 0x14
     d50:	8b 8b       	std	Y+19, r24	; 0x13
     d52:	3f c0       	rjmp	.+126    	; 0xdd2 <back_init+0x1d0>
	else if (__tmp > 65535)
     d54:	6d 89       	ldd	r22, Y+21	; 0x15
     d56:	7e 89       	ldd	r23, Y+22	; 0x16
     d58:	8f 89       	ldd	r24, Y+23	; 0x17
     d5a:	98 8d       	ldd	r25, Y+24	; 0x18
     d5c:	20 e0       	ldi	r18, 0x00	; 0
     d5e:	3f ef       	ldi	r19, 0xFF	; 255
     d60:	4f e7       	ldi	r20, 0x7F	; 127
     d62:	57 e4       	ldi	r21, 0x47	; 71
     d64:	0e 94 0f 15 	call	0x2a1e	; 0x2a1e <__gtsf2>
     d68:	18 16       	cp	r1, r24
     d6a:	4c f5       	brge	.+82     	; 0xdbe <back_init+0x1bc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     d6c:	69 8d       	ldd	r22, Y+25	; 0x19
     d6e:	7a 8d       	ldd	r23, Y+26	; 0x1a
     d70:	8b 8d       	ldd	r24, Y+27	; 0x1b
     d72:	9c 8d       	ldd	r25, Y+28	; 0x1c
     d74:	20 e0       	ldi	r18, 0x00	; 0
     d76:	30 e0       	ldi	r19, 0x00	; 0
     d78:	40 e2       	ldi	r20, 0x20	; 32
     d7a:	51 e4       	ldi	r21, 0x41	; 65
     d7c:	0e 94 69 13 	call	0x26d2	; 0x26d2 <__mulsf3>
     d80:	dc 01       	movw	r26, r24
     d82:	cb 01       	movw	r24, r22
     d84:	bc 01       	movw	r22, r24
     d86:	cd 01       	movw	r24, r26
     d88:	0e 94 93 11 	call	0x2326	; 0x2326 <__fixunssfsi>
     d8c:	dc 01       	movw	r26, r24
     d8e:	cb 01       	movw	r24, r22
     d90:	9c 8b       	std	Y+20, r25	; 0x14
     d92:	8b 8b       	std	Y+19, r24	; 0x13
     d94:	0f c0       	rjmp	.+30     	; 0xdb4 <back_init+0x1b2>
     d96:	80 e7       	ldi	r24, 0x70	; 112
     d98:	91 e0       	ldi	r25, 0x01	; 1
     d9a:	9a 8b       	std	Y+18, r25	; 0x12
     d9c:	89 8b       	std	Y+17, r24	; 0x11
     d9e:	89 89       	ldd	r24, Y+17	; 0x11
     da0:	9a 89       	ldd	r25, Y+18	; 0x12
     da2:	01 97       	sbiw	r24, 0x01	; 1
     da4:	f1 f7       	brne	.-4      	; 0xda2 <back_init+0x1a0>
     da6:	9a 8b       	std	Y+18, r25	; 0x12
     da8:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     daa:	8b 89       	ldd	r24, Y+19	; 0x13
     dac:	9c 89       	ldd	r25, Y+20	; 0x14
     dae:	01 97       	sbiw	r24, 0x01	; 1
     db0:	9c 8b       	std	Y+20, r25	; 0x14
     db2:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     db4:	8b 89       	ldd	r24, Y+19	; 0x13
     db6:	9c 89       	ldd	r25, Y+20	; 0x14
     db8:	00 97       	sbiw	r24, 0x00	; 0
     dba:	69 f7       	brne	.-38     	; 0xd96 <back_init+0x194>
     dbc:	14 c0       	rjmp	.+40     	; 0xde6 <back_init+0x1e4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     dbe:	6d 89       	ldd	r22, Y+21	; 0x15
     dc0:	7e 89       	ldd	r23, Y+22	; 0x16
     dc2:	8f 89       	ldd	r24, Y+23	; 0x17
     dc4:	98 8d       	ldd	r25, Y+24	; 0x18
     dc6:	0e 94 93 11 	call	0x2326	; 0x2326 <__fixunssfsi>
     dca:	dc 01       	movw	r26, r24
     dcc:	cb 01       	movw	r24, r22
     dce:	9c 8b       	std	Y+20, r25	; 0x14
     dd0:	8b 8b       	std	Y+19, r24	; 0x13
     dd2:	8b 89       	ldd	r24, Y+19	; 0x13
     dd4:	9c 89       	ldd	r25, Y+20	; 0x14
     dd6:	98 8b       	std	Y+16, r25	; 0x10
     dd8:	8f 87       	std	Y+15, r24	; 0x0f
     dda:	8f 85       	ldd	r24, Y+15	; 0x0f
     ddc:	98 89       	ldd	r25, Y+16	; 0x10
     dde:	01 97       	sbiw	r24, 0x01	; 1
     de0:	f1 f7       	brne	.-4      	; 0xdde <back_init+0x1dc>
     de2:	98 8b       	std	Y+16, r25	; 0x10
     de4:	8f 87       	std	Y+15, r24	; 0x0f
 _delay_ms(250);
 right_leg_forward();
     de6:	0e 94 79 02 	call	0x4f2	; 0x4f2 <right_leg_forward>
     dea:	80 e0       	ldi	r24, 0x00	; 0
     dec:	90 e0       	ldi	r25, 0x00	; 0
     dee:	aa e7       	ldi	r26, 0x7A	; 122
     df0:	b3 e4       	ldi	r27, 0x43	; 67
     df2:	8b 87       	std	Y+11, r24	; 0x0b
     df4:	9c 87       	std	Y+12, r25	; 0x0c
     df6:	ad 87       	std	Y+13, r26	; 0x0d
     df8:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     dfa:	6b 85       	ldd	r22, Y+11	; 0x0b
     dfc:	7c 85       	ldd	r23, Y+12	; 0x0c
     dfe:	8d 85       	ldd	r24, Y+13	; 0x0d
     e00:	9e 85       	ldd	r25, Y+14	; 0x0e
     e02:	26 e6       	ldi	r18, 0x66	; 102
     e04:	36 e6       	ldi	r19, 0x66	; 102
     e06:	46 e6       	ldi	r20, 0x66	; 102
     e08:	55 e4       	ldi	r21, 0x45	; 69
     e0a:	0e 94 69 13 	call	0x26d2	; 0x26d2 <__mulsf3>
     e0e:	dc 01       	movw	r26, r24
     e10:	cb 01       	movw	r24, r22
     e12:	8f 83       	std	Y+7, r24	; 0x07
     e14:	98 87       	std	Y+8, r25	; 0x08
     e16:	a9 87       	std	Y+9, r26	; 0x09
     e18:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     e1a:	6f 81       	ldd	r22, Y+7	; 0x07
     e1c:	78 85       	ldd	r23, Y+8	; 0x08
     e1e:	89 85       	ldd	r24, Y+9	; 0x09
     e20:	9a 85       	ldd	r25, Y+10	; 0x0a
     e22:	20 e0       	ldi	r18, 0x00	; 0
     e24:	30 e0       	ldi	r19, 0x00	; 0
     e26:	40 e8       	ldi	r20, 0x80	; 128
     e28:	5f e3       	ldi	r21, 0x3F	; 63
     e2a:	0e 94 6f 15 	call	0x2ade	; 0x2ade <__ltsf2>
     e2e:	88 23       	and	r24, r24
     e30:	2c f4       	brge	.+10     	; 0xe3c <back_init+0x23a>
		__ticks = 1;
     e32:	81 e0       	ldi	r24, 0x01	; 1
     e34:	90 e0       	ldi	r25, 0x00	; 0
     e36:	9e 83       	std	Y+6, r25	; 0x06
     e38:	8d 83       	std	Y+5, r24	; 0x05
     e3a:	3f c0       	rjmp	.+126    	; 0xeba <back_init+0x2b8>
	else if (__tmp > 65535)
     e3c:	6f 81       	ldd	r22, Y+7	; 0x07
     e3e:	78 85       	ldd	r23, Y+8	; 0x08
     e40:	89 85       	ldd	r24, Y+9	; 0x09
     e42:	9a 85       	ldd	r25, Y+10	; 0x0a
     e44:	20 e0       	ldi	r18, 0x00	; 0
     e46:	3f ef       	ldi	r19, 0xFF	; 255
     e48:	4f e7       	ldi	r20, 0x7F	; 127
     e4a:	57 e4       	ldi	r21, 0x47	; 71
     e4c:	0e 94 0f 15 	call	0x2a1e	; 0x2a1e <__gtsf2>
     e50:	18 16       	cp	r1, r24
     e52:	4c f5       	brge	.+82     	; 0xea6 <back_init+0x2a4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     e54:	6b 85       	ldd	r22, Y+11	; 0x0b
     e56:	7c 85       	ldd	r23, Y+12	; 0x0c
     e58:	8d 85       	ldd	r24, Y+13	; 0x0d
     e5a:	9e 85       	ldd	r25, Y+14	; 0x0e
     e5c:	20 e0       	ldi	r18, 0x00	; 0
     e5e:	30 e0       	ldi	r19, 0x00	; 0
     e60:	40 e2       	ldi	r20, 0x20	; 32
     e62:	51 e4       	ldi	r21, 0x41	; 65
     e64:	0e 94 69 13 	call	0x26d2	; 0x26d2 <__mulsf3>
     e68:	dc 01       	movw	r26, r24
     e6a:	cb 01       	movw	r24, r22
     e6c:	bc 01       	movw	r22, r24
     e6e:	cd 01       	movw	r24, r26
     e70:	0e 94 93 11 	call	0x2326	; 0x2326 <__fixunssfsi>
     e74:	dc 01       	movw	r26, r24
     e76:	cb 01       	movw	r24, r22
     e78:	9e 83       	std	Y+6, r25	; 0x06
     e7a:	8d 83       	std	Y+5, r24	; 0x05
     e7c:	0f c0       	rjmp	.+30     	; 0xe9c <back_init+0x29a>
     e7e:	80 e7       	ldi	r24, 0x70	; 112
     e80:	91 e0       	ldi	r25, 0x01	; 1
     e82:	9c 83       	std	Y+4, r25	; 0x04
     e84:	8b 83       	std	Y+3, r24	; 0x03
     e86:	8b 81       	ldd	r24, Y+3	; 0x03
     e88:	9c 81       	ldd	r25, Y+4	; 0x04
     e8a:	01 97       	sbiw	r24, 0x01	; 1
     e8c:	f1 f7       	brne	.-4      	; 0xe8a <back_init+0x288>
     e8e:	9c 83       	std	Y+4, r25	; 0x04
     e90:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     e92:	8d 81       	ldd	r24, Y+5	; 0x05
     e94:	9e 81       	ldd	r25, Y+6	; 0x06
     e96:	01 97       	sbiw	r24, 0x01	; 1
     e98:	9e 83       	std	Y+6, r25	; 0x06
     e9a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     e9c:	8d 81       	ldd	r24, Y+5	; 0x05
     e9e:	9e 81       	ldd	r25, Y+6	; 0x06
     ea0:	00 97       	sbiw	r24, 0x00	; 0
     ea2:	69 f7       	brne	.-38     	; 0xe7e <back_init+0x27c>
     ea4:	14 c0       	rjmp	.+40     	; 0xece <back_init+0x2cc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     ea6:	6f 81       	ldd	r22, Y+7	; 0x07
     ea8:	78 85       	ldd	r23, Y+8	; 0x08
     eaa:	89 85       	ldd	r24, Y+9	; 0x09
     eac:	9a 85       	ldd	r25, Y+10	; 0x0a
     eae:	0e 94 93 11 	call	0x2326	; 0x2326 <__fixunssfsi>
     eb2:	dc 01       	movw	r26, r24
     eb4:	cb 01       	movw	r24, r22
     eb6:	9e 83       	std	Y+6, r25	; 0x06
     eb8:	8d 83       	std	Y+5, r24	; 0x05
     eba:	8d 81       	ldd	r24, Y+5	; 0x05
     ebc:	9e 81       	ldd	r25, Y+6	; 0x06
     ebe:	9a 83       	std	Y+2, r25	; 0x02
     ec0:	89 83       	std	Y+1, r24	; 0x01
     ec2:	89 81       	ldd	r24, Y+1	; 0x01
     ec4:	9a 81       	ldd	r25, Y+2	; 0x02
     ec6:	01 97       	sbiw	r24, 0x01	; 1
     ec8:	f1 f7       	brne	.-4      	; 0xec6 <back_init+0x2c4>
     eca:	9a 83       	std	Y+2, r25	; 0x02
     ecc:	89 83       	std	Y+1, r24	; 0x01
 _delay_ms(250);
}
     ece:	aa 96       	adiw	r28, 0x2a	; 42
     ed0:	0f b6       	in	r0, 0x3f	; 63
     ed2:	f8 94       	cli
     ed4:	de bf       	out	0x3e, r29	; 62
     ed6:	0f be       	out	0x3f, r0	; 63
     ed8:	cd bf       	out	0x3d, r28	; 61
     eda:	cf 91       	pop	r28
     edc:	df 91       	pop	r29
     ede:	08 95       	ret

00000ee0 <back>:

void back (void) //move back 
{
     ee0:	df 93       	push	r29
     ee2:	cf 93       	push	r28
     ee4:	cd b7       	in	r28, 0x3d	; 61
     ee6:	de b7       	in	r29, 0x3e	; 62
     ee8:	e8 97       	sbiw	r28, 0x38	; 56
     eea:	0f b6       	in	r0, 0x3f	; 63
     eec:	f8 94       	cli
     eee:	de bf       	out	0x3e, r29	; 62
     ef0:	0f be       	out	0x3f, r0	; 63
     ef2:	cd bf       	out	0x3d, r28	; 61
 mid_leg_left_down();
     ef4:	0e 94 97 02 	call	0x52e	; 0x52e <mid_leg_left_down>
     ef8:	80 e0       	ldi	r24, 0x00	; 0
     efa:	90 e0       	ldi	r25, 0x00	; 0
     efc:	aa e7       	ldi	r26, 0x7A	; 122
     efe:	b3 e4       	ldi	r27, 0x43	; 67
     f00:	8d ab       	std	Y+53, r24	; 0x35
     f02:	9e ab       	std	Y+54, r25	; 0x36
     f04:	af ab       	std	Y+55, r26	; 0x37
     f06:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     f08:	6d a9       	ldd	r22, Y+53	; 0x35
     f0a:	7e a9       	ldd	r23, Y+54	; 0x36
     f0c:	8f a9       	ldd	r24, Y+55	; 0x37
     f0e:	98 ad       	ldd	r25, Y+56	; 0x38
     f10:	26 e6       	ldi	r18, 0x66	; 102
     f12:	36 e6       	ldi	r19, 0x66	; 102
     f14:	46 e6       	ldi	r20, 0x66	; 102
     f16:	55 e4       	ldi	r21, 0x45	; 69
     f18:	0e 94 69 13 	call	0x26d2	; 0x26d2 <__mulsf3>
     f1c:	dc 01       	movw	r26, r24
     f1e:	cb 01       	movw	r24, r22
     f20:	89 ab       	std	Y+49, r24	; 0x31
     f22:	9a ab       	std	Y+50, r25	; 0x32
     f24:	ab ab       	std	Y+51, r26	; 0x33
     f26:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
     f28:	69 a9       	ldd	r22, Y+49	; 0x31
     f2a:	7a a9       	ldd	r23, Y+50	; 0x32
     f2c:	8b a9       	ldd	r24, Y+51	; 0x33
     f2e:	9c a9       	ldd	r25, Y+52	; 0x34
     f30:	20 e0       	ldi	r18, 0x00	; 0
     f32:	30 e0       	ldi	r19, 0x00	; 0
     f34:	40 e8       	ldi	r20, 0x80	; 128
     f36:	5f e3       	ldi	r21, 0x3F	; 63
     f38:	0e 94 6f 15 	call	0x2ade	; 0x2ade <__ltsf2>
     f3c:	88 23       	and	r24, r24
     f3e:	2c f4       	brge	.+10     	; 0xf4a <back+0x6a>
		__ticks = 1;
     f40:	81 e0       	ldi	r24, 0x01	; 1
     f42:	90 e0       	ldi	r25, 0x00	; 0
     f44:	98 ab       	std	Y+48, r25	; 0x30
     f46:	8f a7       	std	Y+47, r24	; 0x2f
     f48:	3f c0       	rjmp	.+126    	; 0xfc8 <back+0xe8>
	else if (__tmp > 65535)
     f4a:	69 a9       	ldd	r22, Y+49	; 0x31
     f4c:	7a a9       	ldd	r23, Y+50	; 0x32
     f4e:	8b a9       	ldd	r24, Y+51	; 0x33
     f50:	9c a9       	ldd	r25, Y+52	; 0x34
     f52:	20 e0       	ldi	r18, 0x00	; 0
     f54:	3f ef       	ldi	r19, 0xFF	; 255
     f56:	4f e7       	ldi	r20, 0x7F	; 127
     f58:	57 e4       	ldi	r21, 0x47	; 71
     f5a:	0e 94 0f 15 	call	0x2a1e	; 0x2a1e <__gtsf2>
     f5e:	18 16       	cp	r1, r24
     f60:	4c f5       	brge	.+82     	; 0xfb4 <back+0xd4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     f62:	6d a9       	ldd	r22, Y+53	; 0x35
     f64:	7e a9       	ldd	r23, Y+54	; 0x36
     f66:	8f a9       	ldd	r24, Y+55	; 0x37
     f68:	98 ad       	ldd	r25, Y+56	; 0x38
     f6a:	20 e0       	ldi	r18, 0x00	; 0
     f6c:	30 e0       	ldi	r19, 0x00	; 0
     f6e:	40 e2       	ldi	r20, 0x20	; 32
     f70:	51 e4       	ldi	r21, 0x41	; 65
     f72:	0e 94 69 13 	call	0x26d2	; 0x26d2 <__mulsf3>
     f76:	dc 01       	movw	r26, r24
     f78:	cb 01       	movw	r24, r22
     f7a:	bc 01       	movw	r22, r24
     f7c:	cd 01       	movw	r24, r26
     f7e:	0e 94 93 11 	call	0x2326	; 0x2326 <__fixunssfsi>
     f82:	dc 01       	movw	r26, r24
     f84:	cb 01       	movw	r24, r22
     f86:	98 ab       	std	Y+48, r25	; 0x30
     f88:	8f a7       	std	Y+47, r24	; 0x2f
     f8a:	0f c0       	rjmp	.+30     	; 0xfaa <back+0xca>
     f8c:	80 e7       	ldi	r24, 0x70	; 112
     f8e:	91 e0       	ldi	r25, 0x01	; 1
     f90:	9e a7       	std	Y+46, r25	; 0x2e
     f92:	8d a7       	std	Y+45, r24	; 0x2d
     f94:	8d a5       	ldd	r24, Y+45	; 0x2d
     f96:	9e a5       	ldd	r25, Y+46	; 0x2e
     f98:	01 97       	sbiw	r24, 0x01	; 1
     f9a:	f1 f7       	brne	.-4      	; 0xf98 <back+0xb8>
     f9c:	9e a7       	std	Y+46, r25	; 0x2e
     f9e:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     fa0:	8f a5       	ldd	r24, Y+47	; 0x2f
     fa2:	98 a9       	ldd	r25, Y+48	; 0x30
     fa4:	01 97       	sbiw	r24, 0x01	; 1
     fa6:	98 ab       	std	Y+48, r25	; 0x30
     fa8:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     faa:	8f a5       	ldd	r24, Y+47	; 0x2f
     fac:	98 a9       	ldd	r25, Y+48	; 0x30
     fae:	00 97       	sbiw	r24, 0x00	; 0
     fb0:	69 f7       	brne	.-38     	; 0xf8c <back+0xac>
     fb2:	14 c0       	rjmp	.+40     	; 0xfdc <back+0xfc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     fb4:	69 a9       	ldd	r22, Y+49	; 0x31
     fb6:	7a a9       	ldd	r23, Y+50	; 0x32
     fb8:	8b a9       	ldd	r24, Y+51	; 0x33
     fba:	9c a9       	ldd	r25, Y+52	; 0x34
     fbc:	0e 94 93 11 	call	0x2326	; 0x2326 <__fixunssfsi>
     fc0:	dc 01       	movw	r26, r24
     fc2:	cb 01       	movw	r24, r22
     fc4:	98 ab       	std	Y+48, r25	; 0x30
     fc6:	8f a7       	std	Y+47, r24	; 0x2f
     fc8:	8f a5       	ldd	r24, Y+47	; 0x2f
     fca:	98 a9       	ldd	r25, Y+48	; 0x30
     fcc:	9c a7       	std	Y+44, r25	; 0x2c
     fce:	8b a7       	std	Y+43, r24	; 0x2b
     fd0:	8b a5       	ldd	r24, Y+43	; 0x2b
     fd2:	9c a5       	ldd	r25, Y+44	; 0x2c
     fd4:	01 97       	sbiw	r24, 0x01	; 1
     fd6:	f1 f7       	brne	.-4      	; 0xfd4 <back+0xf4>
     fd8:	9c a7       	std	Y+44, r25	; 0x2c
     fda:	8b a7       	std	Y+43, r24	; 0x2b
 _delay_ms(step_time);
 
 left_leg_back();
     fdc:	0e 94 65 02 	call	0x4ca	; 0x4ca <left_leg_back>
 right_leg_forward();
     fe0:	0e 94 79 02 	call	0x4f2	; 0x4f2 <right_leg_forward>
     fe4:	80 e0       	ldi	r24, 0x00	; 0
     fe6:	90 e0       	ldi	r25, 0x00	; 0
     fe8:	aa e7       	ldi	r26, 0x7A	; 122
     fea:	b3 e4       	ldi	r27, 0x43	; 67
     fec:	8f a3       	std	Y+39, r24	; 0x27
     fee:	98 a7       	std	Y+40, r25	; 0x28
     ff0:	a9 a7       	std	Y+41, r26	; 0x29
     ff2:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     ff4:	6f a1       	ldd	r22, Y+39	; 0x27
     ff6:	78 a5       	ldd	r23, Y+40	; 0x28
     ff8:	89 a5       	ldd	r24, Y+41	; 0x29
     ffa:	9a a5       	ldd	r25, Y+42	; 0x2a
     ffc:	26 e6       	ldi	r18, 0x66	; 102
     ffe:	36 e6       	ldi	r19, 0x66	; 102
    1000:	46 e6       	ldi	r20, 0x66	; 102
    1002:	55 e4       	ldi	r21, 0x45	; 69
    1004:	0e 94 69 13 	call	0x26d2	; 0x26d2 <__mulsf3>
    1008:	dc 01       	movw	r26, r24
    100a:	cb 01       	movw	r24, r22
    100c:	8b a3       	std	Y+35, r24	; 0x23
    100e:	9c a3       	std	Y+36, r25	; 0x24
    1010:	ad a3       	std	Y+37, r26	; 0x25
    1012:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    1014:	6b a1       	ldd	r22, Y+35	; 0x23
    1016:	7c a1       	ldd	r23, Y+36	; 0x24
    1018:	8d a1       	ldd	r24, Y+37	; 0x25
    101a:	9e a1       	ldd	r25, Y+38	; 0x26
    101c:	20 e0       	ldi	r18, 0x00	; 0
    101e:	30 e0       	ldi	r19, 0x00	; 0
    1020:	40 e8       	ldi	r20, 0x80	; 128
    1022:	5f e3       	ldi	r21, 0x3F	; 63
    1024:	0e 94 6f 15 	call	0x2ade	; 0x2ade <__ltsf2>
    1028:	88 23       	and	r24, r24
    102a:	2c f4       	brge	.+10     	; 0x1036 <back+0x156>
		__ticks = 1;
    102c:	81 e0       	ldi	r24, 0x01	; 1
    102e:	90 e0       	ldi	r25, 0x00	; 0
    1030:	9a a3       	std	Y+34, r25	; 0x22
    1032:	89 a3       	std	Y+33, r24	; 0x21
    1034:	3f c0       	rjmp	.+126    	; 0x10b4 <back+0x1d4>
	else if (__tmp > 65535)
    1036:	6b a1       	ldd	r22, Y+35	; 0x23
    1038:	7c a1       	ldd	r23, Y+36	; 0x24
    103a:	8d a1       	ldd	r24, Y+37	; 0x25
    103c:	9e a1       	ldd	r25, Y+38	; 0x26
    103e:	20 e0       	ldi	r18, 0x00	; 0
    1040:	3f ef       	ldi	r19, 0xFF	; 255
    1042:	4f e7       	ldi	r20, 0x7F	; 127
    1044:	57 e4       	ldi	r21, 0x47	; 71
    1046:	0e 94 0f 15 	call	0x2a1e	; 0x2a1e <__gtsf2>
    104a:	18 16       	cp	r1, r24
    104c:	4c f5       	brge	.+82     	; 0x10a0 <back+0x1c0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    104e:	6f a1       	ldd	r22, Y+39	; 0x27
    1050:	78 a5       	ldd	r23, Y+40	; 0x28
    1052:	89 a5       	ldd	r24, Y+41	; 0x29
    1054:	9a a5       	ldd	r25, Y+42	; 0x2a
    1056:	20 e0       	ldi	r18, 0x00	; 0
    1058:	30 e0       	ldi	r19, 0x00	; 0
    105a:	40 e2       	ldi	r20, 0x20	; 32
    105c:	51 e4       	ldi	r21, 0x41	; 65
    105e:	0e 94 69 13 	call	0x26d2	; 0x26d2 <__mulsf3>
    1062:	dc 01       	movw	r26, r24
    1064:	cb 01       	movw	r24, r22
    1066:	bc 01       	movw	r22, r24
    1068:	cd 01       	movw	r24, r26
    106a:	0e 94 93 11 	call	0x2326	; 0x2326 <__fixunssfsi>
    106e:	dc 01       	movw	r26, r24
    1070:	cb 01       	movw	r24, r22
    1072:	9a a3       	std	Y+34, r25	; 0x22
    1074:	89 a3       	std	Y+33, r24	; 0x21
    1076:	0f c0       	rjmp	.+30     	; 0x1096 <back+0x1b6>
    1078:	80 e7       	ldi	r24, 0x70	; 112
    107a:	91 e0       	ldi	r25, 0x01	; 1
    107c:	98 a3       	std	Y+32, r25	; 0x20
    107e:	8f 8f       	std	Y+31, r24	; 0x1f
    1080:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1082:	98 a1       	ldd	r25, Y+32	; 0x20
    1084:	01 97       	sbiw	r24, 0x01	; 1
    1086:	f1 f7       	brne	.-4      	; 0x1084 <back+0x1a4>
    1088:	98 a3       	std	Y+32, r25	; 0x20
    108a:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    108c:	89 a1       	ldd	r24, Y+33	; 0x21
    108e:	9a a1       	ldd	r25, Y+34	; 0x22
    1090:	01 97       	sbiw	r24, 0x01	; 1
    1092:	9a a3       	std	Y+34, r25	; 0x22
    1094:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1096:	89 a1       	ldd	r24, Y+33	; 0x21
    1098:	9a a1       	ldd	r25, Y+34	; 0x22
    109a:	00 97       	sbiw	r24, 0x00	; 0
    109c:	69 f7       	brne	.-38     	; 0x1078 <back+0x198>
    109e:	14 c0       	rjmp	.+40     	; 0x10c8 <back+0x1e8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    10a0:	6b a1       	ldd	r22, Y+35	; 0x23
    10a2:	7c a1       	ldd	r23, Y+36	; 0x24
    10a4:	8d a1       	ldd	r24, Y+37	; 0x25
    10a6:	9e a1       	ldd	r25, Y+38	; 0x26
    10a8:	0e 94 93 11 	call	0x2326	; 0x2326 <__fixunssfsi>
    10ac:	dc 01       	movw	r26, r24
    10ae:	cb 01       	movw	r24, r22
    10b0:	9a a3       	std	Y+34, r25	; 0x22
    10b2:	89 a3       	std	Y+33, r24	; 0x21
    10b4:	89 a1       	ldd	r24, Y+33	; 0x21
    10b6:	9a a1       	ldd	r25, Y+34	; 0x22
    10b8:	9e 8f       	std	Y+30, r25	; 0x1e
    10ba:	8d 8f       	std	Y+29, r24	; 0x1d
    10bc:	8d 8d       	ldd	r24, Y+29	; 0x1d
    10be:	9e 8d       	ldd	r25, Y+30	; 0x1e
    10c0:	01 97       	sbiw	r24, 0x01	; 1
    10c2:	f1 f7       	brne	.-4      	; 0x10c0 <back+0x1e0>
    10c4:	9e 8f       	std	Y+30, r25	; 0x1e
    10c6:	8d 8f       	std	Y+29, r24	; 0x1d
 _delay_ms(step_time);

 mid_leg_right_down();
    10c8:	0e 94 a1 02 	call	0x542	; 0x542 <mid_leg_right_down>
    10cc:	80 e0       	ldi	r24, 0x00	; 0
    10ce:	90 e0       	ldi	r25, 0x00	; 0
    10d0:	aa e7       	ldi	r26, 0x7A	; 122
    10d2:	b3 e4       	ldi	r27, 0x43	; 67
    10d4:	89 8f       	std	Y+25, r24	; 0x19
    10d6:	9a 8f       	std	Y+26, r25	; 0x1a
    10d8:	ab 8f       	std	Y+27, r26	; 0x1b
    10da:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    10dc:	69 8d       	ldd	r22, Y+25	; 0x19
    10de:	7a 8d       	ldd	r23, Y+26	; 0x1a
    10e0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    10e2:	9c 8d       	ldd	r25, Y+28	; 0x1c
    10e4:	26 e6       	ldi	r18, 0x66	; 102
    10e6:	36 e6       	ldi	r19, 0x66	; 102
    10e8:	46 e6       	ldi	r20, 0x66	; 102
    10ea:	55 e4       	ldi	r21, 0x45	; 69
    10ec:	0e 94 69 13 	call	0x26d2	; 0x26d2 <__mulsf3>
    10f0:	dc 01       	movw	r26, r24
    10f2:	cb 01       	movw	r24, r22
    10f4:	8d 8b       	std	Y+21, r24	; 0x15
    10f6:	9e 8b       	std	Y+22, r25	; 0x16
    10f8:	af 8b       	std	Y+23, r26	; 0x17
    10fa:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    10fc:	6d 89       	ldd	r22, Y+21	; 0x15
    10fe:	7e 89       	ldd	r23, Y+22	; 0x16
    1100:	8f 89       	ldd	r24, Y+23	; 0x17
    1102:	98 8d       	ldd	r25, Y+24	; 0x18
    1104:	20 e0       	ldi	r18, 0x00	; 0
    1106:	30 e0       	ldi	r19, 0x00	; 0
    1108:	40 e8       	ldi	r20, 0x80	; 128
    110a:	5f e3       	ldi	r21, 0x3F	; 63
    110c:	0e 94 6f 15 	call	0x2ade	; 0x2ade <__ltsf2>
    1110:	88 23       	and	r24, r24
    1112:	2c f4       	brge	.+10     	; 0x111e <back+0x23e>
		__ticks = 1;
    1114:	81 e0       	ldi	r24, 0x01	; 1
    1116:	90 e0       	ldi	r25, 0x00	; 0
    1118:	9c 8b       	std	Y+20, r25	; 0x14
    111a:	8b 8b       	std	Y+19, r24	; 0x13
    111c:	3f c0       	rjmp	.+126    	; 0x119c <back+0x2bc>
	else if (__tmp > 65535)
    111e:	6d 89       	ldd	r22, Y+21	; 0x15
    1120:	7e 89       	ldd	r23, Y+22	; 0x16
    1122:	8f 89       	ldd	r24, Y+23	; 0x17
    1124:	98 8d       	ldd	r25, Y+24	; 0x18
    1126:	20 e0       	ldi	r18, 0x00	; 0
    1128:	3f ef       	ldi	r19, 0xFF	; 255
    112a:	4f e7       	ldi	r20, 0x7F	; 127
    112c:	57 e4       	ldi	r21, 0x47	; 71
    112e:	0e 94 0f 15 	call	0x2a1e	; 0x2a1e <__gtsf2>
    1132:	18 16       	cp	r1, r24
    1134:	4c f5       	brge	.+82     	; 0x1188 <back+0x2a8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1136:	69 8d       	ldd	r22, Y+25	; 0x19
    1138:	7a 8d       	ldd	r23, Y+26	; 0x1a
    113a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    113c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    113e:	20 e0       	ldi	r18, 0x00	; 0
    1140:	30 e0       	ldi	r19, 0x00	; 0
    1142:	40 e2       	ldi	r20, 0x20	; 32
    1144:	51 e4       	ldi	r21, 0x41	; 65
    1146:	0e 94 69 13 	call	0x26d2	; 0x26d2 <__mulsf3>
    114a:	dc 01       	movw	r26, r24
    114c:	cb 01       	movw	r24, r22
    114e:	bc 01       	movw	r22, r24
    1150:	cd 01       	movw	r24, r26
    1152:	0e 94 93 11 	call	0x2326	; 0x2326 <__fixunssfsi>
    1156:	dc 01       	movw	r26, r24
    1158:	cb 01       	movw	r24, r22
    115a:	9c 8b       	std	Y+20, r25	; 0x14
    115c:	8b 8b       	std	Y+19, r24	; 0x13
    115e:	0f c0       	rjmp	.+30     	; 0x117e <back+0x29e>
    1160:	80 e7       	ldi	r24, 0x70	; 112
    1162:	91 e0       	ldi	r25, 0x01	; 1
    1164:	9a 8b       	std	Y+18, r25	; 0x12
    1166:	89 8b       	std	Y+17, r24	; 0x11
    1168:	89 89       	ldd	r24, Y+17	; 0x11
    116a:	9a 89       	ldd	r25, Y+18	; 0x12
    116c:	01 97       	sbiw	r24, 0x01	; 1
    116e:	f1 f7       	brne	.-4      	; 0x116c <back+0x28c>
    1170:	9a 8b       	std	Y+18, r25	; 0x12
    1172:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1174:	8b 89       	ldd	r24, Y+19	; 0x13
    1176:	9c 89       	ldd	r25, Y+20	; 0x14
    1178:	01 97       	sbiw	r24, 0x01	; 1
    117a:	9c 8b       	std	Y+20, r25	; 0x14
    117c:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    117e:	8b 89       	ldd	r24, Y+19	; 0x13
    1180:	9c 89       	ldd	r25, Y+20	; 0x14
    1182:	00 97       	sbiw	r24, 0x00	; 0
    1184:	69 f7       	brne	.-38     	; 0x1160 <back+0x280>
    1186:	14 c0       	rjmp	.+40     	; 0x11b0 <back+0x2d0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1188:	6d 89       	ldd	r22, Y+21	; 0x15
    118a:	7e 89       	ldd	r23, Y+22	; 0x16
    118c:	8f 89       	ldd	r24, Y+23	; 0x17
    118e:	98 8d       	ldd	r25, Y+24	; 0x18
    1190:	0e 94 93 11 	call	0x2326	; 0x2326 <__fixunssfsi>
    1194:	dc 01       	movw	r26, r24
    1196:	cb 01       	movw	r24, r22
    1198:	9c 8b       	std	Y+20, r25	; 0x14
    119a:	8b 8b       	std	Y+19, r24	; 0x13
    119c:	8b 89       	ldd	r24, Y+19	; 0x13
    119e:	9c 89       	ldd	r25, Y+20	; 0x14
    11a0:	98 8b       	std	Y+16, r25	; 0x10
    11a2:	8f 87       	std	Y+15, r24	; 0x0f
    11a4:	8f 85       	ldd	r24, Y+15	; 0x0f
    11a6:	98 89       	ldd	r25, Y+16	; 0x10
    11a8:	01 97       	sbiw	r24, 0x01	; 1
    11aa:	f1 f7       	brne	.-4      	; 0x11a8 <back+0x2c8>
    11ac:	98 8b       	std	Y+16, r25	; 0x10
    11ae:	8f 87       	std	Y+15, r24	; 0x0f
 _delay_ms(step_time);
 
 left_leg_forward();
    11b0:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <left_leg_forward>
 right_leg_back();
    11b4:	0e 94 83 02 	call	0x506	; 0x506 <right_leg_back>
    11b8:	80 e0       	ldi	r24, 0x00	; 0
    11ba:	90 e0       	ldi	r25, 0x00	; 0
    11bc:	aa e7       	ldi	r26, 0x7A	; 122
    11be:	b3 e4       	ldi	r27, 0x43	; 67
    11c0:	8b 87       	std	Y+11, r24	; 0x0b
    11c2:	9c 87       	std	Y+12, r25	; 0x0c
    11c4:	ad 87       	std	Y+13, r26	; 0x0d
    11c6:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    11c8:	6b 85       	ldd	r22, Y+11	; 0x0b
    11ca:	7c 85       	ldd	r23, Y+12	; 0x0c
    11cc:	8d 85       	ldd	r24, Y+13	; 0x0d
    11ce:	9e 85       	ldd	r25, Y+14	; 0x0e
    11d0:	26 e6       	ldi	r18, 0x66	; 102
    11d2:	36 e6       	ldi	r19, 0x66	; 102
    11d4:	46 e6       	ldi	r20, 0x66	; 102
    11d6:	55 e4       	ldi	r21, 0x45	; 69
    11d8:	0e 94 69 13 	call	0x26d2	; 0x26d2 <__mulsf3>
    11dc:	dc 01       	movw	r26, r24
    11de:	cb 01       	movw	r24, r22
    11e0:	8f 83       	std	Y+7, r24	; 0x07
    11e2:	98 87       	std	Y+8, r25	; 0x08
    11e4:	a9 87       	std	Y+9, r26	; 0x09
    11e6:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    11e8:	6f 81       	ldd	r22, Y+7	; 0x07
    11ea:	78 85       	ldd	r23, Y+8	; 0x08
    11ec:	89 85       	ldd	r24, Y+9	; 0x09
    11ee:	9a 85       	ldd	r25, Y+10	; 0x0a
    11f0:	20 e0       	ldi	r18, 0x00	; 0
    11f2:	30 e0       	ldi	r19, 0x00	; 0
    11f4:	40 e8       	ldi	r20, 0x80	; 128
    11f6:	5f e3       	ldi	r21, 0x3F	; 63
    11f8:	0e 94 6f 15 	call	0x2ade	; 0x2ade <__ltsf2>
    11fc:	88 23       	and	r24, r24
    11fe:	2c f4       	brge	.+10     	; 0x120a <back+0x32a>
		__ticks = 1;
    1200:	81 e0       	ldi	r24, 0x01	; 1
    1202:	90 e0       	ldi	r25, 0x00	; 0
    1204:	9e 83       	std	Y+6, r25	; 0x06
    1206:	8d 83       	std	Y+5, r24	; 0x05
    1208:	3f c0       	rjmp	.+126    	; 0x1288 <back+0x3a8>
	else if (__tmp > 65535)
    120a:	6f 81       	ldd	r22, Y+7	; 0x07
    120c:	78 85       	ldd	r23, Y+8	; 0x08
    120e:	89 85       	ldd	r24, Y+9	; 0x09
    1210:	9a 85       	ldd	r25, Y+10	; 0x0a
    1212:	20 e0       	ldi	r18, 0x00	; 0
    1214:	3f ef       	ldi	r19, 0xFF	; 255
    1216:	4f e7       	ldi	r20, 0x7F	; 127
    1218:	57 e4       	ldi	r21, 0x47	; 71
    121a:	0e 94 0f 15 	call	0x2a1e	; 0x2a1e <__gtsf2>
    121e:	18 16       	cp	r1, r24
    1220:	4c f5       	brge	.+82     	; 0x1274 <back+0x394>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1222:	6b 85       	ldd	r22, Y+11	; 0x0b
    1224:	7c 85       	ldd	r23, Y+12	; 0x0c
    1226:	8d 85       	ldd	r24, Y+13	; 0x0d
    1228:	9e 85       	ldd	r25, Y+14	; 0x0e
    122a:	20 e0       	ldi	r18, 0x00	; 0
    122c:	30 e0       	ldi	r19, 0x00	; 0
    122e:	40 e2       	ldi	r20, 0x20	; 32
    1230:	51 e4       	ldi	r21, 0x41	; 65
    1232:	0e 94 69 13 	call	0x26d2	; 0x26d2 <__mulsf3>
    1236:	dc 01       	movw	r26, r24
    1238:	cb 01       	movw	r24, r22
    123a:	bc 01       	movw	r22, r24
    123c:	cd 01       	movw	r24, r26
    123e:	0e 94 93 11 	call	0x2326	; 0x2326 <__fixunssfsi>
    1242:	dc 01       	movw	r26, r24
    1244:	cb 01       	movw	r24, r22
    1246:	9e 83       	std	Y+6, r25	; 0x06
    1248:	8d 83       	std	Y+5, r24	; 0x05
    124a:	0f c0       	rjmp	.+30     	; 0x126a <back+0x38a>
    124c:	80 e7       	ldi	r24, 0x70	; 112
    124e:	91 e0       	ldi	r25, 0x01	; 1
    1250:	9c 83       	std	Y+4, r25	; 0x04
    1252:	8b 83       	std	Y+3, r24	; 0x03
    1254:	8b 81       	ldd	r24, Y+3	; 0x03
    1256:	9c 81       	ldd	r25, Y+4	; 0x04
    1258:	01 97       	sbiw	r24, 0x01	; 1
    125a:	f1 f7       	brne	.-4      	; 0x1258 <back+0x378>
    125c:	9c 83       	std	Y+4, r25	; 0x04
    125e:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1260:	8d 81       	ldd	r24, Y+5	; 0x05
    1262:	9e 81       	ldd	r25, Y+6	; 0x06
    1264:	01 97       	sbiw	r24, 0x01	; 1
    1266:	9e 83       	std	Y+6, r25	; 0x06
    1268:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    126a:	8d 81       	ldd	r24, Y+5	; 0x05
    126c:	9e 81       	ldd	r25, Y+6	; 0x06
    126e:	00 97       	sbiw	r24, 0x00	; 0
    1270:	69 f7       	brne	.-38     	; 0x124c <back+0x36c>
    1272:	14 c0       	rjmp	.+40     	; 0x129c <back+0x3bc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1274:	6f 81       	ldd	r22, Y+7	; 0x07
    1276:	78 85       	ldd	r23, Y+8	; 0x08
    1278:	89 85       	ldd	r24, Y+9	; 0x09
    127a:	9a 85       	ldd	r25, Y+10	; 0x0a
    127c:	0e 94 93 11 	call	0x2326	; 0x2326 <__fixunssfsi>
    1280:	dc 01       	movw	r26, r24
    1282:	cb 01       	movw	r24, r22
    1284:	9e 83       	std	Y+6, r25	; 0x06
    1286:	8d 83       	std	Y+5, r24	; 0x05
    1288:	8d 81       	ldd	r24, Y+5	; 0x05
    128a:	9e 81       	ldd	r25, Y+6	; 0x06
    128c:	9a 83       	std	Y+2, r25	; 0x02
    128e:	89 83       	std	Y+1, r24	; 0x01
    1290:	89 81       	ldd	r24, Y+1	; 0x01
    1292:	9a 81       	ldd	r25, Y+2	; 0x02
    1294:	01 97       	sbiw	r24, 0x01	; 1
    1296:	f1 f7       	brne	.-4      	; 0x1294 <back+0x3b4>
    1298:	9a 83       	std	Y+2, r25	; 0x02
    129a:	89 83       	std	Y+1, r24	; 0x01
 _delay_ms(step_time);
}
    129c:	e8 96       	adiw	r28, 0x38	; 56
    129e:	0f b6       	in	r0, 0x3f	; 63
    12a0:	f8 94       	cli
    12a2:	de bf       	out	0x3e, r29	; 62
    12a4:	0f be       	out	0x3f, r0	; 63
    12a6:	cd bf       	out	0x3d, r28	; 61
    12a8:	cf 91       	pop	r28
    12aa:	df 91       	pop	r29
    12ac:	08 95       	ret

000012ae <left>:

void left (void) //turn left by moving right pair of legs in the forward direction
{
    12ae:	df 93       	push	r29
    12b0:	cf 93       	push	r28
    12b2:	cd b7       	in	r28, 0x3d	; 61
    12b4:	de b7       	in	r29, 0x3e	; 62
    12b6:	e8 97       	sbiw	r28, 0x38	; 56
    12b8:	0f b6       	in	r0, 0x3f	; 63
    12ba:	f8 94       	cli
    12bc:	de bf       	out	0x3e, r29	; 62
    12be:	0f be       	out	0x3f, r0	; 63
    12c0:	cd bf       	out	0x3d, r28	; 61
 mid_leg_right_down();
    12c2:	0e 94 a1 02 	call	0x542	; 0x542 <mid_leg_right_down>
    12c6:	80 e0       	ldi	r24, 0x00	; 0
    12c8:	90 e0       	ldi	r25, 0x00	; 0
    12ca:	aa e7       	ldi	r26, 0x7A	; 122
    12cc:	b3 e4       	ldi	r27, 0x43	; 67
    12ce:	8d ab       	std	Y+53, r24	; 0x35
    12d0:	9e ab       	std	Y+54, r25	; 0x36
    12d2:	af ab       	std	Y+55, r26	; 0x37
    12d4:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    12d6:	6d a9       	ldd	r22, Y+53	; 0x35
    12d8:	7e a9       	ldd	r23, Y+54	; 0x36
    12da:	8f a9       	ldd	r24, Y+55	; 0x37
    12dc:	98 ad       	ldd	r25, Y+56	; 0x38
    12de:	26 e6       	ldi	r18, 0x66	; 102
    12e0:	36 e6       	ldi	r19, 0x66	; 102
    12e2:	46 e6       	ldi	r20, 0x66	; 102
    12e4:	55 e4       	ldi	r21, 0x45	; 69
    12e6:	0e 94 69 13 	call	0x26d2	; 0x26d2 <__mulsf3>
    12ea:	dc 01       	movw	r26, r24
    12ec:	cb 01       	movw	r24, r22
    12ee:	89 ab       	std	Y+49, r24	; 0x31
    12f0:	9a ab       	std	Y+50, r25	; 0x32
    12f2:	ab ab       	std	Y+51, r26	; 0x33
    12f4:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    12f6:	69 a9       	ldd	r22, Y+49	; 0x31
    12f8:	7a a9       	ldd	r23, Y+50	; 0x32
    12fa:	8b a9       	ldd	r24, Y+51	; 0x33
    12fc:	9c a9       	ldd	r25, Y+52	; 0x34
    12fe:	20 e0       	ldi	r18, 0x00	; 0
    1300:	30 e0       	ldi	r19, 0x00	; 0
    1302:	40 e8       	ldi	r20, 0x80	; 128
    1304:	5f e3       	ldi	r21, 0x3F	; 63
    1306:	0e 94 6f 15 	call	0x2ade	; 0x2ade <__ltsf2>
    130a:	88 23       	and	r24, r24
    130c:	2c f4       	brge	.+10     	; 0x1318 <left+0x6a>
		__ticks = 1;
    130e:	81 e0       	ldi	r24, 0x01	; 1
    1310:	90 e0       	ldi	r25, 0x00	; 0
    1312:	98 ab       	std	Y+48, r25	; 0x30
    1314:	8f a7       	std	Y+47, r24	; 0x2f
    1316:	3f c0       	rjmp	.+126    	; 0x1396 <left+0xe8>
	else if (__tmp > 65535)
    1318:	69 a9       	ldd	r22, Y+49	; 0x31
    131a:	7a a9       	ldd	r23, Y+50	; 0x32
    131c:	8b a9       	ldd	r24, Y+51	; 0x33
    131e:	9c a9       	ldd	r25, Y+52	; 0x34
    1320:	20 e0       	ldi	r18, 0x00	; 0
    1322:	3f ef       	ldi	r19, 0xFF	; 255
    1324:	4f e7       	ldi	r20, 0x7F	; 127
    1326:	57 e4       	ldi	r21, 0x47	; 71
    1328:	0e 94 0f 15 	call	0x2a1e	; 0x2a1e <__gtsf2>
    132c:	18 16       	cp	r1, r24
    132e:	4c f5       	brge	.+82     	; 0x1382 <left+0xd4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1330:	6d a9       	ldd	r22, Y+53	; 0x35
    1332:	7e a9       	ldd	r23, Y+54	; 0x36
    1334:	8f a9       	ldd	r24, Y+55	; 0x37
    1336:	98 ad       	ldd	r25, Y+56	; 0x38
    1338:	20 e0       	ldi	r18, 0x00	; 0
    133a:	30 e0       	ldi	r19, 0x00	; 0
    133c:	40 e2       	ldi	r20, 0x20	; 32
    133e:	51 e4       	ldi	r21, 0x41	; 65
    1340:	0e 94 69 13 	call	0x26d2	; 0x26d2 <__mulsf3>
    1344:	dc 01       	movw	r26, r24
    1346:	cb 01       	movw	r24, r22
    1348:	bc 01       	movw	r22, r24
    134a:	cd 01       	movw	r24, r26
    134c:	0e 94 93 11 	call	0x2326	; 0x2326 <__fixunssfsi>
    1350:	dc 01       	movw	r26, r24
    1352:	cb 01       	movw	r24, r22
    1354:	98 ab       	std	Y+48, r25	; 0x30
    1356:	8f a7       	std	Y+47, r24	; 0x2f
    1358:	0f c0       	rjmp	.+30     	; 0x1378 <left+0xca>
    135a:	80 e7       	ldi	r24, 0x70	; 112
    135c:	91 e0       	ldi	r25, 0x01	; 1
    135e:	9e a7       	std	Y+46, r25	; 0x2e
    1360:	8d a7       	std	Y+45, r24	; 0x2d
    1362:	8d a5       	ldd	r24, Y+45	; 0x2d
    1364:	9e a5       	ldd	r25, Y+46	; 0x2e
    1366:	01 97       	sbiw	r24, 0x01	; 1
    1368:	f1 f7       	brne	.-4      	; 0x1366 <left+0xb8>
    136a:	9e a7       	std	Y+46, r25	; 0x2e
    136c:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    136e:	8f a5       	ldd	r24, Y+47	; 0x2f
    1370:	98 a9       	ldd	r25, Y+48	; 0x30
    1372:	01 97       	sbiw	r24, 0x01	; 1
    1374:	98 ab       	std	Y+48, r25	; 0x30
    1376:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1378:	8f a5       	ldd	r24, Y+47	; 0x2f
    137a:	98 a9       	ldd	r25, Y+48	; 0x30
    137c:	00 97       	sbiw	r24, 0x00	; 0
    137e:	69 f7       	brne	.-38     	; 0x135a <left+0xac>
    1380:	14 c0       	rjmp	.+40     	; 0x13aa <left+0xfc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1382:	69 a9       	ldd	r22, Y+49	; 0x31
    1384:	7a a9       	ldd	r23, Y+50	; 0x32
    1386:	8b a9       	ldd	r24, Y+51	; 0x33
    1388:	9c a9       	ldd	r25, Y+52	; 0x34
    138a:	0e 94 93 11 	call	0x2326	; 0x2326 <__fixunssfsi>
    138e:	dc 01       	movw	r26, r24
    1390:	cb 01       	movw	r24, r22
    1392:	98 ab       	std	Y+48, r25	; 0x30
    1394:	8f a7       	std	Y+47, r24	; 0x2f
    1396:	8f a5       	ldd	r24, Y+47	; 0x2f
    1398:	98 a9       	ldd	r25, Y+48	; 0x30
    139a:	9c a7       	std	Y+44, r25	; 0x2c
    139c:	8b a7       	std	Y+43, r24	; 0x2b
    139e:	8b a5       	ldd	r24, Y+43	; 0x2b
    13a0:	9c a5       	ldd	r25, Y+44	; 0x2c
    13a2:	01 97       	sbiw	r24, 0x01	; 1
    13a4:	f1 f7       	brne	.-4      	; 0x13a2 <left+0xf4>
    13a6:	9c a7       	std	Y+44, r25	; 0x2c
    13a8:	8b a7       	std	Y+43, r24	; 0x2b
 _delay_ms(step_time);

 right_leg_forward();
    13aa:	0e 94 79 02 	call	0x4f2	; 0x4f2 <right_leg_forward>
    13ae:	80 e0       	ldi	r24, 0x00	; 0
    13b0:	90 e0       	ldi	r25, 0x00	; 0
    13b2:	aa e7       	ldi	r26, 0x7A	; 122
    13b4:	b3 e4       	ldi	r27, 0x43	; 67
    13b6:	8f a3       	std	Y+39, r24	; 0x27
    13b8:	98 a7       	std	Y+40, r25	; 0x28
    13ba:	a9 a7       	std	Y+41, r26	; 0x29
    13bc:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    13be:	6f a1       	ldd	r22, Y+39	; 0x27
    13c0:	78 a5       	ldd	r23, Y+40	; 0x28
    13c2:	89 a5       	ldd	r24, Y+41	; 0x29
    13c4:	9a a5       	ldd	r25, Y+42	; 0x2a
    13c6:	26 e6       	ldi	r18, 0x66	; 102
    13c8:	36 e6       	ldi	r19, 0x66	; 102
    13ca:	46 e6       	ldi	r20, 0x66	; 102
    13cc:	55 e4       	ldi	r21, 0x45	; 69
    13ce:	0e 94 69 13 	call	0x26d2	; 0x26d2 <__mulsf3>
    13d2:	dc 01       	movw	r26, r24
    13d4:	cb 01       	movw	r24, r22
    13d6:	8b a3       	std	Y+35, r24	; 0x23
    13d8:	9c a3       	std	Y+36, r25	; 0x24
    13da:	ad a3       	std	Y+37, r26	; 0x25
    13dc:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    13de:	6b a1       	ldd	r22, Y+35	; 0x23
    13e0:	7c a1       	ldd	r23, Y+36	; 0x24
    13e2:	8d a1       	ldd	r24, Y+37	; 0x25
    13e4:	9e a1       	ldd	r25, Y+38	; 0x26
    13e6:	20 e0       	ldi	r18, 0x00	; 0
    13e8:	30 e0       	ldi	r19, 0x00	; 0
    13ea:	40 e8       	ldi	r20, 0x80	; 128
    13ec:	5f e3       	ldi	r21, 0x3F	; 63
    13ee:	0e 94 6f 15 	call	0x2ade	; 0x2ade <__ltsf2>
    13f2:	88 23       	and	r24, r24
    13f4:	2c f4       	brge	.+10     	; 0x1400 <left+0x152>
		__ticks = 1;
    13f6:	81 e0       	ldi	r24, 0x01	; 1
    13f8:	90 e0       	ldi	r25, 0x00	; 0
    13fa:	9a a3       	std	Y+34, r25	; 0x22
    13fc:	89 a3       	std	Y+33, r24	; 0x21
    13fe:	3f c0       	rjmp	.+126    	; 0x147e <left+0x1d0>
	else if (__tmp > 65535)
    1400:	6b a1       	ldd	r22, Y+35	; 0x23
    1402:	7c a1       	ldd	r23, Y+36	; 0x24
    1404:	8d a1       	ldd	r24, Y+37	; 0x25
    1406:	9e a1       	ldd	r25, Y+38	; 0x26
    1408:	20 e0       	ldi	r18, 0x00	; 0
    140a:	3f ef       	ldi	r19, 0xFF	; 255
    140c:	4f e7       	ldi	r20, 0x7F	; 127
    140e:	57 e4       	ldi	r21, 0x47	; 71
    1410:	0e 94 0f 15 	call	0x2a1e	; 0x2a1e <__gtsf2>
    1414:	18 16       	cp	r1, r24
    1416:	4c f5       	brge	.+82     	; 0x146a <left+0x1bc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1418:	6f a1       	ldd	r22, Y+39	; 0x27
    141a:	78 a5       	ldd	r23, Y+40	; 0x28
    141c:	89 a5       	ldd	r24, Y+41	; 0x29
    141e:	9a a5       	ldd	r25, Y+42	; 0x2a
    1420:	20 e0       	ldi	r18, 0x00	; 0
    1422:	30 e0       	ldi	r19, 0x00	; 0
    1424:	40 e2       	ldi	r20, 0x20	; 32
    1426:	51 e4       	ldi	r21, 0x41	; 65
    1428:	0e 94 69 13 	call	0x26d2	; 0x26d2 <__mulsf3>
    142c:	dc 01       	movw	r26, r24
    142e:	cb 01       	movw	r24, r22
    1430:	bc 01       	movw	r22, r24
    1432:	cd 01       	movw	r24, r26
    1434:	0e 94 93 11 	call	0x2326	; 0x2326 <__fixunssfsi>
    1438:	dc 01       	movw	r26, r24
    143a:	cb 01       	movw	r24, r22
    143c:	9a a3       	std	Y+34, r25	; 0x22
    143e:	89 a3       	std	Y+33, r24	; 0x21
    1440:	0f c0       	rjmp	.+30     	; 0x1460 <left+0x1b2>
    1442:	80 e7       	ldi	r24, 0x70	; 112
    1444:	91 e0       	ldi	r25, 0x01	; 1
    1446:	98 a3       	std	Y+32, r25	; 0x20
    1448:	8f 8f       	std	Y+31, r24	; 0x1f
    144a:	8f 8d       	ldd	r24, Y+31	; 0x1f
    144c:	98 a1       	ldd	r25, Y+32	; 0x20
    144e:	01 97       	sbiw	r24, 0x01	; 1
    1450:	f1 f7       	brne	.-4      	; 0x144e <left+0x1a0>
    1452:	98 a3       	std	Y+32, r25	; 0x20
    1454:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1456:	89 a1       	ldd	r24, Y+33	; 0x21
    1458:	9a a1       	ldd	r25, Y+34	; 0x22
    145a:	01 97       	sbiw	r24, 0x01	; 1
    145c:	9a a3       	std	Y+34, r25	; 0x22
    145e:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1460:	89 a1       	ldd	r24, Y+33	; 0x21
    1462:	9a a1       	ldd	r25, Y+34	; 0x22
    1464:	00 97       	sbiw	r24, 0x00	; 0
    1466:	69 f7       	brne	.-38     	; 0x1442 <left+0x194>
    1468:	14 c0       	rjmp	.+40     	; 0x1492 <left+0x1e4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    146a:	6b a1       	ldd	r22, Y+35	; 0x23
    146c:	7c a1       	ldd	r23, Y+36	; 0x24
    146e:	8d a1       	ldd	r24, Y+37	; 0x25
    1470:	9e a1       	ldd	r25, Y+38	; 0x26
    1472:	0e 94 93 11 	call	0x2326	; 0x2326 <__fixunssfsi>
    1476:	dc 01       	movw	r26, r24
    1478:	cb 01       	movw	r24, r22
    147a:	9a a3       	std	Y+34, r25	; 0x22
    147c:	89 a3       	std	Y+33, r24	; 0x21
    147e:	89 a1       	ldd	r24, Y+33	; 0x21
    1480:	9a a1       	ldd	r25, Y+34	; 0x22
    1482:	9e 8f       	std	Y+30, r25	; 0x1e
    1484:	8d 8f       	std	Y+29, r24	; 0x1d
    1486:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1488:	9e 8d       	ldd	r25, Y+30	; 0x1e
    148a:	01 97       	sbiw	r24, 0x01	; 1
    148c:	f1 f7       	brne	.-4      	; 0x148a <left+0x1dc>
    148e:	9e 8f       	std	Y+30, r25	; 0x1e
    1490:	8d 8f       	std	Y+29, r24	; 0x1d
 _delay_ms(step_time);

 mid_leg_left_down();
    1492:	0e 94 97 02 	call	0x52e	; 0x52e <mid_leg_left_down>
    1496:	80 e0       	ldi	r24, 0x00	; 0
    1498:	90 e0       	ldi	r25, 0x00	; 0
    149a:	aa e7       	ldi	r26, 0x7A	; 122
    149c:	b3 e4       	ldi	r27, 0x43	; 67
    149e:	89 8f       	std	Y+25, r24	; 0x19
    14a0:	9a 8f       	std	Y+26, r25	; 0x1a
    14a2:	ab 8f       	std	Y+27, r26	; 0x1b
    14a4:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    14a6:	69 8d       	ldd	r22, Y+25	; 0x19
    14a8:	7a 8d       	ldd	r23, Y+26	; 0x1a
    14aa:	8b 8d       	ldd	r24, Y+27	; 0x1b
    14ac:	9c 8d       	ldd	r25, Y+28	; 0x1c
    14ae:	26 e6       	ldi	r18, 0x66	; 102
    14b0:	36 e6       	ldi	r19, 0x66	; 102
    14b2:	46 e6       	ldi	r20, 0x66	; 102
    14b4:	55 e4       	ldi	r21, 0x45	; 69
    14b6:	0e 94 69 13 	call	0x26d2	; 0x26d2 <__mulsf3>
    14ba:	dc 01       	movw	r26, r24
    14bc:	cb 01       	movw	r24, r22
    14be:	8d 8b       	std	Y+21, r24	; 0x15
    14c0:	9e 8b       	std	Y+22, r25	; 0x16
    14c2:	af 8b       	std	Y+23, r26	; 0x17
    14c4:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    14c6:	6d 89       	ldd	r22, Y+21	; 0x15
    14c8:	7e 89       	ldd	r23, Y+22	; 0x16
    14ca:	8f 89       	ldd	r24, Y+23	; 0x17
    14cc:	98 8d       	ldd	r25, Y+24	; 0x18
    14ce:	20 e0       	ldi	r18, 0x00	; 0
    14d0:	30 e0       	ldi	r19, 0x00	; 0
    14d2:	40 e8       	ldi	r20, 0x80	; 128
    14d4:	5f e3       	ldi	r21, 0x3F	; 63
    14d6:	0e 94 6f 15 	call	0x2ade	; 0x2ade <__ltsf2>
    14da:	88 23       	and	r24, r24
    14dc:	2c f4       	brge	.+10     	; 0x14e8 <left+0x23a>
		__ticks = 1;
    14de:	81 e0       	ldi	r24, 0x01	; 1
    14e0:	90 e0       	ldi	r25, 0x00	; 0
    14e2:	9c 8b       	std	Y+20, r25	; 0x14
    14e4:	8b 8b       	std	Y+19, r24	; 0x13
    14e6:	3f c0       	rjmp	.+126    	; 0x1566 <left+0x2b8>
	else if (__tmp > 65535)
    14e8:	6d 89       	ldd	r22, Y+21	; 0x15
    14ea:	7e 89       	ldd	r23, Y+22	; 0x16
    14ec:	8f 89       	ldd	r24, Y+23	; 0x17
    14ee:	98 8d       	ldd	r25, Y+24	; 0x18
    14f0:	20 e0       	ldi	r18, 0x00	; 0
    14f2:	3f ef       	ldi	r19, 0xFF	; 255
    14f4:	4f e7       	ldi	r20, 0x7F	; 127
    14f6:	57 e4       	ldi	r21, 0x47	; 71
    14f8:	0e 94 0f 15 	call	0x2a1e	; 0x2a1e <__gtsf2>
    14fc:	18 16       	cp	r1, r24
    14fe:	4c f5       	brge	.+82     	; 0x1552 <left+0x2a4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1500:	69 8d       	ldd	r22, Y+25	; 0x19
    1502:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1504:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1506:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1508:	20 e0       	ldi	r18, 0x00	; 0
    150a:	30 e0       	ldi	r19, 0x00	; 0
    150c:	40 e2       	ldi	r20, 0x20	; 32
    150e:	51 e4       	ldi	r21, 0x41	; 65
    1510:	0e 94 69 13 	call	0x26d2	; 0x26d2 <__mulsf3>
    1514:	dc 01       	movw	r26, r24
    1516:	cb 01       	movw	r24, r22
    1518:	bc 01       	movw	r22, r24
    151a:	cd 01       	movw	r24, r26
    151c:	0e 94 93 11 	call	0x2326	; 0x2326 <__fixunssfsi>
    1520:	dc 01       	movw	r26, r24
    1522:	cb 01       	movw	r24, r22
    1524:	9c 8b       	std	Y+20, r25	; 0x14
    1526:	8b 8b       	std	Y+19, r24	; 0x13
    1528:	0f c0       	rjmp	.+30     	; 0x1548 <left+0x29a>
    152a:	80 e7       	ldi	r24, 0x70	; 112
    152c:	91 e0       	ldi	r25, 0x01	; 1
    152e:	9a 8b       	std	Y+18, r25	; 0x12
    1530:	89 8b       	std	Y+17, r24	; 0x11
    1532:	89 89       	ldd	r24, Y+17	; 0x11
    1534:	9a 89       	ldd	r25, Y+18	; 0x12
    1536:	01 97       	sbiw	r24, 0x01	; 1
    1538:	f1 f7       	brne	.-4      	; 0x1536 <left+0x288>
    153a:	9a 8b       	std	Y+18, r25	; 0x12
    153c:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    153e:	8b 89       	ldd	r24, Y+19	; 0x13
    1540:	9c 89       	ldd	r25, Y+20	; 0x14
    1542:	01 97       	sbiw	r24, 0x01	; 1
    1544:	9c 8b       	std	Y+20, r25	; 0x14
    1546:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1548:	8b 89       	ldd	r24, Y+19	; 0x13
    154a:	9c 89       	ldd	r25, Y+20	; 0x14
    154c:	00 97       	sbiw	r24, 0x00	; 0
    154e:	69 f7       	brne	.-38     	; 0x152a <left+0x27c>
    1550:	14 c0       	rjmp	.+40     	; 0x157a <left+0x2cc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1552:	6d 89       	ldd	r22, Y+21	; 0x15
    1554:	7e 89       	ldd	r23, Y+22	; 0x16
    1556:	8f 89       	ldd	r24, Y+23	; 0x17
    1558:	98 8d       	ldd	r25, Y+24	; 0x18
    155a:	0e 94 93 11 	call	0x2326	; 0x2326 <__fixunssfsi>
    155e:	dc 01       	movw	r26, r24
    1560:	cb 01       	movw	r24, r22
    1562:	9c 8b       	std	Y+20, r25	; 0x14
    1564:	8b 8b       	std	Y+19, r24	; 0x13
    1566:	8b 89       	ldd	r24, Y+19	; 0x13
    1568:	9c 89       	ldd	r25, Y+20	; 0x14
    156a:	98 8b       	std	Y+16, r25	; 0x10
    156c:	8f 87       	std	Y+15, r24	; 0x0f
    156e:	8f 85       	ldd	r24, Y+15	; 0x0f
    1570:	98 89       	ldd	r25, Y+16	; 0x10
    1572:	01 97       	sbiw	r24, 0x01	; 1
    1574:	f1 f7       	brne	.-4      	; 0x1572 <left+0x2c4>
    1576:	98 8b       	std	Y+16, r25	; 0x10
    1578:	8f 87       	std	Y+15, r24	; 0x0f
 _delay_ms(step_time);

 right_leg_back();
    157a:	0e 94 83 02 	call	0x506	; 0x506 <right_leg_back>
    157e:	80 e0       	ldi	r24, 0x00	; 0
    1580:	90 e0       	ldi	r25, 0x00	; 0
    1582:	aa e7       	ldi	r26, 0x7A	; 122
    1584:	b3 e4       	ldi	r27, 0x43	; 67
    1586:	8b 87       	std	Y+11, r24	; 0x0b
    1588:	9c 87       	std	Y+12, r25	; 0x0c
    158a:	ad 87       	std	Y+13, r26	; 0x0d
    158c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    158e:	6b 85       	ldd	r22, Y+11	; 0x0b
    1590:	7c 85       	ldd	r23, Y+12	; 0x0c
    1592:	8d 85       	ldd	r24, Y+13	; 0x0d
    1594:	9e 85       	ldd	r25, Y+14	; 0x0e
    1596:	26 e6       	ldi	r18, 0x66	; 102
    1598:	36 e6       	ldi	r19, 0x66	; 102
    159a:	46 e6       	ldi	r20, 0x66	; 102
    159c:	55 e4       	ldi	r21, 0x45	; 69
    159e:	0e 94 69 13 	call	0x26d2	; 0x26d2 <__mulsf3>
    15a2:	dc 01       	movw	r26, r24
    15a4:	cb 01       	movw	r24, r22
    15a6:	8f 83       	std	Y+7, r24	; 0x07
    15a8:	98 87       	std	Y+8, r25	; 0x08
    15aa:	a9 87       	std	Y+9, r26	; 0x09
    15ac:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    15ae:	6f 81       	ldd	r22, Y+7	; 0x07
    15b0:	78 85       	ldd	r23, Y+8	; 0x08
    15b2:	89 85       	ldd	r24, Y+9	; 0x09
    15b4:	9a 85       	ldd	r25, Y+10	; 0x0a
    15b6:	20 e0       	ldi	r18, 0x00	; 0
    15b8:	30 e0       	ldi	r19, 0x00	; 0
    15ba:	40 e8       	ldi	r20, 0x80	; 128
    15bc:	5f e3       	ldi	r21, 0x3F	; 63
    15be:	0e 94 6f 15 	call	0x2ade	; 0x2ade <__ltsf2>
    15c2:	88 23       	and	r24, r24
    15c4:	2c f4       	brge	.+10     	; 0x15d0 <left+0x322>
		__ticks = 1;
    15c6:	81 e0       	ldi	r24, 0x01	; 1
    15c8:	90 e0       	ldi	r25, 0x00	; 0
    15ca:	9e 83       	std	Y+6, r25	; 0x06
    15cc:	8d 83       	std	Y+5, r24	; 0x05
    15ce:	3f c0       	rjmp	.+126    	; 0x164e <left+0x3a0>
	else if (__tmp > 65535)
    15d0:	6f 81       	ldd	r22, Y+7	; 0x07
    15d2:	78 85       	ldd	r23, Y+8	; 0x08
    15d4:	89 85       	ldd	r24, Y+9	; 0x09
    15d6:	9a 85       	ldd	r25, Y+10	; 0x0a
    15d8:	20 e0       	ldi	r18, 0x00	; 0
    15da:	3f ef       	ldi	r19, 0xFF	; 255
    15dc:	4f e7       	ldi	r20, 0x7F	; 127
    15de:	57 e4       	ldi	r21, 0x47	; 71
    15e0:	0e 94 0f 15 	call	0x2a1e	; 0x2a1e <__gtsf2>
    15e4:	18 16       	cp	r1, r24
    15e6:	4c f5       	brge	.+82     	; 0x163a <left+0x38c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    15e8:	6b 85       	ldd	r22, Y+11	; 0x0b
    15ea:	7c 85       	ldd	r23, Y+12	; 0x0c
    15ec:	8d 85       	ldd	r24, Y+13	; 0x0d
    15ee:	9e 85       	ldd	r25, Y+14	; 0x0e
    15f0:	20 e0       	ldi	r18, 0x00	; 0
    15f2:	30 e0       	ldi	r19, 0x00	; 0
    15f4:	40 e2       	ldi	r20, 0x20	; 32
    15f6:	51 e4       	ldi	r21, 0x41	; 65
    15f8:	0e 94 69 13 	call	0x26d2	; 0x26d2 <__mulsf3>
    15fc:	dc 01       	movw	r26, r24
    15fe:	cb 01       	movw	r24, r22
    1600:	bc 01       	movw	r22, r24
    1602:	cd 01       	movw	r24, r26
    1604:	0e 94 93 11 	call	0x2326	; 0x2326 <__fixunssfsi>
    1608:	dc 01       	movw	r26, r24
    160a:	cb 01       	movw	r24, r22
    160c:	9e 83       	std	Y+6, r25	; 0x06
    160e:	8d 83       	std	Y+5, r24	; 0x05
    1610:	0f c0       	rjmp	.+30     	; 0x1630 <left+0x382>
    1612:	80 e7       	ldi	r24, 0x70	; 112
    1614:	91 e0       	ldi	r25, 0x01	; 1
    1616:	9c 83       	std	Y+4, r25	; 0x04
    1618:	8b 83       	std	Y+3, r24	; 0x03
    161a:	8b 81       	ldd	r24, Y+3	; 0x03
    161c:	9c 81       	ldd	r25, Y+4	; 0x04
    161e:	01 97       	sbiw	r24, 0x01	; 1
    1620:	f1 f7       	brne	.-4      	; 0x161e <left+0x370>
    1622:	9c 83       	std	Y+4, r25	; 0x04
    1624:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1626:	8d 81       	ldd	r24, Y+5	; 0x05
    1628:	9e 81       	ldd	r25, Y+6	; 0x06
    162a:	01 97       	sbiw	r24, 0x01	; 1
    162c:	9e 83       	std	Y+6, r25	; 0x06
    162e:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1630:	8d 81       	ldd	r24, Y+5	; 0x05
    1632:	9e 81       	ldd	r25, Y+6	; 0x06
    1634:	00 97       	sbiw	r24, 0x00	; 0
    1636:	69 f7       	brne	.-38     	; 0x1612 <left+0x364>
    1638:	14 c0       	rjmp	.+40     	; 0x1662 <left+0x3b4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    163a:	6f 81       	ldd	r22, Y+7	; 0x07
    163c:	78 85       	ldd	r23, Y+8	; 0x08
    163e:	89 85       	ldd	r24, Y+9	; 0x09
    1640:	9a 85       	ldd	r25, Y+10	; 0x0a
    1642:	0e 94 93 11 	call	0x2326	; 0x2326 <__fixunssfsi>
    1646:	dc 01       	movw	r26, r24
    1648:	cb 01       	movw	r24, r22
    164a:	9e 83       	std	Y+6, r25	; 0x06
    164c:	8d 83       	std	Y+5, r24	; 0x05
    164e:	8d 81       	ldd	r24, Y+5	; 0x05
    1650:	9e 81       	ldd	r25, Y+6	; 0x06
    1652:	9a 83       	std	Y+2, r25	; 0x02
    1654:	89 83       	std	Y+1, r24	; 0x01
    1656:	89 81       	ldd	r24, Y+1	; 0x01
    1658:	9a 81       	ldd	r25, Y+2	; 0x02
    165a:	01 97       	sbiw	r24, 0x01	; 1
    165c:	f1 f7       	brne	.-4      	; 0x165a <left+0x3ac>
    165e:	9a 83       	std	Y+2, r25	; 0x02
    1660:	89 83       	std	Y+1, r24	; 0x01
 _delay_ms(step_time);
}
    1662:	e8 96       	adiw	r28, 0x38	; 56
    1664:	0f b6       	in	r0, 0x3f	; 63
    1666:	f8 94       	cli
    1668:	de bf       	out	0x3e, r29	; 62
    166a:	0f be       	out	0x3f, r0	; 63
    166c:	cd bf       	out	0x3d, r28	; 61
    166e:	cf 91       	pop	r28
    1670:	df 91       	pop	r29
    1672:	08 95       	ret

00001674 <right>:

void right (void) //turn right by moving left pair of legs in the forward direction
{
    1674:	df 93       	push	r29
    1676:	cf 93       	push	r28
    1678:	cd b7       	in	r28, 0x3d	; 61
    167a:	de b7       	in	r29, 0x3e	; 62
    167c:	e8 97       	sbiw	r28, 0x38	; 56
    167e:	0f b6       	in	r0, 0x3f	; 63
    1680:	f8 94       	cli
    1682:	de bf       	out	0x3e, r29	; 62
    1684:	0f be       	out	0x3f, r0	; 63
    1686:	cd bf       	out	0x3d, r28	; 61
 mid_leg_left_down();
    1688:	0e 94 97 02 	call	0x52e	; 0x52e <mid_leg_left_down>
    168c:	80 e0       	ldi	r24, 0x00	; 0
    168e:	90 e0       	ldi	r25, 0x00	; 0
    1690:	aa e7       	ldi	r26, 0x7A	; 122
    1692:	b3 e4       	ldi	r27, 0x43	; 67
    1694:	8d ab       	std	Y+53, r24	; 0x35
    1696:	9e ab       	std	Y+54, r25	; 0x36
    1698:	af ab       	std	Y+55, r26	; 0x37
    169a:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    169c:	6d a9       	ldd	r22, Y+53	; 0x35
    169e:	7e a9       	ldd	r23, Y+54	; 0x36
    16a0:	8f a9       	ldd	r24, Y+55	; 0x37
    16a2:	98 ad       	ldd	r25, Y+56	; 0x38
    16a4:	26 e6       	ldi	r18, 0x66	; 102
    16a6:	36 e6       	ldi	r19, 0x66	; 102
    16a8:	46 e6       	ldi	r20, 0x66	; 102
    16aa:	55 e4       	ldi	r21, 0x45	; 69
    16ac:	0e 94 69 13 	call	0x26d2	; 0x26d2 <__mulsf3>
    16b0:	dc 01       	movw	r26, r24
    16b2:	cb 01       	movw	r24, r22
    16b4:	89 ab       	std	Y+49, r24	; 0x31
    16b6:	9a ab       	std	Y+50, r25	; 0x32
    16b8:	ab ab       	std	Y+51, r26	; 0x33
    16ba:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    16bc:	69 a9       	ldd	r22, Y+49	; 0x31
    16be:	7a a9       	ldd	r23, Y+50	; 0x32
    16c0:	8b a9       	ldd	r24, Y+51	; 0x33
    16c2:	9c a9       	ldd	r25, Y+52	; 0x34
    16c4:	20 e0       	ldi	r18, 0x00	; 0
    16c6:	30 e0       	ldi	r19, 0x00	; 0
    16c8:	40 e8       	ldi	r20, 0x80	; 128
    16ca:	5f e3       	ldi	r21, 0x3F	; 63
    16cc:	0e 94 6f 15 	call	0x2ade	; 0x2ade <__ltsf2>
    16d0:	88 23       	and	r24, r24
    16d2:	2c f4       	brge	.+10     	; 0x16de <right+0x6a>
		__ticks = 1;
    16d4:	81 e0       	ldi	r24, 0x01	; 1
    16d6:	90 e0       	ldi	r25, 0x00	; 0
    16d8:	98 ab       	std	Y+48, r25	; 0x30
    16da:	8f a7       	std	Y+47, r24	; 0x2f
    16dc:	3f c0       	rjmp	.+126    	; 0x175c <right+0xe8>
	else if (__tmp > 65535)
    16de:	69 a9       	ldd	r22, Y+49	; 0x31
    16e0:	7a a9       	ldd	r23, Y+50	; 0x32
    16e2:	8b a9       	ldd	r24, Y+51	; 0x33
    16e4:	9c a9       	ldd	r25, Y+52	; 0x34
    16e6:	20 e0       	ldi	r18, 0x00	; 0
    16e8:	3f ef       	ldi	r19, 0xFF	; 255
    16ea:	4f e7       	ldi	r20, 0x7F	; 127
    16ec:	57 e4       	ldi	r21, 0x47	; 71
    16ee:	0e 94 0f 15 	call	0x2a1e	; 0x2a1e <__gtsf2>
    16f2:	18 16       	cp	r1, r24
    16f4:	4c f5       	brge	.+82     	; 0x1748 <right+0xd4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    16f6:	6d a9       	ldd	r22, Y+53	; 0x35
    16f8:	7e a9       	ldd	r23, Y+54	; 0x36
    16fa:	8f a9       	ldd	r24, Y+55	; 0x37
    16fc:	98 ad       	ldd	r25, Y+56	; 0x38
    16fe:	20 e0       	ldi	r18, 0x00	; 0
    1700:	30 e0       	ldi	r19, 0x00	; 0
    1702:	40 e2       	ldi	r20, 0x20	; 32
    1704:	51 e4       	ldi	r21, 0x41	; 65
    1706:	0e 94 69 13 	call	0x26d2	; 0x26d2 <__mulsf3>
    170a:	dc 01       	movw	r26, r24
    170c:	cb 01       	movw	r24, r22
    170e:	bc 01       	movw	r22, r24
    1710:	cd 01       	movw	r24, r26
    1712:	0e 94 93 11 	call	0x2326	; 0x2326 <__fixunssfsi>
    1716:	dc 01       	movw	r26, r24
    1718:	cb 01       	movw	r24, r22
    171a:	98 ab       	std	Y+48, r25	; 0x30
    171c:	8f a7       	std	Y+47, r24	; 0x2f
    171e:	0f c0       	rjmp	.+30     	; 0x173e <right+0xca>
    1720:	80 e7       	ldi	r24, 0x70	; 112
    1722:	91 e0       	ldi	r25, 0x01	; 1
    1724:	9e a7       	std	Y+46, r25	; 0x2e
    1726:	8d a7       	std	Y+45, r24	; 0x2d
    1728:	8d a5       	ldd	r24, Y+45	; 0x2d
    172a:	9e a5       	ldd	r25, Y+46	; 0x2e
    172c:	01 97       	sbiw	r24, 0x01	; 1
    172e:	f1 f7       	brne	.-4      	; 0x172c <right+0xb8>
    1730:	9e a7       	std	Y+46, r25	; 0x2e
    1732:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1734:	8f a5       	ldd	r24, Y+47	; 0x2f
    1736:	98 a9       	ldd	r25, Y+48	; 0x30
    1738:	01 97       	sbiw	r24, 0x01	; 1
    173a:	98 ab       	std	Y+48, r25	; 0x30
    173c:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    173e:	8f a5       	ldd	r24, Y+47	; 0x2f
    1740:	98 a9       	ldd	r25, Y+48	; 0x30
    1742:	00 97       	sbiw	r24, 0x00	; 0
    1744:	69 f7       	brne	.-38     	; 0x1720 <right+0xac>
    1746:	14 c0       	rjmp	.+40     	; 0x1770 <right+0xfc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1748:	69 a9       	ldd	r22, Y+49	; 0x31
    174a:	7a a9       	ldd	r23, Y+50	; 0x32
    174c:	8b a9       	ldd	r24, Y+51	; 0x33
    174e:	9c a9       	ldd	r25, Y+52	; 0x34
    1750:	0e 94 93 11 	call	0x2326	; 0x2326 <__fixunssfsi>
    1754:	dc 01       	movw	r26, r24
    1756:	cb 01       	movw	r24, r22
    1758:	98 ab       	std	Y+48, r25	; 0x30
    175a:	8f a7       	std	Y+47, r24	; 0x2f
    175c:	8f a5       	ldd	r24, Y+47	; 0x2f
    175e:	98 a9       	ldd	r25, Y+48	; 0x30
    1760:	9c a7       	std	Y+44, r25	; 0x2c
    1762:	8b a7       	std	Y+43, r24	; 0x2b
    1764:	8b a5       	ldd	r24, Y+43	; 0x2b
    1766:	9c a5       	ldd	r25, Y+44	; 0x2c
    1768:	01 97       	sbiw	r24, 0x01	; 1
    176a:	f1 f7       	brne	.-4      	; 0x1768 <right+0xf4>
    176c:	9c a7       	std	Y+44, r25	; 0x2c
    176e:	8b a7       	std	Y+43, r24	; 0x2b
 _delay_ms(step_time);

 left_leg_forward();
    1770:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <left_leg_forward>
    1774:	80 e0       	ldi	r24, 0x00	; 0
    1776:	90 e0       	ldi	r25, 0x00	; 0
    1778:	aa e7       	ldi	r26, 0x7A	; 122
    177a:	b3 e4       	ldi	r27, 0x43	; 67
    177c:	8f a3       	std	Y+39, r24	; 0x27
    177e:	98 a7       	std	Y+40, r25	; 0x28
    1780:	a9 a7       	std	Y+41, r26	; 0x29
    1782:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1784:	6f a1       	ldd	r22, Y+39	; 0x27
    1786:	78 a5       	ldd	r23, Y+40	; 0x28
    1788:	89 a5       	ldd	r24, Y+41	; 0x29
    178a:	9a a5       	ldd	r25, Y+42	; 0x2a
    178c:	26 e6       	ldi	r18, 0x66	; 102
    178e:	36 e6       	ldi	r19, 0x66	; 102
    1790:	46 e6       	ldi	r20, 0x66	; 102
    1792:	55 e4       	ldi	r21, 0x45	; 69
    1794:	0e 94 69 13 	call	0x26d2	; 0x26d2 <__mulsf3>
    1798:	dc 01       	movw	r26, r24
    179a:	cb 01       	movw	r24, r22
    179c:	8b a3       	std	Y+35, r24	; 0x23
    179e:	9c a3       	std	Y+36, r25	; 0x24
    17a0:	ad a3       	std	Y+37, r26	; 0x25
    17a2:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    17a4:	6b a1       	ldd	r22, Y+35	; 0x23
    17a6:	7c a1       	ldd	r23, Y+36	; 0x24
    17a8:	8d a1       	ldd	r24, Y+37	; 0x25
    17aa:	9e a1       	ldd	r25, Y+38	; 0x26
    17ac:	20 e0       	ldi	r18, 0x00	; 0
    17ae:	30 e0       	ldi	r19, 0x00	; 0
    17b0:	40 e8       	ldi	r20, 0x80	; 128
    17b2:	5f e3       	ldi	r21, 0x3F	; 63
    17b4:	0e 94 6f 15 	call	0x2ade	; 0x2ade <__ltsf2>
    17b8:	88 23       	and	r24, r24
    17ba:	2c f4       	brge	.+10     	; 0x17c6 <right+0x152>
		__ticks = 1;
    17bc:	81 e0       	ldi	r24, 0x01	; 1
    17be:	90 e0       	ldi	r25, 0x00	; 0
    17c0:	9a a3       	std	Y+34, r25	; 0x22
    17c2:	89 a3       	std	Y+33, r24	; 0x21
    17c4:	3f c0       	rjmp	.+126    	; 0x1844 <right+0x1d0>
	else if (__tmp > 65535)
    17c6:	6b a1       	ldd	r22, Y+35	; 0x23
    17c8:	7c a1       	ldd	r23, Y+36	; 0x24
    17ca:	8d a1       	ldd	r24, Y+37	; 0x25
    17cc:	9e a1       	ldd	r25, Y+38	; 0x26
    17ce:	20 e0       	ldi	r18, 0x00	; 0
    17d0:	3f ef       	ldi	r19, 0xFF	; 255
    17d2:	4f e7       	ldi	r20, 0x7F	; 127
    17d4:	57 e4       	ldi	r21, 0x47	; 71
    17d6:	0e 94 0f 15 	call	0x2a1e	; 0x2a1e <__gtsf2>
    17da:	18 16       	cp	r1, r24
    17dc:	4c f5       	brge	.+82     	; 0x1830 <right+0x1bc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    17de:	6f a1       	ldd	r22, Y+39	; 0x27
    17e0:	78 a5       	ldd	r23, Y+40	; 0x28
    17e2:	89 a5       	ldd	r24, Y+41	; 0x29
    17e4:	9a a5       	ldd	r25, Y+42	; 0x2a
    17e6:	20 e0       	ldi	r18, 0x00	; 0
    17e8:	30 e0       	ldi	r19, 0x00	; 0
    17ea:	40 e2       	ldi	r20, 0x20	; 32
    17ec:	51 e4       	ldi	r21, 0x41	; 65
    17ee:	0e 94 69 13 	call	0x26d2	; 0x26d2 <__mulsf3>
    17f2:	dc 01       	movw	r26, r24
    17f4:	cb 01       	movw	r24, r22
    17f6:	bc 01       	movw	r22, r24
    17f8:	cd 01       	movw	r24, r26
    17fa:	0e 94 93 11 	call	0x2326	; 0x2326 <__fixunssfsi>
    17fe:	dc 01       	movw	r26, r24
    1800:	cb 01       	movw	r24, r22
    1802:	9a a3       	std	Y+34, r25	; 0x22
    1804:	89 a3       	std	Y+33, r24	; 0x21
    1806:	0f c0       	rjmp	.+30     	; 0x1826 <right+0x1b2>
    1808:	80 e7       	ldi	r24, 0x70	; 112
    180a:	91 e0       	ldi	r25, 0x01	; 1
    180c:	98 a3       	std	Y+32, r25	; 0x20
    180e:	8f 8f       	std	Y+31, r24	; 0x1f
    1810:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1812:	98 a1       	ldd	r25, Y+32	; 0x20
    1814:	01 97       	sbiw	r24, 0x01	; 1
    1816:	f1 f7       	brne	.-4      	; 0x1814 <right+0x1a0>
    1818:	98 a3       	std	Y+32, r25	; 0x20
    181a:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    181c:	89 a1       	ldd	r24, Y+33	; 0x21
    181e:	9a a1       	ldd	r25, Y+34	; 0x22
    1820:	01 97       	sbiw	r24, 0x01	; 1
    1822:	9a a3       	std	Y+34, r25	; 0x22
    1824:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1826:	89 a1       	ldd	r24, Y+33	; 0x21
    1828:	9a a1       	ldd	r25, Y+34	; 0x22
    182a:	00 97       	sbiw	r24, 0x00	; 0
    182c:	69 f7       	brne	.-38     	; 0x1808 <right+0x194>
    182e:	14 c0       	rjmp	.+40     	; 0x1858 <right+0x1e4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1830:	6b a1       	ldd	r22, Y+35	; 0x23
    1832:	7c a1       	ldd	r23, Y+36	; 0x24
    1834:	8d a1       	ldd	r24, Y+37	; 0x25
    1836:	9e a1       	ldd	r25, Y+38	; 0x26
    1838:	0e 94 93 11 	call	0x2326	; 0x2326 <__fixunssfsi>
    183c:	dc 01       	movw	r26, r24
    183e:	cb 01       	movw	r24, r22
    1840:	9a a3       	std	Y+34, r25	; 0x22
    1842:	89 a3       	std	Y+33, r24	; 0x21
    1844:	89 a1       	ldd	r24, Y+33	; 0x21
    1846:	9a a1       	ldd	r25, Y+34	; 0x22
    1848:	9e 8f       	std	Y+30, r25	; 0x1e
    184a:	8d 8f       	std	Y+29, r24	; 0x1d
    184c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    184e:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1850:	01 97       	sbiw	r24, 0x01	; 1
    1852:	f1 f7       	brne	.-4      	; 0x1850 <right+0x1dc>
    1854:	9e 8f       	std	Y+30, r25	; 0x1e
    1856:	8d 8f       	std	Y+29, r24	; 0x1d
 _delay_ms(step_time);

 mid_leg_right_down();
    1858:	0e 94 a1 02 	call	0x542	; 0x542 <mid_leg_right_down>
    185c:	80 e0       	ldi	r24, 0x00	; 0
    185e:	90 e0       	ldi	r25, 0x00	; 0
    1860:	aa e7       	ldi	r26, 0x7A	; 122
    1862:	b3 e4       	ldi	r27, 0x43	; 67
    1864:	89 8f       	std	Y+25, r24	; 0x19
    1866:	9a 8f       	std	Y+26, r25	; 0x1a
    1868:	ab 8f       	std	Y+27, r26	; 0x1b
    186a:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    186c:	69 8d       	ldd	r22, Y+25	; 0x19
    186e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1870:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1872:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1874:	26 e6       	ldi	r18, 0x66	; 102
    1876:	36 e6       	ldi	r19, 0x66	; 102
    1878:	46 e6       	ldi	r20, 0x66	; 102
    187a:	55 e4       	ldi	r21, 0x45	; 69
    187c:	0e 94 69 13 	call	0x26d2	; 0x26d2 <__mulsf3>
    1880:	dc 01       	movw	r26, r24
    1882:	cb 01       	movw	r24, r22
    1884:	8d 8b       	std	Y+21, r24	; 0x15
    1886:	9e 8b       	std	Y+22, r25	; 0x16
    1888:	af 8b       	std	Y+23, r26	; 0x17
    188a:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    188c:	6d 89       	ldd	r22, Y+21	; 0x15
    188e:	7e 89       	ldd	r23, Y+22	; 0x16
    1890:	8f 89       	ldd	r24, Y+23	; 0x17
    1892:	98 8d       	ldd	r25, Y+24	; 0x18
    1894:	20 e0       	ldi	r18, 0x00	; 0
    1896:	30 e0       	ldi	r19, 0x00	; 0
    1898:	40 e8       	ldi	r20, 0x80	; 128
    189a:	5f e3       	ldi	r21, 0x3F	; 63
    189c:	0e 94 6f 15 	call	0x2ade	; 0x2ade <__ltsf2>
    18a0:	88 23       	and	r24, r24
    18a2:	2c f4       	brge	.+10     	; 0x18ae <right+0x23a>
		__ticks = 1;
    18a4:	81 e0       	ldi	r24, 0x01	; 1
    18a6:	90 e0       	ldi	r25, 0x00	; 0
    18a8:	9c 8b       	std	Y+20, r25	; 0x14
    18aa:	8b 8b       	std	Y+19, r24	; 0x13
    18ac:	3f c0       	rjmp	.+126    	; 0x192c <right+0x2b8>
	else if (__tmp > 65535)
    18ae:	6d 89       	ldd	r22, Y+21	; 0x15
    18b0:	7e 89       	ldd	r23, Y+22	; 0x16
    18b2:	8f 89       	ldd	r24, Y+23	; 0x17
    18b4:	98 8d       	ldd	r25, Y+24	; 0x18
    18b6:	20 e0       	ldi	r18, 0x00	; 0
    18b8:	3f ef       	ldi	r19, 0xFF	; 255
    18ba:	4f e7       	ldi	r20, 0x7F	; 127
    18bc:	57 e4       	ldi	r21, 0x47	; 71
    18be:	0e 94 0f 15 	call	0x2a1e	; 0x2a1e <__gtsf2>
    18c2:	18 16       	cp	r1, r24
    18c4:	4c f5       	brge	.+82     	; 0x1918 <right+0x2a4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    18c6:	69 8d       	ldd	r22, Y+25	; 0x19
    18c8:	7a 8d       	ldd	r23, Y+26	; 0x1a
    18ca:	8b 8d       	ldd	r24, Y+27	; 0x1b
    18cc:	9c 8d       	ldd	r25, Y+28	; 0x1c
    18ce:	20 e0       	ldi	r18, 0x00	; 0
    18d0:	30 e0       	ldi	r19, 0x00	; 0
    18d2:	40 e2       	ldi	r20, 0x20	; 32
    18d4:	51 e4       	ldi	r21, 0x41	; 65
    18d6:	0e 94 69 13 	call	0x26d2	; 0x26d2 <__mulsf3>
    18da:	dc 01       	movw	r26, r24
    18dc:	cb 01       	movw	r24, r22
    18de:	bc 01       	movw	r22, r24
    18e0:	cd 01       	movw	r24, r26
    18e2:	0e 94 93 11 	call	0x2326	; 0x2326 <__fixunssfsi>
    18e6:	dc 01       	movw	r26, r24
    18e8:	cb 01       	movw	r24, r22
    18ea:	9c 8b       	std	Y+20, r25	; 0x14
    18ec:	8b 8b       	std	Y+19, r24	; 0x13
    18ee:	0f c0       	rjmp	.+30     	; 0x190e <right+0x29a>
    18f0:	80 e7       	ldi	r24, 0x70	; 112
    18f2:	91 e0       	ldi	r25, 0x01	; 1
    18f4:	9a 8b       	std	Y+18, r25	; 0x12
    18f6:	89 8b       	std	Y+17, r24	; 0x11
    18f8:	89 89       	ldd	r24, Y+17	; 0x11
    18fa:	9a 89       	ldd	r25, Y+18	; 0x12
    18fc:	01 97       	sbiw	r24, 0x01	; 1
    18fe:	f1 f7       	brne	.-4      	; 0x18fc <right+0x288>
    1900:	9a 8b       	std	Y+18, r25	; 0x12
    1902:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1904:	8b 89       	ldd	r24, Y+19	; 0x13
    1906:	9c 89       	ldd	r25, Y+20	; 0x14
    1908:	01 97       	sbiw	r24, 0x01	; 1
    190a:	9c 8b       	std	Y+20, r25	; 0x14
    190c:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    190e:	8b 89       	ldd	r24, Y+19	; 0x13
    1910:	9c 89       	ldd	r25, Y+20	; 0x14
    1912:	00 97       	sbiw	r24, 0x00	; 0
    1914:	69 f7       	brne	.-38     	; 0x18f0 <right+0x27c>
    1916:	14 c0       	rjmp	.+40     	; 0x1940 <right+0x2cc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1918:	6d 89       	ldd	r22, Y+21	; 0x15
    191a:	7e 89       	ldd	r23, Y+22	; 0x16
    191c:	8f 89       	ldd	r24, Y+23	; 0x17
    191e:	98 8d       	ldd	r25, Y+24	; 0x18
    1920:	0e 94 93 11 	call	0x2326	; 0x2326 <__fixunssfsi>
    1924:	dc 01       	movw	r26, r24
    1926:	cb 01       	movw	r24, r22
    1928:	9c 8b       	std	Y+20, r25	; 0x14
    192a:	8b 8b       	std	Y+19, r24	; 0x13
    192c:	8b 89       	ldd	r24, Y+19	; 0x13
    192e:	9c 89       	ldd	r25, Y+20	; 0x14
    1930:	98 8b       	std	Y+16, r25	; 0x10
    1932:	8f 87       	std	Y+15, r24	; 0x0f
    1934:	8f 85       	ldd	r24, Y+15	; 0x0f
    1936:	98 89       	ldd	r25, Y+16	; 0x10
    1938:	01 97       	sbiw	r24, 0x01	; 1
    193a:	f1 f7       	brne	.-4      	; 0x1938 <right+0x2c4>
    193c:	98 8b       	std	Y+16, r25	; 0x10
    193e:	8f 87       	std	Y+15, r24	; 0x0f
 _delay_ms(step_time);

 left_leg_back();
    1940:	0e 94 65 02 	call	0x4ca	; 0x4ca <left_leg_back>
    1944:	80 e0       	ldi	r24, 0x00	; 0
    1946:	90 e0       	ldi	r25, 0x00	; 0
    1948:	aa e7       	ldi	r26, 0x7A	; 122
    194a:	b3 e4       	ldi	r27, 0x43	; 67
    194c:	8b 87       	std	Y+11, r24	; 0x0b
    194e:	9c 87       	std	Y+12, r25	; 0x0c
    1950:	ad 87       	std	Y+13, r26	; 0x0d
    1952:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1954:	6b 85       	ldd	r22, Y+11	; 0x0b
    1956:	7c 85       	ldd	r23, Y+12	; 0x0c
    1958:	8d 85       	ldd	r24, Y+13	; 0x0d
    195a:	9e 85       	ldd	r25, Y+14	; 0x0e
    195c:	26 e6       	ldi	r18, 0x66	; 102
    195e:	36 e6       	ldi	r19, 0x66	; 102
    1960:	46 e6       	ldi	r20, 0x66	; 102
    1962:	55 e4       	ldi	r21, 0x45	; 69
    1964:	0e 94 69 13 	call	0x26d2	; 0x26d2 <__mulsf3>
    1968:	dc 01       	movw	r26, r24
    196a:	cb 01       	movw	r24, r22
    196c:	8f 83       	std	Y+7, r24	; 0x07
    196e:	98 87       	std	Y+8, r25	; 0x08
    1970:	a9 87       	std	Y+9, r26	; 0x09
    1972:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1974:	6f 81       	ldd	r22, Y+7	; 0x07
    1976:	78 85       	ldd	r23, Y+8	; 0x08
    1978:	89 85       	ldd	r24, Y+9	; 0x09
    197a:	9a 85       	ldd	r25, Y+10	; 0x0a
    197c:	20 e0       	ldi	r18, 0x00	; 0
    197e:	30 e0       	ldi	r19, 0x00	; 0
    1980:	40 e8       	ldi	r20, 0x80	; 128
    1982:	5f e3       	ldi	r21, 0x3F	; 63
    1984:	0e 94 6f 15 	call	0x2ade	; 0x2ade <__ltsf2>
    1988:	88 23       	and	r24, r24
    198a:	2c f4       	brge	.+10     	; 0x1996 <right+0x322>
		__ticks = 1;
    198c:	81 e0       	ldi	r24, 0x01	; 1
    198e:	90 e0       	ldi	r25, 0x00	; 0
    1990:	9e 83       	std	Y+6, r25	; 0x06
    1992:	8d 83       	std	Y+5, r24	; 0x05
    1994:	3f c0       	rjmp	.+126    	; 0x1a14 <right+0x3a0>
	else if (__tmp > 65535)
    1996:	6f 81       	ldd	r22, Y+7	; 0x07
    1998:	78 85       	ldd	r23, Y+8	; 0x08
    199a:	89 85       	ldd	r24, Y+9	; 0x09
    199c:	9a 85       	ldd	r25, Y+10	; 0x0a
    199e:	20 e0       	ldi	r18, 0x00	; 0
    19a0:	3f ef       	ldi	r19, 0xFF	; 255
    19a2:	4f e7       	ldi	r20, 0x7F	; 127
    19a4:	57 e4       	ldi	r21, 0x47	; 71
    19a6:	0e 94 0f 15 	call	0x2a1e	; 0x2a1e <__gtsf2>
    19aa:	18 16       	cp	r1, r24
    19ac:	4c f5       	brge	.+82     	; 0x1a00 <right+0x38c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    19ae:	6b 85       	ldd	r22, Y+11	; 0x0b
    19b0:	7c 85       	ldd	r23, Y+12	; 0x0c
    19b2:	8d 85       	ldd	r24, Y+13	; 0x0d
    19b4:	9e 85       	ldd	r25, Y+14	; 0x0e
    19b6:	20 e0       	ldi	r18, 0x00	; 0
    19b8:	30 e0       	ldi	r19, 0x00	; 0
    19ba:	40 e2       	ldi	r20, 0x20	; 32
    19bc:	51 e4       	ldi	r21, 0x41	; 65
    19be:	0e 94 69 13 	call	0x26d2	; 0x26d2 <__mulsf3>
    19c2:	dc 01       	movw	r26, r24
    19c4:	cb 01       	movw	r24, r22
    19c6:	bc 01       	movw	r22, r24
    19c8:	cd 01       	movw	r24, r26
    19ca:	0e 94 93 11 	call	0x2326	; 0x2326 <__fixunssfsi>
    19ce:	dc 01       	movw	r26, r24
    19d0:	cb 01       	movw	r24, r22
    19d2:	9e 83       	std	Y+6, r25	; 0x06
    19d4:	8d 83       	std	Y+5, r24	; 0x05
    19d6:	0f c0       	rjmp	.+30     	; 0x19f6 <right+0x382>
    19d8:	80 e7       	ldi	r24, 0x70	; 112
    19da:	91 e0       	ldi	r25, 0x01	; 1
    19dc:	9c 83       	std	Y+4, r25	; 0x04
    19de:	8b 83       	std	Y+3, r24	; 0x03
    19e0:	8b 81       	ldd	r24, Y+3	; 0x03
    19e2:	9c 81       	ldd	r25, Y+4	; 0x04
    19e4:	01 97       	sbiw	r24, 0x01	; 1
    19e6:	f1 f7       	brne	.-4      	; 0x19e4 <right+0x370>
    19e8:	9c 83       	std	Y+4, r25	; 0x04
    19ea:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    19ec:	8d 81       	ldd	r24, Y+5	; 0x05
    19ee:	9e 81       	ldd	r25, Y+6	; 0x06
    19f0:	01 97       	sbiw	r24, 0x01	; 1
    19f2:	9e 83       	std	Y+6, r25	; 0x06
    19f4:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    19f6:	8d 81       	ldd	r24, Y+5	; 0x05
    19f8:	9e 81       	ldd	r25, Y+6	; 0x06
    19fa:	00 97       	sbiw	r24, 0x00	; 0
    19fc:	69 f7       	brne	.-38     	; 0x19d8 <right+0x364>
    19fe:	14 c0       	rjmp	.+40     	; 0x1a28 <right+0x3b4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1a00:	6f 81       	ldd	r22, Y+7	; 0x07
    1a02:	78 85       	ldd	r23, Y+8	; 0x08
    1a04:	89 85       	ldd	r24, Y+9	; 0x09
    1a06:	9a 85       	ldd	r25, Y+10	; 0x0a
    1a08:	0e 94 93 11 	call	0x2326	; 0x2326 <__fixunssfsi>
    1a0c:	dc 01       	movw	r26, r24
    1a0e:	cb 01       	movw	r24, r22
    1a10:	9e 83       	std	Y+6, r25	; 0x06
    1a12:	8d 83       	std	Y+5, r24	; 0x05
    1a14:	8d 81       	ldd	r24, Y+5	; 0x05
    1a16:	9e 81       	ldd	r25, Y+6	; 0x06
    1a18:	9a 83       	std	Y+2, r25	; 0x02
    1a1a:	89 83       	std	Y+1, r24	; 0x01
    1a1c:	89 81       	ldd	r24, Y+1	; 0x01
    1a1e:	9a 81       	ldd	r25, Y+2	; 0x02
    1a20:	01 97       	sbiw	r24, 0x01	; 1
    1a22:	f1 f7       	brne	.-4      	; 0x1a20 <right+0x3ac>
    1a24:	9a 83       	std	Y+2, r25	; 0x02
    1a26:	89 83       	std	Y+1, r24	; 0x01
 _delay_ms(step_time);
}
    1a28:	e8 96       	adiw	r28, 0x38	; 56
    1a2a:	0f b6       	in	r0, 0x3f	; 63
    1a2c:	f8 94       	cli
    1a2e:	de bf       	out	0x3e, r29	; 62
    1a30:	0f be       	out	0x3f, r0	; 63
    1a32:	cd bf       	out	0x3d, r28	; 61
    1a34:	cf 91       	pop	r28
    1a36:	df 91       	pop	r29
    1a38:	08 95       	ret

00001a3a <left_back>:

void left_back (void) //turn left by moving left pair of legs in the backward direction
{
    1a3a:	df 93       	push	r29
    1a3c:	cf 93       	push	r28
    1a3e:	cd b7       	in	r28, 0x3d	; 61
    1a40:	de b7       	in	r29, 0x3e	; 62
    1a42:	e8 97       	sbiw	r28, 0x38	; 56
    1a44:	0f b6       	in	r0, 0x3f	; 63
    1a46:	f8 94       	cli
    1a48:	de bf       	out	0x3e, r29	; 62
    1a4a:	0f be       	out	0x3f, r0	; 63
    1a4c:	cd bf       	out	0x3d, r28	; 61
 mid_leg_left_down();
    1a4e:	0e 94 97 02 	call	0x52e	; 0x52e <mid_leg_left_down>
    1a52:	80 e0       	ldi	r24, 0x00	; 0
    1a54:	90 e0       	ldi	r25, 0x00	; 0
    1a56:	aa e7       	ldi	r26, 0x7A	; 122
    1a58:	b3 e4       	ldi	r27, 0x43	; 67
    1a5a:	8d ab       	std	Y+53, r24	; 0x35
    1a5c:	9e ab       	std	Y+54, r25	; 0x36
    1a5e:	af ab       	std	Y+55, r26	; 0x37
    1a60:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1a62:	6d a9       	ldd	r22, Y+53	; 0x35
    1a64:	7e a9       	ldd	r23, Y+54	; 0x36
    1a66:	8f a9       	ldd	r24, Y+55	; 0x37
    1a68:	98 ad       	ldd	r25, Y+56	; 0x38
    1a6a:	26 e6       	ldi	r18, 0x66	; 102
    1a6c:	36 e6       	ldi	r19, 0x66	; 102
    1a6e:	46 e6       	ldi	r20, 0x66	; 102
    1a70:	55 e4       	ldi	r21, 0x45	; 69
    1a72:	0e 94 69 13 	call	0x26d2	; 0x26d2 <__mulsf3>
    1a76:	dc 01       	movw	r26, r24
    1a78:	cb 01       	movw	r24, r22
    1a7a:	89 ab       	std	Y+49, r24	; 0x31
    1a7c:	9a ab       	std	Y+50, r25	; 0x32
    1a7e:	ab ab       	std	Y+51, r26	; 0x33
    1a80:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    1a82:	69 a9       	ldd	r22, Y+49	; 0x31
    1a84:	7a a9       	ldd	r23, Y+50	; 0x32
    1a86:	8b a9       	ldd	r24, Y+51	; 0x33
    1a88:	9c a9       	ldd	r25, Y+52	; 0x34
    1a8a:	20 e0       	ldi	r18, 0x00	; 0
    1a8c:	30 e0       	ldi	r19, 0x00	; 0
    1a8e:	40 e8       	ldi	r20, 0x80	; 128
    1a90:	5f e3       	ldi	r21, 0x3F	; 63
    1a92:	0e 94 6f 15 	call	0x2ade	; 0x2ade <__ltsf2>
    1a96:	88 23       	and	r24, r24
    1a98:	2c f4       	brge	.+10     	; 0x1aa4 <left_back+0x6a>
		__ticks = 1;
    1a9a:	81 e0       	ldi	r24, 0x01	; 1
    1a9c:	90 e0       	ldi	r25, 0x00	; 0
    1a9e:	98 ab       	std	Y+48, r25	; 0x30
    1aa0:	8f a7       	std	Y+47, r24	; 0x2f
    1aa2:	3f c0       	rjmp	.+126    	; 0x1b22 <left_back+0xe8>
	else if (__tmp > 65535)
    1aa4:	69 a9       	ldd	r22, Y+49	; 0x31
    1aa6:	7a a9       	ldd	r23, Y+50	; 0x32
    1aa8:	8b a9       	ldd	r24, Y+51	; 0x33
    1aaa:	9c a9       	ldd	r25, Y+52	; 0x34
    1aac:	20 e0       	ldi	r18, 0x00	; 0
    1aae:	3f ef       	ldi	r19, 0xFF	; 255
    1ab0:	4f e7       	ldi	r20, 0x7F	; 127
    1ab2:	57 e4       	ldi	r21, 0x47	; 71
    1ab4:	0e 94 0f 15 	call	0x2a1e	; 0x2a1e <__gtsf2>
    1ab8:	18 16       	cp	r1, r24
    1aba:	4c f5       	brge	.+82     	; 0x1b0e <left_back+0xd4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1abc:	6d a9       	ldd	r22, Y+53	; 0x35
    1abe:	7e a9       	ldd	r23, Y+54	; 0x36
    1ac0:	8f a9       	ldd	r24, Y+55	; 0x37
    1ac2:	98 ad       	ldd	r25, Y+56	; 0x38
    1ac4:	20 e0       	ldi	r18, 0x00	; 0
    1ac6:	30 e0       	ldi	r19, 0x00	; 0
    1ac8:	40 e2       	ldi	r20, 0x20	; 32
    1aca:	51 e4       	ldi	r21, 0x41	; 65
    1acc:	0e 94 69 13 	call	0x26d2	; 0x26d2 <__mulsf3>
    1ad0:	dc 01       	movw	r26, r24
    1ad2:	cb 01       	movw	r24, r22
    1ad4:	bc 01       	movw	r22, r24
    1ad6:	cd 01       	movw	r24, r26
    1ad8:	0e 94 93 11 	call	0x2326	; 0x2326 <__fixunssfsi>
    1adc:	dc 01       	movw	r26, r24
    1ade:	cb 01       	movw	r24, r22
    1ae0:	98 ab       	std	Y+48, r25	; 0x30
    1ae2:	8f a7       	std	Y+47, r24	; 0x2f
    1ae4:	0f c0       	rjmp	.+30     	; 0x1b04 <left_back+0xca>
    1ae6:	80 e7       	ldi	r24, 0x70	; 112
    1ae8:	91 e0       	ldi	r25, 0x01	; 1
    1aea:	9e a7       	std	Y+46, r25	; 0x2e
    1aec:	8d a7       	std	Y+45, r24	; 0x2d
    1aee:	8d a5       	ldd	r24, Y+45	; 0x2d
    1af0:	9e a5       	ldd	r25, Y+46	; 0x2e
    1af2:	01 97       	sbiw	r24, 0x01	; 1
    1af4:	f1 f7       	brne	.-4      	; 0x1af2 <left_back+0xb8>
    1af6:	9e a7       	std	Y+46, r25	; 0x2e
    1af8:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1afa:	8f a5       	ldd	r24, Y+47	; 0x2f
    1afc:	98 a9       	ldd	r25, Y+48	; 0x30
    1afe:	01 97       	sbiw	r24, 0x01	; 1
    1b00:	98 ab       	std	Y+48, r25	; 0x30
    1b02:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1b04:	8f a5       	ldd	r24, Y+47	; 0x2f
    1b06:	98 a9       	ldd	r25, Y+48	; 0x30
    1b08:	00 97       	sbiw	r24, 0x00	; 0
    1b0a:	69 f7       	brne	.-38     	; 0x1ae6 <left_back+0xac>
    1b0c:	14 c0       	rjmp	.+40     	; 0x1b36 <left_back+0xfc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1b0e:	69 a9       	ldd	r22, Y+49	; 0x31
    1b10:	7a a9       	ldd	r23, Y+50	; 0x32
    1b12:	8b a9       	ldd	r24, Y+51	; 0x33
    1b14:	9c a9       	ldd	r25, Y+52	; 0x34
    1b16:	0e 94 93 11 	call	0x2326	; 0x2326 <__fixunssfsi>
    1b1a:	dc 01       	movw	r26, r24
    1b1c:	cb 01       	movw	r24, r22
    1b1e:	98 ab       	std	Y+48, r25	; 0x30
    1b20:	8f a7       	std	Y+47, r24	; 0x2f
    1b22:	8f a5       	ldd	r24, Y+47	; 0x2f
    1b24:	98 a9       	ldd	r25, Y+48	; 0x30
    1b26:	9c a7       	std	Y+44, r25	; 0x2c
    1b28:	8b a7       	std	Y+43, r24	; 0x2b
    1b2a:	8b a5       	ldd	r24, Y+43	; 0x2b
    1b2c:	9c a5       	ldd	r25, Y+44	; 0x2c
    1b2e:	01 97       	sbiw	r24, 0x01	; 1
    1b30:	f1 f7       	brne	.-4      	; 0x1b2e <left_back+0xf4>
    1b32:	9c a7       	std	Y+44, r25	; 0x2c
    1b34:	8b a7       	std	Y+43, r24	; 0x2b
 _delay_ms(step_time);

 left_leg_back();
    1b36:	0e 94 65 02 	call	0x4ca	; 0x4ca <left_leg_back>
    1b3a:	80 e0       	ldi	r24, 0x00	; 0
    1b3c:	90 e0       	ldi	r25, 0x00	; 0
    1b3e:	aa e7       	ldi	r26, 0x7A	; 122
    1b40:	b3 e4       	ldi	r27, 0x43	; 67
    1b42:	8f a3       	std	Y+39, r24	; 0x27
    1b44:	98 a7       	std	Y+40, r25	; 0x28
    1b46:	a9 a7       	std	Y+41, r26	; 0x29
    1b48:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1b4a:	6f a1       	ldd	r22, Y+39	; 0x27
    1b4c:	78 a5       	ldd	r23, Y+40	; 0x28
    1b4e:	89 a5       	ldd	r24, Y+41	; 0x29
    1b50:	9a a5       	ldd	r25, Y+42	; 0x2a
    1b52:	26 e6       	ldi	r18, 0x66	; 102
    1b54:	36 e6       	ldi	r19, 0x66	; 102
    1b56:	46 e6       	ldi	r20, 0x66	; 102
    1b58:	55 e4       	ldi	r21, 0x45	; 69
    1b5a:	0e 94 69 13 	call	0x26d2	; 0x26d2 <__mulsf3>
    1b5e:	dc 01       	movw	r26, r24
    1b60:	cb 01       	movw	r24, r22
    1b62:	8b a3       	std	Y+35, r24	; 0x23
    1b64:	9c a3       	std	Y+36, r25	; 0x24
    1b66:	ad a3       	std	Y+37, r26	; 0x25
    1b68:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    1b6a:	6b a1       	ldd	r22, Y+35	; 0x23
    1b6c:	7c a1       	ldd	r23, Y+36	; 0x24
    1b6e:	8d a1       	ldd	r24, Y+37	; 0x25
    1b70:	9e a1       	ldd	r25, Y+38	; 0x26
    1b72:	20 e0       	ldi	r18, 0x00	; 0
    1b74:	30 e0       	ldi	r19, 0x00	; 0
    1b76:	40 e8       	ldi	r20, 0x80	; 128
    1b78:	5f e3       	ldi	r21, 0x3F	; 63
    1b7a:	0e 94 6f 15 	call	0x2ade	; 0x2ade <__ltsf2>
    1b7e:	88 23       	and	r24, r24
    1b80:	2c f4       	brge	.+10     	; 0x1b8c <left_back+0x152>
		__ticks = 1;
    1b82:	81 e0       	ldi	r24, 0x01	; 1
    1b84:	90 e0       	ldi	r25, 0x00	; 0
    1b86:	9a a3       	std	Y+34, r25	; 0x22
    1b88:	89 a3       	std	Y+33, r24	; 0x21
    1b8a:	3f c0       	rjmp	.+126    	; 0x1c0a <left_back+0x1d0>
	else if (__tmp > 65535)
    1b8c:	6b a1       	ldd	r22, Y+35	; 0x23
    1b8e:	7c a1       	ldd	r23, Y+36	; 0x24
    1b90:	8d a1       	ldd	r24, Y+37	; 0x25
    1b92:	9e a1       	ldd	r25, Y+38	; 0x26
    1b94:	20 e0       	ldi	r18, 0x00	; 0
    1b96:	3f ef       	ldi	r19, 0xFF	; 255
    1b98:	4f e7       	ldi	r20, 0x7F	; 127
    1b9a:	57 e4       	ldi	r21, 0x47	; 71
    1b9c:	0e 94 0f 15 	call	0x2a1e	; 0x2a1e <__gtsf2>
    1ba0:	18 16       	cp	r1, r24
    1ba2:	4c f5       	brge	.+82     	; 0x1bf6 <left_back+0x1bc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1ba4:	6f a1       	ldd	r22, Y+39	; 0x27
    1ba6:	78 a5       	ldd	r23, Y+40	; 0x28
    1ba8:	89 a5       	ldd	r24, Y+41	; 0x29
    1baa:	9a a5       	ldd	r25, Y+42	; 0x2a
    1bac:	20 e0       	ldi	r18, 0x00	; 0
    1bae:	30 e0       	ldi	r19, 0x00	; 0
    1bb0:	40 e2       	ldi	r20, 0x20	; 32
    1bb2:	51 e4       	ldi	r21, 0x41	; 65
    1bb4:	0e 94 69 13 	call	0x26d2	; 0x26d2 <__mulsf3>
    1bb8:	dc 01       	movw	r26, r24
    1bba:	cb 01       	movw	r24, r22
    1bbc:	bc 01       	movw	r22, r24
    1bbe:	cd 01       	movw	r24, r26
    1bc0:	0e 94 93 11 	call	0x2326	; 0x2326 <__fixunssfsi>
    1bc4:	dc 01       	movw	r26, r24
    1bc6:	cb 01       	movw	r24, r22
    1bc8:	9a a3       	std	Y+34, r25	; 0x22
    1bca:	89 a3       	std	Y+33, r24	; 0x21
    1bcc:	0f c0       	rjmp	.+30     	; 0x1bec <left_back+0x1b2>
    1bce:	80 e7       	ldi	r24, 0x70	; 112
    1bd0:	91 e0       	ldi	r25, 0x01	; 1
    1bd2:	98 a3       	std	Y+32, r25	; 0x20
    1bd4:	8f 8f       	std	Y+31, r24	; 0x1f
    1bd6:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1bd8:	98 a1       	ldd	r25, Y+32	; 0x20
    1bda:	01 97       	sbiw	r24, 0x01	; 1
    1bdc:	f1 f7       	brne	.-4      	; 0x1bda <left_back+0x1a0>
    1bde:	98 a3       	std	Y+32, r25	; 0x20
    1be0:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1be2:	89 a1       	ldd	r24, Y+33	; 0x21
    1be4:	9a a1       	ldd	r25, Y+34	; 0x22
    1be6:	01 97       	sbiw	r24, 0x01	; 1
    1be8:	9a a3       	std	Y+34, r25	; 0x22
    1bea:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1bec:	89 a1       	ldd	r24, Y+33	; 0x21
    1bee:	9a a1       	ldd	r25, Y+34	; 0x22
    1bf0:	00 97       	sbiw	r24, 0x00	; 0
    1bf2:	69 f7       	brne	.-38     	; 0x1bce <left_back+0x194>
    1bf4:	14 c0       	rjmp	.+40     	; 0x1c1e <left_back+0x1e4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1bf6:	6b a1       	ldd	r22, Y+35	; 0x23
    1bf8:	7c a1       	ldd	r23, Y+36	; 0x24
    1bfa:	8d a1       	ldd	r24, Y+37	; 0x25
    1bfc:	9e a1       	ldd	r25, Y+38	; 0x26
    1bfe:	0e 94 93 11 	call	0x2326	; 0x2326 <__fixunssfsi>
    1c02:	dc 01       	movw	r26, r24
    1c04:	cb 01       	movw	r24, r22
    1c06:	9a a3       	std	Y+34, r25	; 0x22
    1c08:	89 a3       	std	Y+33, r24	; 0x21
    1c0a:	89 a1       	ldd	r24, Y+33	; 0x21
    1c0c:	9a a1       	ldd	r25, Y+34	; 0x22
    1c0e:	9e 8f       	std	Y+30, r25	; 0x1e
    1c10:	8d 8f       	std	Y+29, r24	; 0x1d
    1c12:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1c14:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1c16:	01 97       	sbiw	r24, 0x01	; 1
    1c18:	f1 f7       	brne	.-4      	; 0x1c16 <left_back+0x1dc>
    1c1a:	9e 8f       	std	Y+30, r25	; 0x1e
    1c1c:	8d 8f       	std	Y+29, r24	; 0x1d
 _delay_ms(step_time);

 mid_leg_right_down();
    1c1e:	0e 94 a1 02 	call	0x542	; 0x542 <mid_leg_right_down>
    1c22:	80 e0       	ldi	r24, 0x00	; 0
    1c24:	90 e0       	ldi	r25, 0x00	; 0
    1c26:	aa e7       	ldi	r26, 0x7A	; 122
    1c28:	b3 e4       	ldi	r27, 0x43	; 67
    1c2a:	89 8f       	std	Y+25, r24	; 0x19
    1c2c:	9a 8f       	std	Y+26, r25	; 0x1a
    1c2e:	ab 8f       	std	Y+27, r26	; 0x1b
    1c30:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1c32:	69 8d       	ldd	r22, Y+25	; 0x19
    1c34:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1c36:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1c38:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1c3a:	26 e6       	ldi	r18, 0x66	; 102
    1c3c:	36 e6       	ldi	r19, 0x66	; 102
    1c3e:	46 e6       	ldi	r20, 0x66	; 102
    1c40:	55 e4       	ldi	r21, 0x45	; 69
    1c42:	0e 94 69 13 	call	0x26d2	; 0x26d2 <__mulsf3>
    1c46:	dc 01       	movw	r26, r24
    1c48:	cb 01       	movw	r24, r22
    1c4a:	8d 8b       	std	Y+21, r24	; 0x15
    1c4c:	9e 8b       	std	Y+22, r25	; 0x16
    1c4e:	af 8b       	std	Y+23, r26	; 0x17
    1c50:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1c52:	6d 89       	ldd	r22, Y+21	; 0x15
    1c54:	7e 89       	ldd	r23, Y+22	; 0x16
    1c56:	8f 89       	ldd	r24, Y+23	; 0x17
    1c58:	98 8d       	ldd	r25, Y+24	; 0x18
    1c5a:	20 e0       	ldi	r18, 0x00	; 0
    1c5c:	30 e0       	ldi	r19, 0x00	; 0
    1c5e:	40 e8       	ldi	r20, 0x80	; 128
    1c60:	5f e3       	ldi	r21, 0x3F	; 63
    1c62:	0e 94 6f 15 	call	0x2ade	; 0x2ade <__ltsf2>
    1c66:	88 23       	and	r24, r24
    1c68:	2c f4       	brge	.+10     	; 0x1c74 <left_back+0x23a>
		__ticks = 1;
    1c6a:	81 e0       	ldi	r24, 0x01	; 1
    1c6c:	90 e0       	ldi	r25, 0x00	; 0
    1c6e:	9c 8b       	std	Y+20, r25	; 0x14
    1c70:	8b 8b       	std	Y+19, r24	; 0x13
    1c72:	3f c0       	rjmp	.+126    	; 0x1cf2 <left_back+0x2b8>
	else if (__tmp > 65535)
    1c74:	6d 89       	ldd	r22, Y+21	; 0x15
    1c76:	7e 89       	ldd	r23, Y+22	; 0x16
    1c78:	8f 89       	ldd	r24, Y+23	; 0x17
    1c7a:	98 8d       	ldd	r25, Y+24	; 0x18
    1c7c:	20 e0       	ldi	r18, 0x00	; 0
    1c7e:	3f ef       	ldi	r19, 0xFF	; 255
    1c80:	4f e7       	ldi	r20, 0x7F	; 127
    1c82:	57 e4       	ldi	r21, 0x47	; 71
    1c84:	0e 94 0f 15 	call	0x2a1e	; 0x2a1e <__gtsf2>
    1c88:	18 16       	cp	r1, r24
    1c8a:	4c f5       	brge	.+82     	; 0x1cde <left_back+0x2a4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1c8c:	69 8d       	ldd	r22, Y+25	; 0x19
    1c8e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1c90:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1c92:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1c94:	20 e0       	ldi	r18, 0x00	; 0
    1c96:	30 e0       	ldi	r19, 0x00	; 0
    1c98:	40 e2       	ldi	r20, 0x20	; 32
    1c9a:	51 e4       	ldi	r21, 0x41	; 65
    1c9c:	0e 94 69 13 	call	0x26d2	; 0x26d2 <__mulsf3>
    1ca0:	dc 01       	movw	r26, r24
    1ca2:	cb 01       	movw	r24, r22
    1ca4:	bc 01       	movw	r22, r24
    1ca6:	cd 01       	movw	r24, r26
    1ca8:	0e 94 93 11 	call	0x2326	; 0x2326 <__fixunssfsi>
    1cac:	dc 01       	movw	r26, r24
    1cae:	cb 01       	movw	r24, r22
    1cb0:	9c 8b       	std	Y+20, r25	; 0x14
    1cb2:	8b 8b       	std	Y+19, r24	; 0x13
    1cb4:	0f c0       	rjmp	.+30     	; 0x1cd4 <left_back+0x29a>
    1cb6:	80 e7       	ldi	r24, 0x70	; 112
    1cb8:	91 e0       	ldi	r25, 0x01	; 1
    1cba:	9a 8b       	std	Y+18, r25	; 0x12
    1cbc:	89 8b       	std	Y+17, r24	; 0x11
    1cbe:	89 89       	ldd	r24, Y+17	; 0x11
    1cc0:	9a 89       	ldd	r25, Y+18	; 0x12
    1cc2:	01 97       	sbiw	r24, 0x01	; 1
    1cc4:	f1 f7       	brne	.-4      	; 0x1cc2 <left_back+0x288>
    1cc6:	9a 8b       	std	Y+18, r25	; 0x12
    1cc8:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1cca:	8b 89       	ldd	r24, Y+19	; 0x13
    1ccc:	9c 89       	ldd	r25, Y+20	; 0x14
    1cce:	01 97       	sbiw	r24, 0x01	; 1
    1cd0:	9c 8b       	std	Y+20, r25	; 0x14
    1cd2:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1cd4:	8b 89       	ldd	r24, Y+19	; 0x13
    1cd6:	9c 89       	ldd	r25, Y+20	; 0x14
    1cd8:	00 97       	sbiw	r24, 0x00	; 0
    1cda:	69 f7       	brne	.-38     	; 0x1cb6 <left_back+0x27c>
    1cdc:	14 c0       	rjmp	.+40     	; 0x1d06 <left_back+0x2cc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1cde:	6d 89       	ldd	r22, Y+21	; 0x15
    1ce0:	7e 89       	ldd	r23, Y+22	; 0x16
    1ce2:	8f 89       	ldd	r24, Y+23	; 0x17
    1ce4:	98 8d       	ldd	r25, Y+24	; 0x18
    1ce6:	0e 94 93 11 	call	0x2326	; 0x2326 <__fixunssfsi>
    1cea:	dc 01       	movw	r26, r24
    1cec:	cb 01       	movw	r24, r22
    1cee:	9c 8b       	std	Y+20, r25	; 0x14
    1cf0:	8b 8b       	std	Y+19, r24	; 0x13
    1cf2:	8b 89       	ldd	r24, Y+19	; 0x13
    1cf4:	9c 89       	ldd	r25, Y+20	; 0x14
    1cf6:	98 8b       	std	Y+16, r25	; 0x10
    1cf8:	8f 87       	std	Y+15, r24	; 0x0f
    1cfa:	8f 85       	ldd	r24, Y+15	; 0x0f
    1cfc:	98 89       	ldd	r25, Y+16	; 0x10
    1cfe:	01 97       	sbiw	r24, 0x01	; 1
    1d00:	f1 f7       	brne	.-4      	; 0x1cfe <left_back+0x2c4>
    1d02:	98 8b       	std	Y+16, r25	; 0x10
    1d04:	8f 87       	std	Y+15, r24	; 0x0f
 _delay_ms(step_time);

 left_leg_forward();
    1d06:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <left_leg_forward>
    1d0a:	80 e0       	ldi	r24, 0x00	; 0
    1d0c:	90 e0       	ldi	r25, 0x00	; 0
    1d0e:	aa e7       	ldi	r26, 0x7A	; 122
    1d10:	b3 e4       	ldi	r27, 0x43	; 67
    1d12:	8b 87       	std	Y+11, r24	; 0x0b
    1d14:	9c 87       	std	Y+12, r25	; 0x0c
    1d16:	ad 87       	std	Y+13, r26	; 0x0d
    1d18:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1d1a:	6b 85       	ldd	r22, Y+11	; 0x0b
    1d1c:	7c 85       	ldd	r23, Y+12	; 0x0c
    1d1e:	8d 85       	ldd	r24, Y+13	; 0x0d
    1d20:	9e 85       	ldd	r25, Y+14	; 0x0e
    1d22:	26 e6       	ldi	r18, 0x66	; 102
    1d24:	36 e6       	ldi	r19, 0x66	; 102
    1d26:	46 e6       	ldi	r20, 0x66	; 102
    1d28:	55 e4       	ldi	r21, 0x45	; 69
    1d2a:	0e 94 69 13 	call	0x26d2	; 0x26d2 <__mulsf3>
    1d2e:	dc 01       	movw	r26, r24
    1d30:	cb 01       	movw	r24, r22
    1d32:	8f 83       	std	Y+7, r24	; 0x07
    1d34:	98 87       	std	Y+8, r25	; 0x08
    1d36:	a9 87       	std	Y+9, r26	; 0x09
    1d38:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1d3a:	6f 81       	ldd	r22, Y+7	; 0x07
    1d3c:	78 85       	ldd	r23, Y+8	; 0x08
    1d3e:	89 85       	ldd	r24, Y+9	; 0x09
    1d40:	9a 85       	ldd	r25, Y+10	; 0x0a
    1d42:	20 e0       	ldi	r18, 0x00	; 0
    1d44:	30 e0       	ldi	r19, 0x00	; 0
    1d46:	40 e8       	ldi	r20, 0x80	; 128
    1d48:	5f e3       	ldi	r21, 0x3F	; 63
    1d4a:	0e 94 6f 15 	call	0x2ade	; 0x2ade <__ltsf2>
    1d4e:	88 23       	and	r24, r24
    1d50:	2c f4       	brge	.+10     	; 0x1d5c <left_back+0x322>
		__ticks = 1;
    1d52:	81 e0       	ldi	r24, 0x01	; 1
    1d54:	90 e0       	ldi	r25, 0x00	; 0
    1d56:	9e 83       	std	Y+6, r25	; 0x06
    1d58:	8d 83       	std	Y+5, r24	; 0x05
    1d5a:	3f c0       	rjmp	.+126    	; 0x1dda <left_back+0x3a0>
	else if (__tmp > 65535)
    1d5c:	6f 81       	ldd	r22, Y+7	; 0x07
    1d5e:	78 85       	ldd	r23, Y+8	; 0x08
    1d60:	89 85       	ldd	r24, Y+9	; 0x09
    1d62:	9a 85       	ldd	r25, Y+10	; 0x0a
    1d64:	20 e0       	ldi	r18, 0x00	; 0
    1d66:	3f ef       	ldi	r19, 0xFF	; 255
    1d68:	4f e7       	ldi	r20, 0x7F	; 127
    1d6a:	57 e4       	ldi	r21, 0x47	; 71
    1d6c:	0e 94 0f 15 	call	0x2a1e	; 0x2a1e <__gtsf2>
    1d70:	18 16       	cp	r1, r24
    1d72:	4c f5       	brge	.+82     	; 0x1dc6 <left_back+0x38c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1d74:	6b 85       	ldd	r22, Y+11	; 0x0b
    1d76:	7c 85       	ldd	r23, Y+12	; 0x0c
    1d78:	8d 85       	ldd	r24, Y+13	; 0x0d
    1d7a:	9e 85       	ldd	r25, Y+14	; 0x0e
    1d7c:	20 e0       	ldi	r18, 0x00	; 0
    1d7e:	30 e0       	ldi	r19, 0x00	; 0
    1d80:	40 e2       	ldi	r20, 0x20	; 32
    1d82:	51 e4       	ldi	r21, 0x41	; 65
    1d84:	0e 94 69 13 	call	0x26d2	; 0x26d2 <__mulsf3>
    1d88:	dc 01       	movw	r26, r24
    1d8a:	cb 01       	movw	r24, r22
    1d8c:	bc 01       	movw	r22, r24
    1d8e:	cd 01       	movw	r24, r26
    1d90:	0e 94 93 11 	call	0x2326	; 0x2326 <__fixunssfsi>
    1d94:	dc 01       	movw	r26, r24
    1d96:	cb 01       	movw	r24, r22
    1d98:	9e 83       	std	Y+6, r25	; 0x06
    1d9a:	8d 83       	std	Y+5, r24	; 0x05
    1d9c:	0f c0       	rjmp	.+30     	; 0x1dbc <left_back+0x382>
    1d9e:	80 e7       	ldi	r24, 0x70	; 112
    1da0:	91 e0       	ldi	r25, 0x01	; 1
    1da2:	9c 83       	std	Y+4, r25	; 0x04
    1da4:	8b 83       	std	Y+3, r24	; 0x03
    1da6:	8b 81       	ldd	r24, Y+3	; 0x03
    1da8:	9c 81       	ldd	r25, Y+4	; 0x04
    1daa:	01 97       	sbiw	r24, 0x01	; 1
    1dac:	f1 f7       	brne	.-4      	; 0x1daa <left_back+0x370>
    1dae:	9c 83       	std	Y+4, r25	; 0x04
    1db0:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1db2:	8d 81       	ldd	r24, Y+5	; 0x05
    1db4:	9e 81       	ldd	r25, Y+6	; 0x06
    1db6:	01 97       	sbiw	r24, 0x01	; 1
    1db8:	9e 83       	std	Y+6, r25	; 0x06
    1dba:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1dbc:	8d 81       	ldd	r24, Y+5	; 0x05
    1dbe:	9e 81       	ldd	r25, Y+6	; 0x06
    1dc0:	00 97       	sbiw	r24, 0x00	; 0
    1dc2:	69 f7       	brne	.-38     	; 0x1d9e <left_back+0x364>
    1dc4:	14 c0       	rjmp	.+40     	; 0x1dee <left_back+0x3b4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1dc6:	6f 81       	ldd	r22, Y+7	; 0x07
    1dc8:	78 85       	ldd	r23, Y+8	; 0x08
    1dca:	89 85       	ldd	r24, Y+9	; 0x09
    1dcc:	9a 85       	ldd	r25, Y+10	; 0x0a
    1dce:	0e 94 93 11 	call	0x2326	; 0x2326 <__fixunssfsi>
    1dd2:	dc 01       	movw	r26, r24
    1dd4:	cb 01       	movw	r24, r22
    1dd6:	9e 83       	std	Y+6, r25	; 0x06
    1dd8:	8d 83       	std	Y+5, r24	; 0x05
    1dda:	8d 81       	ldd	r24, Y+5	; 0x05
    1ddc:	9e 81       	ldd	r25, Y+6	; 0x06
    1dde:	9a 83       	std	Y+2, r25	; 0x02
    1de0:	89 83       	std	Y+1, r24	; 0x01
    1de2:	89 81       	ldd	r24, Y+1	; 0x01
    1de4:	9a 81       	ldd	r25, Y+2	; 0x02
    1de6:	01 97       	sbiw	r24, 0x01	; 1
    1de8:	f1 f7       	brne	.-4      	; 0x1de6 <left_back+0x3ac>
    1dea:	9a 83       	std	Y+2, r25	; 0x02
    1dec:	89 83       	std	Y+1, r24	; 0x01
 _delay_ms(step_time);
}
    1dee:	e8 96       	adiw	r28, 0x38	; 56
    1df0:	0f b6       	in	r0, 0x3f	; 63
    1df2:	f8 94       	cli
    1df4:	de bf       	out	0x3e, r29	; 62
    1df6:	0f be       	out	0x3f, r0	; 63
    1df8:	cd bf       	out	0x3d, r28	; 61
    1dfa:	cf 91       	pop	r28
    1dfc:	df 91       	pop	r29
    1dfe:	08 95       	ret

00001e00 <right_back>:

void right_back (void) //turn right by moving right pair of legs in the backward direction
{
    1e00:	df 93       	push	r29
    1e02:	cf 93       	push	r28
    1e04:	cd b7       	in	r28, 0x3d	; 61
    1e06:	de b7       	in	r29, 0x3e	; 62
    1e08:	e8 97       	sbiw	r28, 0x38	; 56
    1e0a:	0f b6       	in	r0, 0x3f	; 63
    1e0c:	f8 94       	cli
    1e0e:	de bf       	out	0x3e, r29	; 62
    1e10:	0f be       	out	0x3f, r0	; 63
    1e12:	cd bf       	out	0x3d, r28	; 61
 mid_leg_right_down();
    1e14:	0e 94 a1 02 	call	0x542	; 0x542 <mid_leg_right_down>
    1e18:	80 e0       	ldi	r24, 0x00	; 0
    1e1a:	90 e0       	ldi	r25, 0x00	; 0
    1e1c:	aa e7       	ldi	r26, 0x7A	; 122
    1e1e:	b3 e4       	ldi	r27, 0x43	; 67
    1e20:	8d ab       	std	Y+53, r24	; 0x35
    1e22:	9e ab       	std	Y+54, r25	; 0x36
    1e24:	af ab       	std	Y+55, r26	; 0x37
    1e26:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1e28:	6d a9       	ldd	r22, Y+53	; 0x35
    1e2a:	7e a9       	ldd	r23, Y+54	; 0x36
    1e2c:	8f a9       	ldd	r24, Y+55	; 0x37
    1e2e:	98 ad       	ldd	r25, Y+56	; 0x38
    1e30:	26 e6       	ldi	r18, 0x66	; 102
    1e32:	36 e6       	ldi	r19, 0x66	; 102
    1e34:	46 e6       	ldi	r20, 0x66	; 102
    1e36:	55 e4       	ldi	r21, 0x45	; 69
    1e38:	0e 94 69 13 	call	0x26d2	; 0x26d2 <__mulsf3>
    1e3c:	dc 01       	movw	r26, r24
    1e3e:	cb 01       	movw	r24, r22
    1e40:	89 ab       	std	Y+49, r24	; 0x31
    1e42:	9a ab       	std	Y+50, r25	; 0x32
    1e44:	ab ab       	std	Y+51, r26	; 0x33
    1e46:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    1e48:	69 a9       	ldd	r22, Y+49	; 0x31
    1e4a:	7a a9       	ldd	r23, Y+50	; 0x32
    1e4c:	8b a9       	ldd	r24, Y+51	; 0x33
    1e4e:	9c a9       	ldd	r25, Y+52	; 0x34
    1e50:	20 e0       	ldi	r18, 0x00	; 0
    1e52:	30 e0       	ldi	r19, 0x00	; 0
    1e54:	40 e8       	ldi	r20, 0x80	; 128
    1e56:	5f e3       	ldi	r21, 0x3F	; 63
    1e58:	0e 94 6f 15 	call	0x2ade	; 0x2ade <__ltsf2>
    1e5c:	88 23       	and	r24, r24
    1e5e:	2c f4       	brge	.+10     	; 0x1e6a <right_back+0x6a>
		__ticks = 1;
    1e60:	81 e0       	ldi	r24, 0x01	; 1
    1e62:	90 e0       	ldi	r25, 0x00	; 0
    1e64:	98 ab       	std	Y+48, r25	; 0x30
    1e66:	8f a7       	std	Y+47, r24	; 0x2f
    1e68:	3f c0       	rjmp	.+126    	; 0x1ee8 <right_back+0xe8>
	else if (__tmp > 65535)
    1e6a:	69 a9       	ldd	r22, Y+49	; 0x31
    1e6c:	7a a9       	ldd	r23, Y+50	; 0x32
    1e6e:	8b a9       	ldd	r24, Y+51	; 0x33
    1e70:	9c a9       	ldd	r25, Y+52	; 0x34
    1e72:	20 e0       	ldi	r18, 0x00	; 0
    1e74:	3f ef       	ldi	r19, 0xFF	; 255
    1e76:	4f e7       	ldi	r20, 0x7F	; 127
    1e78:	57 e4       	ldi	r21, 0x47	; 71
    1e7a:	0e 94 0f 15 	call	0x2a1e	; 0x2a1e <__gtsf2>
    1e7e:	18 16       	cp	r1, r24
    1e80:	4c f5       	brge	.+82     	; 0x1ed4 <right_back+0xd4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1e82:	6d a9       	ldd	r22, Y+53	; 0x35
    1e84:	7e a9       	ldd	r23, Y+54	; 0x36
    1e86:	8f a9       	ldd	r24, Y+55	; 0x37
    1e88:	98 ad       	ldd	r25, Y+56	; 0x38
    1e8a:	20 e0       	ldi	r18, 0x00	; 0
    1e8c:	30 e0       	ldi	r19, 0x00	; 0
    1e8e:	40 e2       	ldi	r20, 0x20	; 32
    1e90:	51 e4       	ldi	r21, 0x41	; 65
    1e92:	0e 94 69 13 	call	0x26d2	; 0x26d2 <__mulsf3>
    1e96:	dc 01       	movw	r26, r24
    1e98:	cb 01       	movw	r24, r22
    1e9a:	bc 01       	movw	r22, r24
    1e9c:	cd 01       	movw	r24, r26
    1e9e:	0e 94 93 11 	call	0x2326	; 0x2326 <__fixunssfsi>
    1ea2:	dc 01       	movw	r26, r24
    1ea4:	cb 01       	movw	r24, r22
    1ea6:	98 ab       	std	Y+48, r25	; 0x30
    1ea8:	8f a7       	std	Y+47, r24	; 0x2f
    1eaa:	0f c0       	rjmp	.+30     	; 0x1eca <right_back+0xca>
    1eac:	80 e7       	ldi	r24, 0x70	; 112
    1eae:	91 e0       	ldi	r25, 0x01	; 1
    1eb0:	9e a7       	std	Y+46, r25	; 0x2e
    1eb2:	8d a7       	std	Y+45, r24	; 0x2d
    1eb4:	8d a5       	ldd	r24, Y+45	; 0x2d
    1eb6:	9e a5       	ldd	r25, Y+46	; 0x2e
    1eb8:	01 97       	sbiw	r24, 0x01	; 1
    1eba:	f1 f7       	brne	.-4      	; 0x1eb8 <right_back+0xb8>
    1ebc:	9e a7       	std	Y+46, r25	; 0x2e
    1ebe:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1ec0:	8f a5       	ldd	r24, Y+47	; 0x2f
    1ec2:	98 a9       	ldd	r25, Y+48	; 0x30
    1ec4:	01 97       	sbiw	r24, 0x01	; 1
    1ec6:	98 ab       	std	Y+48, r25	; 0x30
    1ec8:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1eca:	8f a5       	ldd	r24, Y+47	; 0x2f
    1ecc:	98 a9       	ldd	r25, Y+48	; 0x30
    1ece:	00 97       	sbiw	r24, 0x00	; 0
    1ed0:	69 f7       	brne	.-38     	; 0x1eac <right_back+0xac>
    1ed2:	14 c0       	rjmp	.+40     	; 0x1efc <right_back+0xfc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1ed4:	69 a9       	ldd	r22, Y+49	; 0x31
    1ed6:	7a a9       	ldd	r23, Y+50	; 0x32
    1ed8:	8b a9       	ldd	r24, Y+51	; 0x33
    1eda:	9c a9       	ldd	r25, Y+52	; 0x34
    1edc:	0e 94 93 11 	call	0x2326	; 0x2326 <__fixunssfsi>
    1ee0:	dc 01       	movw	r26, r24
    1ee2:	cb 01       	movw	r24, r22
    1ee4:	98 ab       	std	Y+48, r25	; 0x30
    1ee6:	8f a7       	std	Y+47, r24	; 0x2f
    1ee8:	8f a5       	ldd	r24, Y+47	; 0x2f
    1eea:	98 a9       	ldd	r25, Y+48	; 0x30
    1eec:	9c a7       	std	Y+44, r25	; 0x2c
    1eee:	8b a7       	std	Y+43, r24	; 0x2b
    1ef0:	8b a5       	ldd	r24, Y+43	; 0x2b
    1ef2:	9c a5       	ldd	r25, Y+44	; 0x2c
    1ef4:	01 97       	sbiw	r24, 0x01	; 1
    1ef6:	f1 f7       	brne	.-4      	; 0x1ef4 <right_back+0xf4>
    1ef8:	9c a7       	std	Y+44, r25	; 0x2c
    1efa:	8b a7       	std	Y+43, r24	; 0x2b
 _delay_ms(step_time);

 right_leg_back();
    1efc:	0e 94 83 02 	call	0x506	; 0x506 <right_leg_back>
    1f00:	80 e0       	ldi	r24, 0x00	; 0
    1f02:	90 e0       	ldi	r25, 0x00	; 0
    1f04:	aa e7       	ldi	r26, 0x7A	; 122
    1f06:	b3 e4       	ldi	r27, 0x43	; 67
    1f08:	8f a3       	std	Y+39, r24	; 0x27
    1f0a:	98 a7       	std	Y+40, r25	; 0x28
    1f0c:	a9 a7       	std	Y+41, r26	; 0x29
    1f0e:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1f10:	6f a1       	ldd	r22, Y+39	; 0x27
    1f12:	78 a5       	ldd	r23, Y+40	; 0x28
    1f14:	89 a5       	ldd	r24, Y+41	; 0x29
    1f16:	9a a5       	ldd	r25, Y+42	; 0x2a
    1f18:	26 e6       	ldi	r18, 0x66	; 102
    1f1a:	36 e6       	ldi	r19, 0x66	; 102
    1f1c:	46 e6       	ldi	r20, 0x66	; 102
    1f1e:	55 e4       	ldi	r21, 0x45	; 69
    1f20:	0e 94 69 13 	call	0x26d2	; 0x26d2 <__mulsf3>
    1f24:	dc 01       	movw	r26, r24
    1f26:	cb 01       	movw	r24, r22
    1f28:	8b a3       	std	Y+35, r24	; 0x23
    1f2a:	9c a3       	std	Y+36, r25	; 0x24
    1f2c:	ad a3       	std	Y+37, r26	; 0x25
    1f2e:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    1f30:	6b a1       	ldd	r22, Y+35	; 0x23
    1f32:	7c a1       	ldd	r23, Y+36	; 0x24
    1f34:	8d a1       	ldd	r24, Y+37	; 0x25
    1f36:	9e a1       	ldd	r25, Y+38	; 0x26
    1f38:	20 e0       	ldi	r18, 0x00	; 0
    1f3a:	30 e0       	ldi	r19, 0x00	; 0
    1f3c:	40 e8       	ldi	r20, 0x80	; 128
    1f3e:	5f e3       	ldi	r21, 0x3F	; 63
    1f40:	0e 94 6f 15 	call	0x2ade	; 0x2ade <__ltsf2>
    1f44:	88 23       	and	r24, r24
    1f46:	2c f4       	brge	.+10     	; 0x1f52 <right_back+0x152>
		__ticks = 1;
    1f48:	81 e0       	ldi	r24, 0x01	; 1
    1f4a:	90 e0       	ldi	r25, 0x00	; 0
    1f4c:	9a a3       	std	Y+34, r25	; 0x22
    1f4e:	89 a3       	std	Y+33, r24	; 0x21
    1f50:	3f c0       	rjmp	.+126    	; 0x1fd0 <right_back+0x1d0>
	else if (__tmp > 65535)
    1f52:	6b a1       	ldd	r22, Y+35	; 0x23
    1f54:	7c a1       	ldd	r23, Y+36	; 0x24
    1f56:	8d a1       	ldd	r24, Y+37	; 0x25
    1f58:	9e a1       	ldd	r25, Y+38	; 0x26
    1f5a:	20 e0       	ldi	r18, 0x00	; 0
    1f5c:	3f ef       	ldi	r19, 0xFF	; 255
    1f5e:	4f e7       	ldi	r20, 0x7F	; 127
    1f60:	57 e4       	ldi	r21, 0x47	; 71
    1f62:	0e 94 0f 15 	call	0x2a1e	; 0x2a1e <__gtsf2>
    1f66:	18 16       	cp	r1, r24
    1f68:	4c f5       	brge	.+82     	; 0x1fbc <right_back+0x1bc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1f6a:	6f a1       	ldd	r22, Y+39	; 0x27
    1f6c:	78 a5       	ldd	r23, Y+40	; 0x28
    1f6e:	89 a5       	ldd	r24, Y+41	; 0x29
    1f70:	9a a5       	ldd	r25, Y+42	; 0x2a
    1f72:	20 e0       	ldi	r18, 0x00	; 0
    1f74:	30 e0       	ldi	r19, 0x00	; 0
    1f76:	40 e2       	ldi	r20, 0x20	; 32
    1f78:	51 e4       	ldi	r21, 0x41	; 65
    1f7a:	0e 94 69 13 	call	0x26d2	; 0x26d2 <__mulsf3>
    1f7e:	dc 01       	movw	r26, r24
    1f80:	cb 01       	movw	r24, r22
    1f82:	bc 01       	movw	r22, r24
    1f84:	cd 01       	movw	r24, r26
    1f86:	0e 94 93 11 	call	0x2326	; 0x2326 <__fixunssfsi>
    1f8a:	dc 01       	movw	r26, r24
    1f8c:	cb 01       	movw	r24, r22
    1f8e:	9a a3       	std	Y+34, r25	; 0x22
    1f90:	89 a3       	std	Y+33, r24	; 0x21
    1f92:	0f c0       	rjmp	.+30     	; 0x1fb2 <right_back+0x1b2>
    1f94:	80 e7       	ldi	r24, 0x70	; 112
    1f96:	91 e0       	ldi	r25, 0x01	; 1
    1f98:	98 a3       	std	Y+32, r25	; 0x20
    1f9a:	8f 8f       	std	Y+31, r24	; 0x1f
    1f9c:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1f9e:	98 a1       	ldd	r25, Y+32	; 0x20
    1fa0:	01 97       	sbiw	r24, 0x01	; 1
    1fa2:	f1 f7       	brne	.-4      	; 0x1fa0 <right_back+0x1a0>
    1fa4:	98 a3       	std	Y+32, r25	; 0x20
    1fa6:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1fa8:	89 a1       	ldd	r24, Y+33	; 0x21
    1faa:	9a a1       	ldd	r25, Y+34	; 0x22
    1fac:	01 97       	sbiw	r24, 0x01	; 1
    1fae:	9a a3       	std	Y+34, r25	; 0x22
    1fb0:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1fb2:	89 a1       	ldd	r24, Y+33	; 0x21
    1fb4:	9a a1       	ldd	r25, Y+34	; 0x22
    1fb6:	00 97       	sbiw	r24, 0x00	; 0
    1fb8:	69 f7       	brne	.-38     	; 0x1f94 <right_back+0x194>
    1fba:	14 c0       	rjmp	.+40     	; 0x1fe4 <right_back+0x1e4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1fbc:	6b a1       	ldd	r22, Y+35	; 0x23
    1fbe:	7c a1       	ldd	r23, Y+36	; 0x24
    1fc0:	8d a1       	ldd	r24, Y+37	; 0x25
    1fc2:	9e a1       	ldd	r25, Y+38	; 0x26
    1fc4:	0e 94 93 11 	call	0x2326	; 0x2326 <__fixunssfsi>
    1fc8:	dc 01       	movw	r26, r24
    1fca:	cb 01       	movw	r24, r22
    1fcc:	9a a3       	std	Y+34, r25	; 0x22
    1fce:	89 a3       	std	Y+33, r24	; 0x21
    1fd0:	89 a1       	ldd	r24, Y+33	; 0x21
    1fd2:	9a a1       	ldd	r25, Y+34	; 0x22
    1fd4:	9e 8f       	std	Y+30, r25	; 0x1e
    1fd6:	8d 8f       	std	Y+29, r24	; 0x1d
    1fd8:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1fda:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1fdc:	01 97       	sbiw	r24, 0x01	; 1
    1fde:	f1 f7       	brne	.-4      	; 0x1fdc <right_back+0x1dc>
    1fe0:	9e 8f       	std	Y+30, r25	; 0x1e
    1fe2:	8d 8f       	std	Y+29, r24	; 0x1d
 _delay_ms(step_time);

 mid_leg_left_down();
    1fe4:	0e 94 97 02 	call	0x52e	; 0x52e <mid_leg_left_down>
    1fe8:	80 e0       	ldi	r24, 0x00	; 0
    1fea:	90 e0       	ldi	r25, 0x00	; 0
    1fec:	aa e7       	ldi	r26, 0x7A	; 122
    1fee:	b3 e4       	ldi	r27, 0x43	; 67
    1ff0:	89 8f       	std	Y+25, r24	; 0x19
    1ff2:	9a 8f       	std	Y+26, r25	; 0x1a
    1ff4:	ab 8f       	std	Y+27, r26	; 0x1b
    1ff6:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1ff8:	69 8d       	ldd	r22, Y+25	; 0x19
    1ffa:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1ffc:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1ffe:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2000:	26 e6       	ldi	r18, 0x66	; 102
    2002:	36 e6       	ldi	r19, 0x66	; 102
    2004:	46 e6       	ldi	r20, 0x66	; 102
    2006:	55 e4       	ldi	r21, 0x45	; 69
    2008:	0e 94 69 13 	call	0x26d2	; 0x26d2 <__mulsf3>
    200c:	dc 01       	movw	r26, r24
    200e:	cb 01       	movw	r24, r22
    2010:	8d 8b       	std	Y+21, r24	; 0x15
    2012:	9e 8b       	std	Y+22, r25	; 0x16
    2014:	af 8b       	std	Y+23, r26	; 0x17
    2016:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    2018:	6d 89       	ldd	r22, Y+21	; 0x15
    201a:	7e 89       	ldd	r23, Y+22	; 0x16
    201c:	8f 89       	ldd	r24, Y+23	; 0x17
    201e:	98 8d       	ldd	r25, Y+24	; 0x18
    2020:	20 e0       	ldi	r18, 0x00	; 0
    2022:	30 e0       	ldi	r19, 0x00	; 0
    2024:	40 e8       	ldi	r20, 0x80	; 128
    2026:	5f e3       	ldi	r21, 0x3F	; 63
    2028:	0e 94 6f 15 	call	0x2ade	; 0x2ade <__ltsf2>
    202c:	88 23       	and	r24, r24
    202e:	2c f4       	brge	.+10     	; 0x203a <right_back+0x23a>
		__ticks = 1;
    2030:	81 e0       	ldi	r24, 0x01	; 1
    2032:	90 e0       	ldi	r25, 0x00	; 0
    2034:	9c 8b       	std	Y+20, r25	; 0x14
    2036:	8b 8b       	std	Y+19, r24	; 0x13
    2038:	3f c0       	rjmp	.+126    	; 0x20b8 <right_back+0x2b8>
	else if (__tmp > 65535)
    203a:	6d 89       	ldd	r22, Y+21	; 0x15
    203c:	7e 89       	ldd	r23, Y+22	; 0x16
    203e:	8f 89       	ldd	r24, Y+23	; 0x17
    2040:	98 8d       	ldd	r25, Y+24	; 0x18
    2042:	20 e0       	ldi	r18, 0x00	; 0
    2044:	3f ef       	ldi	r19, 0xFF	; 255
    2046:	4f e7       	ldi	r20, 0x7F	; 127
    2048:	57 e4       	ldi	r21, 0x47	; 71
    204a:	0e 94 0f 15 	call	0x2a1e	; 0x2a1e <__gtsf2>
    204e:	18 16       	cp	r1, r24
    2050:	4c f5       	brge	.+82     	; 0x20a4 <right_back+0x2a4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2052:	69 8d       	ldd	r22, Y+25	; 0x19
    2054:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2056:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2058:	9c 8d       	ldd	r25, Y+28	; 0x1c
    205a:	20 e0       	ldi	r18, 0x00	; 0
    205c:	30 e0       	ldi	r19, 0x00	; 0
    205e:	40 e2       	ldi	r20, 0x20	; 32
    2060:	51 e4       	ldi	r21, 0x41	; 65
    2062:	0e 94 69 13 	call	0x26d2	; 0x26d2 <__mulsf3>
    2066:	dc 01       	movw	r26, r24
    2068:	cb 01       	movw	r24, r22
    206a:	bc 01       	movw	r22, r24
    206c:	cd 01       	movw	r24, r26
    206e:	0e 94 93 11 	call	0x2326	; 0x2326 <__fixunssfsi>
    2072:	dc 01       	movw	r26, r24
    2074:	cb 01       	movw	r24, r22
    2076:	9c 8b       	std	Y+20, r25	; 0x14
    2078:	8b 8b       	std	Y+19, r24	; 0x13
    207a:	0f c0       	rjmp	.+30     	; 0x209a <right_back+0x29a>
    207c:	80 e7       	ldi	r24, 0x70	; 112
    207e:	91 e0       	ldi	r25, 0x01	; 1
    2080:	9a 8b       	std	Y+18, r25	; 0x12
    2082:	89 8b       	std	Y+17, r24	; 0x11
    2084:	89 89       	ldd	r24, Y+17	; 0x11
    2086:	9a 89       	ldd	r25, Y+18	; 0x12
    2088:	01 97       	sbiw	r24, 0x01	; 1
    208a:	f1 f7       	brne	.-4      	; 0x2088 <right_back+0x288>
    208c:	9a 8b       	std	Y+18, r25	; 0x12
    208e:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2090:	8b 89       	ldd	r24, Y+19	; 0x13
    2092:	9c 89       	ldd	r25, Y+20	; 0x14
    2094:	01 97       	sbiw	r24, 0x01	; 1
    2096:	9c 8b       	std	Y+20, r25	; 0x14
    2098:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    209a:	8b 89       	ldd	r24, Y+19	; 0x13
    209c:	9c 89       	ldd	r25, Y+20	; 0x14
    209e:	00 97       	sbiw	r24, 0x00	; 0
    20a0:	69 f7       	brne	.-38     	; 0x207c <right_back+0x27c>
    20a2:	14 c0       	rjmp	.+40     	; 0x20cc <right_back+0x2cc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    20a4:	6d 89       	ldd	r22, Y+21	; 0x15
    20a6:	7e 89       	ldd	r23, Y+22	; 0x16
    20a8:	8f 89       	ldd	r24, Y+23	; 0x17
    20aa:	98 8d       	ldd	r25, Y+24	; 0x18
    20ac:	0e 94 93 11 	call	0x2326	; 0x2326 <__fixunssfsi>
    20b0:	dc 01       	movw	r26, r24
    20b2:	cb 01       	movw	r24, r22
    20b4:	9c 8b       	std	Y+20, r25	; 0x14
    20b6:	8b 8b       	std	Y+19, r24	; 0x13
    20b8:	8b 89       	ldd	r24, Y+19	; 0x13
    20ba:	9c 89       	ldd	r25, Y+20	; 0x14
    20bc:	98 8b       	std	Y+16, r25	; 0x10
    20be:	8f 87       	std	Y+15, r24	; 0x0f
    20c0:	8f 85       	ldd	r24, Y+15	; 0x0f
    20c2:	98 89       	ldd	r25, Y+16	; 0x10
    20c4:	01 97       	sbiw	r24, 0x01	; 1
    20c6:	f1 f7       	brne	.-4      	; 0x20c4 <right_back+0x2c4>
    20c8:	98 8b       	std	Y+16, r25	; 0x10
    20ca:	8f 87       	std	Y+15, r24	; 0x0f
 _delay_ms(step_time);

 right_leg_forward();
    20cc:	0e 94 79 02 	call	0x4f2	; 0x4f2 <right_leg_forward>
    20d0:	80 e0       	ldi	r24, 0x00	; 0
    20d2:	90 e0       	ldi	r25, 0x00	; 0
    20d4:	aa e7       	ldi	r26, 0x7A	; 122
    20d6:	b3 e4       	ldi	r27, 0x43	; 67
    20d8:	8b 87       	std	Y+11, r24	; 0x0b
    20da:	9c 87       	std	Y+12, r25	; 0x0c
    20dc:	ad 87       	std	Y+13, r26	; 0x0d
    20de:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    20e0:	6b 85       	ldd	r22, Y+11	; 0x0b
    20e2:	7c 85       	ldd	r23, Y+12	; 0x0c
    20e4:	8d 85       	ldd	r24, Y+13	; 0x0d
    20e6:	9e 85       	ldd	r25, Y+14	; 0x0e
    20e8:	26 e6       	ldi	r18, 0x66	; 102
    20ea:	36 e6       	ldi	r19, 0x66	; 102
    20ec:	46 e6       	ldi	r20, 0x66	; 102
    20ee:	55 e4       	ldi	r21, 0x45	; 69
    20f0:	0e 94 69 13 	call	0x26d2	; 0x26d2 <__mulsf3>
    20f4:	dc 01       	movw	r26, r24
    20f6:	cb 01       	movw	r24, r22
    20f8:	8f 83       	std	Y+7, r24	; 0x07
    20fa:	98 87       	std	Y+8, r25	; 0x08
    20fc:	a9 87       	std	Y+9, r26	; 0x09
    20fe:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2100:	6f 81       	ldd	r22, Y+7	; 0x07
    2102:	78 85       	ldd	r23, Y+8	; 0x08
    2104:	89 85       	ldd	r24, Y+9	; 0x09
    2106:	9a 85       	ldd	r25, Y+10	; 0x0a
    2108:	20 e0       	ldi	r18, 0x00	; 0
    210a:	30 e0       	ldi	r19, 0x00	; 0
    210c:	40 e8       	ldi	r20, 0x80	; 128
    210e:	5f e3       	ldi	r21, 0x3F	; 63
    2110:	0e 94 6f 15 	call	0x2ade	; 0x2ade <__ltsf2>
    2114:	88 23       	and	r24, r24
    2116:	2c f4       	brge	.+10     	; 0x2122 <right_back+0x322>
		__ticks = 1;
    2118:	81 e0       	ldi	r24, 0x01	; 1
    211a:	90 e0       	ldi	r25, 0x00	; 0
    211c:	9e 83       	std	Y+6, r25	; 0x06
    211e:	8d 83       	std	Y+5, r24	; 0x05
    2120:	3f c0       	rjmp	.+126    	; 0x21a0 <right_back+0x3a0>
	else if (__tmp > 65535)
    2122:	6f 81       	ldd	r22, Y+7	; 0x07
    2124:	78 85       	ldd	r23, Y+8	; 0x08
    2126:	89 85       	ldd	r24, Y+9	; 0x09
    2128:	9a 85       	ldd	r25, Y+10	; 0x0a
    212a:	20 e0       	ldi	r18, 0x00	; 0
    212c:	3f ef       	ldi	r19, 0xFF	; 255
    212e:	4f e7       	ldi	r20, 0x7F	; 127
    2130:	57 e4       	ldi	r21, 0x47	; 71
    2132:	0e 94 0f 15 	call	0x2a1e	; 0x2a1e <__gtsf2>
    2136:	18 16       	cp	r1, r24
    2138:	4c f5       	brge	.+82     	; 0x218c <right_back+0x38c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    213a:	6b 85       	ldd	r22, Y+11	; 0x0b
    213c:	7c 85       	ldd	r23, Y+12	; 0x0c
    213e:	8d 85       	ldd	r24, Y+13	; 0x0d
    2140:	9e 85       	ldd	r25, Y+14	; 0x0e
    2142:	20 e0       	ldi	r18, 0x00	; 0
    2144:	30 e0       	ldi	r19, 0x00	; 0
    2146:	40 e2       	ldi	r20, 0x20	; 32
    2148:	51 e4       	ldi	r21, 0x41	; 65
    214a:	0e 94 69 13 	call	0x26d2	; 0x26d2 <__mulsf3>
    214e:	dc 01       	movw	r26, r24
    2150:	cb 01       	movw	r24, r22
    2152:	bc 01       	movw	r22, r24
    2154:	cd 01       	movw	r24, r26
    2156:	0e 94 93 11 	call	0x2326	; 0x2326 <__fixunssfsi>
    215a:	dc 01       	movw	r26, r24
    215c:	cb 01       	movw	r24, r22
    215e:	9e 83       	std	Y+6, r25	; 0x06
    2160:	8d 83       	std	Y+5, r24	; 0x05
    2162:	0f c0       	rjmp	.+30     	; 0x2182 <right_back+0x382>
    2164:	80 e7       	ldi	r24, 0x70	; 112
    2166:	91 e0       	ldi	r25, 0x01	; 1
    2168:	9c 83       	std	Y+4, r25	; 0x04
    216a:	8b 83       	std	Y+3, r24	; 0x03
    216c:	8b 81       	ldd	r24, Y+3	; 0x03
    216e:	9c 81       	ldd	r25, Y+4	; 0x04
    2170:	01 97       	sbiw	r24, 0x01	; 1
    2172:	f1 f7       	brne	.-4      	; 0x2170 <right_back+0x370>
    2174:	9c 83       	std	Y+4, r25	; 0x04
    2176:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2178:	8d 81       	ldd	r24, Y+5	; 0x05
    217a:	9e 81       	ldd	r25, Y+6	; 0x06
    217c:	01 97       	sbiw	r24, 0x01	; 1
    217e:	9e 83       	std	Y+6, r25	; 0x06
    2180:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2182:	8d 81       	ldd	r24, Y+5	; 0x05
    2184:	9e 81       	ldd	r25, Y+6	; 0x06
    2186:	00 97       	sbiw	r24, 0x00	; 0
    2188:	69 f7       	brne	.-38     	; 0x2164 <right_back+0x364>
    218a:	14 c0       	rjmp	.+40     	; 0x21b4 <right_back+0x3b4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    218c:	6f 81       	ldd	r22, Y+7	; 0x07
    218e:	78 85       	ldd	r23, Y+8	; 0x08
    2190:	89 85       	ldd	r24, Y+9	; 0x09
    2192:	9a 85       	ldd	r25, Y+10	; 0x0a
    2194:	0e 94 93 11 	call	0x2326	; 0x2326 <__fixunssfsi>
    2198:	dc 01       	movw	r26, r24
    219a:	cb 01       	movw	r24, r22
    219c:	9e 83       	std	Y+6, r25	; 0x06
    219e:	8d 83       	std	Y+5, r24	; 0x05
    21a0:	8d 81       	ldd	r24, Y+5	; 0x05
    21a2:	9e 81       	ldd	r25, Y+6	; 0x06
    21a4:	9a 83       	std	Y+2, r25	; 0x02
    21a6:	89 83       	std	Y+1, r24	; 0x01
    21a8:	89 81       	ldd	r24, Y+1	; 0x01
    21aa:	9a 81       	ldd	r25, Y+2	; 0x02
    21ac:	01 97       	sbiw	r24, 0x01	; 1
    21ae:	f1 f7       	brne	.-4      	; 0x21ac <right_back+0x3ac>
    21b0:	9a 83       	std	Y+2, r25	; 0x02
    21b2:	89 83       	std	Y+1, r24	; 0x01
 _delay_ms(step_time);
}
    21b4:	e8 96       	adiw	r28, 0x38	; 56
    21b6:	0f b6       	in	r0, 0x3f	; 63
    21b8:	f8 94       	cli
    21ba:	de bf       	out	0x3e, r29	; 62
    21bc:	0f be       	out	0x3f, r0	; 63
    21be:	cd bf       	out	0x3d, r28	; 61
    21c0:	cf 91       	pop	r28
    21c2:	df 91       	pop	r29
    21c4:	08 95       	ret

000021c6 <main>:

//Main function
void main(void)
{
    21c6:	df 93       	push	r29
    21c8:	cf 93       	push	r28
    21ca:	cd b7       	in	r28, 0x3d	; 61
    21cc:	de b7       	in	r29, 0x3e	; 62
    21ce:	2f 97       	sbiw	r28, 0x0f	; 15
    21d0:	0f b6       	in	r0, 0x3f	; 63
    21d2:	f8 94       	cli
    21d4:	de bf       	out	0x3e, r29	; 62
    21d6:	0f be       	out	0x3f, r0	; 63
    21d8:	cd bf       	out	0x3d, r28	; 61
 unsigned char i = 0;
    21da:	1f 86       	std	Y+15, r1	; 0x0f
 init_devices();
    21dc:	0e 94 16 01 	call	0x22c	; 0x22c <init_devices>

 stand_position();
    21e0:	0e 94 41 02 	call	0x482	; 0x482 <stand_position>
    21e4:	80 e0       	ldi	r24, 0x00	; 0
    21e6:	90 e8       	ldi	r25, 0x80	; 128
    21e8:	ab e3       	ldi	r26, 0x3B	; 59
    21ea:	b5 e4       	ldi	r27, 0x45	; 69
    21ec:	8b 87       	std	Y+11, r24	; 0x0b
    21ee:	9c 87       	std	Y+12, r25	; 0x0c
    21f0:	ad 87       	std	Y+13, r26	; 0x0d
    21f2:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    21f4:	6b 85       	ldd	r22, Y+11	; 0x0b
    21f6:	7c 85       	ldd	r23, Y+12	; 0x0c
    21f8:	8d 85       	ldd	r24, Y+13	; 0x0d
    21fa:	9e 85       	ldd	r25, Y+14	; 0x0e
    21fc:	26 e6       	ldi	r18, 0x66	; 102
    21fe:	36 e6       	ldi	r19, 0x66	; 102
    2200:	46 e6       	ldi	r20, 0x66	; 102
    2202:	55 e4       	ldi	r21, 0x45	; 69
    2204:	0e 94 69 13 	call	0x26d2	; 0x26d2 <__mulsf3>
    2208:	dc 01       	movw	r26, r24
    220a:	cb 01       	movw	r24, r22
    220c:	8f 83       	std	Y+7, r24	; 0x07
    220e:	98 87       	std	Y+8, r25	; 0x08
    2210:	a9 87       	std	Y+9, r26	; 0x09
    2212:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2214:	6f 81       	ldd	r22, Y+7	; 0x07
    2216:	78 85       	ldd	r23, Y+8	; 0x08
    2218:	89 85       	ldd	r24, Y+9	; 0x09
    221a:	9a 85       	ldd	r25, Y+10	; 0x0a
    221c:	20 e0       	ldi	r18, 0x00	; 0
    221e:	30 e0       	ldi	r19, 0x00	; 0
    2220:	40 e8       	ldi	r20, 0x80	; 128
    2222:	5f e3       	ldi	r21, 0x3F	; 63
    2224:	0e 94 6f 15 	call	0x2ade	; 0x2ade <__ltsf2>
    2228:	88 23       	and	r24, r24
    222a:	2c f4       	brge	.+10     	; 0x2236 <__stack+0x37>
		__ticks = 1;
    222c:	81 e0       	ldi	r24, 0x01	; 1
    222e:	90 e0       	ldi	r25, 0x00	; 0
    2230:	9e 83       	std	Y+6, r25	; 0x06
    2232:	8d 83       	std	Y+5, r24	; 0x05
    2234:	3f c0       	rjmp	.+126    	; 0x22b4 <__stack+0xb5>
	else if (__tmp > 65535)
    2236:	6f 81       	ldd	r22, Y+7	; 0x07
    2238:	78 85       	ldd	r23, Y+8	; 0x08
    223a:	89 85       	ldd	r24, Y+9	; 0x09
    223c:	9a 85       	ldd	r25, Y+10	; 0x0a
    223e:	20 e0       	ldi	r18, 0x00	; 0
    2240:	3f ef       	ldi	r19, 0xFF	; 255
    2242:	4f e7       	ldi	r20, 0x7F	; 127
    2244:	57 e4       	ldi	r21, 0x47	; 71
    2246:	0e 94 0f 15 	call	0x2a1e	; 0x2a1e <__gtsf2>
    224a:	18 16       	cp	r1, r24
    224c:	4c f5       	brge	.+82     	; 0x22a0 <__stack+0xa1>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    224e:	6b 85       	ldd	r22, Y+11	; 0x0b
    2250:	7c 85       	ldd	r23, Y+12	; 0x0c
    2252:	8d 85       	ldd	r24, Y+13	; 0x0d
    2254:	9e 85       	ldd	r25, Y+14	; 0x0e
    2256:	20 e0       	ldi	r18, 0x00	; 0
    2258:	30 e0       	ldi	r19, 0x00	; 0
    225a:	40 e2       	ldi	r20, 0x20	; 32
    225c:	51 e4       	ldi	r21, 0x41	; 65
    225e:	0e 94 69 13 	call	0x26d2	; 0x26d2 <__mulsf3>
    2262:	dc 01       	movw	r26, r24
    2264:	cb 01       	movw	r24, r22
    2266:	bc 01       	movw	r22, r24
    2268:	cd 01       	movw	r24, r26
    226a:	0e 94 93 11 	call	0x2326	; 0x2326 <__fixunssfsi>
    226e:	dc 01       	movw	r26, r24
    2270:	cb 01       	movw	r24, r22
    2272:	9e 83       	std	Y+6, r25	; 0x06
    2274:	8d 83       	std	Y+5, r24	; 0x05
    2276:	0f c0       	rjmp	.+30     	; 0x2296 <__stack+0x97>
    2278:	80 e7       	ldi	r24, 0x70	; 112
    227a:	91 e0       	ldi	r25, 0x01	; 1
    227c:	9c 83       	std	Y+4, r25	; 0x04
    227e:	8b 83       	std	Y+3, r24	; 0x03
    2280:	8b 81       	ldd	r24, Y+3	; 0x03
    2282:	9c 81       	ldd	r25, Y+4	; 0x04
    2284:	01 97       	sbiw	r24, 0x01	; 1
    2286:	f1 f7       	brne	.-4      	; 0x2284 <__stack+0x85>
    2288:	9c 83       	std	Y+4, r25	; 0x04
    228a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    228c:	8d 81       	ldd	r24, Y+5	; 0x05
    228e:	9e 81       	ldd	r25, Y+6	; 0x06
    2290:	01 97       	sbiw	r24, 0x01	; 1
    2292:	9e 83       	std	Y+6, r25	; 0x06
    2294:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2296:	8d 81       	ldd	r24, Y+5	; 0x05
    2298:	9e 81       	ldd	r25, Y+6	; 0x06
    229a:	00 97       	sbiw	r24, 0x00	; 0
    229c:	69 f7       	brne	.-38     	; 0x2278 <__stack+0x79>
    229e:	14 c0       	rjmp	.+40     	; 0x22c8 <__stack+0xc9>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    22a0:	6f 81       	ldd	r22, Y+7	; 0x07
    22a2:	78 85       	ldd	r23, Y+8	; 0x08
    22a4:	89 85       	ldd	r24, Y+9	; 0x09
    22a6:	9a 85       	ldd	r25, Y+10	; 0x0a
    22a8:	0e 94 93 11 	call	0x2326	; 0x2326 <__fixunssfsi>
    22ac:	dc 01       	movw	r26, r24
    22ae:	cb 01       	movw	r24, r22
    22b0:	9e 83       	std	Y+6, r25	; 0x06
    22b2:	8d 83       	std	Y+5, r24	; 0x05
    22b4:	8d 81       	ldd	r24, Y+5	; 0x05
    22b6:	9e 81       	ldd	r25, Y+6	; 0x06
    22b8:	9a 83       	std	Y+2, r25	; 0x02
    22ba:	89 83       	std	Y+1, r24	; 0x01
    22bc:	89 81       	ldd	r24, Y+1	; 0x01
    22be:	9a 81       	ldd	r25, Y+2	; 0x02
    22c0:	01 97       	sbiw	r24, 0x01	; 1
    22c2:	f1 f7       	brne	.-4      	; 0x22c0 <__stack+0xc1>
    22c4:	9a 83       	std	Y+2, r25	; 0x02
    22c6:	89 83       	std	Y+1, r24	; 0x01
 _delay_ms(3000);

 forward_init();
    22c8:	0e 94 ab 02 	call	0x556	; 0x556 <forward_init>

while(1)
{ 
 forward_init();
    22cc:	0e 94 ab 02 	call	0x556	; 0x556 <forward_init>
 for (i=0; i <5; i++)
    22d0:	1f 86       	std	Y+15, r1	; 0x0f
    22d2:	05 c0       	rjmp	.+10     	; 0x22de <__stack+0xdf>
 {
  forward();
    22d4:	0e 94 1a 04 	call	0x834	; 0x834 <forward>
 forward_init();

while(1)
{ 
 forward_init();
 for (i=0; i <5; i++)
    22d8:	8f 85       	ldd	r24, Y+15	; 0x0f
    22da:	8f 5f       	subi	r24, 0xFF	; 255
    22dc:	8f 87       	std	Y+15, r24	; 0x0f
    22de:	8f 85       	ldd	r24, Y+15	; 0x0f
    22e0:	85 30       	cpi	r24, 0x05	; 5
    22e2:	c0 f3       	brcs	.-16     	; 0x22d4 <__stack+0xd5>
 {
  forward();
 }

 back_init();
    22e4:	0e 94 01 06 	call	0xc02	; 0xc02 <back_init>
 for (i=0; i <5; i++)
    22e8:	1f 86       	std	Y+15, r1	; 0x0f
    22ea:	05 c0       	rjmp	.+10     	; 0x22f6 <__stack+0xf7>
 {
  back();
    22ec:	0e 94 70 07 	call	0xee0	; 0xee0 <back>
 {
  forward();
 }

 back_init();
 for (i=0; i <5; i++)
    22f0:	8f 85       	ldd	r24, Y+15	; 0x0f
    22f2:	8f 5f       	subi	r24, 0xFF	; 255
    22f4:	8f 87       	std	Y+15, r24	; 0x0f
    22f6:	8f 85       	ldd	r24, Y+15	; 0x0f
    22f8:	85 30       	cpi	r24, 0x05	; 5
    22fa:	c0 f3       	brcs	.-16     	; 0x22ec <__stack+0xed>
 {
  back();
 }

 for (i=0; i <5; i++)
    22fc:	1f 86       	std	Y+15, r1	; 0x0f
    22fe:	05 c0       	rjmp	.+10     	; 0x230a <__stack+0x10b>
 {
  left();
    2300:	0e 94 57 09 	call	0x12ae	; 0x12ae <left>
 for (i=0; i <5; i++)
 {
  back();
 }

 for (i=0; i <5; i++)
    2304:	8f 85       	ldd	r24, Y+15	; 0x0f
    2306:	8f 5f       	subi	r24, 0xFF	; 255
    2308:	8f 87       	std	Y+15, r24	; 0x0f
    230a:	8f 85       	ldd	r24, Y+15	; 0x0f
    230c:	85 30       	cpi	r24, 0x05	; 5
    230e:	c0 f3       	brcs	.-16     	; 0x2300 <__stack+0x101>
 {
  left();
 }

 for (i=0; i <5; i++)
    2310:	1f 86       	std	Y+15, r1	; 0x0f
    2312:	05 c0       	rjmp	.+10     	; 0x231e <__stack+0x11f>
 {
  right();
    2314:	0e 94 3a 0b 	call	0x1674	; 0x1674 <right>
 for (i=0; i <5; i++)
 {
  left();
 }

 for (i=0; i <5; i++)
    2318:	8f 85       	ldd	r24, Y+15	; 0x0f
    231a:	8f 5f       	subi	r24, 0xFF	; 255
    231c:	8f 87       	std	Y+15, r24	; 0x0f
    231e:	8f 85       	ldd	r24, Y+15	; 0x0f
    2320:	85 30       	cpi	r24, 0x05	; 5
    2322:	c0 f3       	brcs	.-16     	; 0x2314 <__stack+0x115>
    2324:	d3 cf       	rjmp	.-90     	; 0x22cc <__stack+0xcd>

00002326 <__fixunssfsi>:
    2326:	ef 92       	push	r14
    2328:	ff 92       	push	r15
    232a:	0f 93       	push	r16
    232c:	1f 93       	push	r17
    232e:	7b 01       	movw	r14, r22
    2330:	8c 01       	movw	r16, r24
    2332:	20 e0       	ldi	r18, 0x00	; 0
    2334:	30 e0       	ldi	r19, 0x00	; 0
    2336:	40 e0       	ldi	r20, 0x00	; 0
    2338:	5f e4       	ldi	r21, 0x4F	; 79
    233a:	0e 94 3f 15 	call	0x2a7e	; 0x2a7e <__gesf2>
    233e:	88 23       	and	r24, r24
    2340:	8c f0       	brlt	.+34     	; 0x2364 <__fixunssfsi+0x3e>
    2342:	c8 01       	movw	r24, r16
    2344:	b7 01       	movw	r22, r14
    2346:	20 e0       	ldi	r18, 0x00	; 0
    2348:	30 e0       	ldi	r19, 0x00	; 0
    234a:	40 e0       	ldi	r20, 0x00	; 0
    234c:	5f e4       	ldi	r21, 0x4F	; 79
    234e:	0e 94 0b 13 	call	0x2616	; 0x2616 <__subsf3>
    2352:	0e 94 9f 15 	call	0x2b3e	; 0x2b3e <__fixsfsi>
    2356:	9b 01       	movw	r18, r22
    2358:	ac 01       	movw	r20, r24
    235a:	20 50       	subi	r18, 0x00	; 0
    235c:	30 40       	sbci	r19, 0x00	; 0
    235e:	40 40       	sbci	r20, 0x00	; 0
    2360:	50 48       	sbci	r21, 0x80	; 128
    2362:	06 c0       	rjmp	.+12     	; 0x2370 <__fixunssfsi+0x4a>
    2364:	c8 01       	movw	r24, r16
    2366:	b7 01       	movw	r22, r14
    2368:	0e 94 9f 15 	call	0x2b3e	; 0x2b3e <__fixsfsi>
    236c:	9b 01       	movw	r18, r22
    236e:	ac 01       	movw	r20, r24
    2370:	b9 01       	movw	r22, r18
    2372:	ca 01       	movw	r24, r20
    2374:	1f 91       	pop	r17
    2376:	0f 91       	pop	r16
    2378:	ff 90       	pop	r15
    237a:	ef 90       	pop	r14
    237c:	08 95       	ret

0000237e <_fpadd_parts>:
    237e:	a0 e0       	ldi	r26, 0x00	; 0
    2380:	b0 e0       	ldi	r27, 0x00	; 0
    2382:	e5 ec       	ldi	r30, 0xC5	; 197
    2384:	f1 e1       	ldi	r31, 0x11	; 17
    2386:	0c 94 61 18 	jmp	0x30c2	; 0x30c2 <__prologue_saves__>
    238a:	dc 01       	movw	r26, r24
    238c:	2b 01       	movw	r4, r22
    238e:	fa 01       	movw	r30, r20
    2390:	9c 91       	ld	r25, X
    2392:	92 30       	cpi	r25, 0x02	; 2
    2394:	08 f4       	brcc	.+2      	; 0x2398 <_fpadd_parts+0x1a>
    2396:	39 c1       	rjmp	.+626    	; 0x260a <_fpadd_parts+0x28c>
    2398:	eb 01       	movw	r28, r22
    239a:	88 81       	ld	r24, Y
    239c:	82 30       	cpi	r24, 0x02	; 2
    239e:	08 f4       	brcc	.+2      	; 0x23a2 <_fpadd_parts+0x24>
    23a0:	33 c1       	rjmp	.+614    	; 0x2608 <_fpadd_parts+0x28a>
    23a2:	94 30       	cpi	r25, 0x04	; 4
    23a4:	69 f4       	brne	.+26     	; 0x23c0 <_fpadd_parts+0x42>
    23a6:	84 30       	cpi	r24, 0x04	; 4
    23a8:	09 f0       	breq	.+2      	; 0x23ac <_fpadd_parts+0x2e>
    23aa:	2f c1       	rjmp	.+606    	; 0x260a <_fpadd_parts+0x28c>
    23ac:	11 96       	adiw	r26, 0x01	; 1
    23ae:	9c 91       	ld	r25, X
    23b0:	11 97       	sbiw	r26, 0x01	; 1
    23b2:	89 81       	ldd	r24, Y+1	; 0x01
    23b4:	98 17       	cp	r25, r24
    23b6:	09 f4       	brne	.+2      	; 0x23ba <_fpadd_parts+0x3c>
    23b8:	28 c1       	rjmp	.+592    	; 0x260a <_fpadd_parts+0x28c>
    23ba:	a0 e0       	ldi	r26, 0x00	; 0
    23bc:	b2 e0       	ldi	r27, 0x02	; 2
    23be:	25 c1       	rjmp	.+586    	; 0x260a <_fpadd_parts+0x28c>
    23c0:	84 30       	cpi	r24, 0x04	; 4
    23c2:	09 f4       	brne	.+2      	; 0x23c6 <_fpadd_parts+0x48>
    23c4:	21 c1       	rjmp	.+578    	; 0x2608 <_fpadd_parts+0x28a>
    23c6:	82 30       	cpi	r24, 0x02	; 2
    23c8:	a9 f4       	brne	.+42     	; 0x23f4 <_fpadd_parts+0x76>
    23ca:	92 30       	cpi	r25, 0x02	; 2
    23cc:	09 f0       	breq	.+2      	; 0x23d0 <_fpadd_parts+0x52>
    23ce:	1d c1       	rjmp	.+570    	; 0x260a <_fpadd_parts+0x28c>
    23d0:	9a 01       	movw	r18, r20
    23d2:	ad 01       	movw	r20, r26
    23d4:	88 e0       	ldi	r24, 0x08	; 8
    23d6:	ea 01       	movw	r28, r20
    23d8:	09 90       	ld	r0, Y+
    23da:	ae 01       	movw	r20, r28
    23dc:	e9 01       	movw	r28, r18
    23de:	09 92       	st	Y+, r0
    23e0:	9e 01       	movw	r18, r28
    23e2:	81 50       	subi	r24, 0x01	; 1
    23e4:	c1 f7       	brne	.-16     	; 0x23d6 <_fpadd_parts+0x58>
    23e6:	e2 01       	movw	r28, r4
    23e8:	89 81       	ldd	r24, Y+1	; 0x01
    23ea:	11 96       	adiw	r26, 0x01	; 1
    23ec:	9c 91       	ld	r25, X
    23ee:	89 23       	and	r24, r25
    23f0:	81 83       	std	Z+1, r24	; 0x01
    23f2:	08 c1       	rjmp	.+528    	; 0x2604 <_fpadd_parts+0x286>
    23f4:	92 30       	cpi	r25, 0x02	; 2
    23f6:	09 f4       	brne	.+2      	; 0x23fa <_fpadd_parts+0x7c>
    23f8:	07 c1       	rjmp	.+526    	; 0x2608 <_fpadd_parts+0x28a>
    23fa:	12 96       	adiw	r26, 0x02	; 2
    23fc:	2d 90       	ld	r2, X+
    23fe:	3c 90       	ld	r3, X
    2400:	13 97       	sbiw	r26, 0x03	; 3
    2402:	eb 01       	movw	r28, r22
    2404:	8a 81       	ldd	r24, Y+2	; 0x02
    2406:	9b 81       	ldd	r25, Y+3	; 0x03
    2408:	14 96       	adiw	r26, 0x04	; 4
    240a:	ad 90       	ld	r10, X+
    240c:	bd 90       	ld	r11, X+
    240e:	cd 90       	ld	r12, X+
    2410:	dc 90       	ld	r13, X
    2412:	17 97       	sbiw	r26, 0x07	; 7
    2414:	ec 80       	ldd	r14, Y+4	; 0x04
    2416:	fd 80       	ldd	r15, Y+5	; 0x05
    2418:	0e 81       	ldd	r16, Y+6	; 0x06
    241a:	1f 81       	ldd	r17, Y+7	; 0x07
    241c:	91 01       	movw	r18, r2
    241e:	28 1b       	sub	r18, r24
    2420:	39 0b       	sbc	r19, r25
    2422:	b9 01       	movw	r22, r18
    2424:	37 ff       	sbrs	r19, 7
    2426:	04 c0       	rjmp	.+8      	; 0x2430 <_fpadd_parts+0xb2>
    2428:	66 27       	eor	r22, r22
    242a:	77 27       	eor	r23, r23
    242c:	62 1b       	sub	r22, r18
    242e:	73 0b       	sbc	r23, r19
    2430:	60 32       	cpi	r22, 0x20	; 32
    2432:	71 05       	cpc	r23, r1
    2434:	0c f0       	brlt	.+2      	; 0x2438 <_fpadd_parts+0xba>
    2436:	61 c0       	rjmp	.+194    	; 0x24fa <_fpadd_parts+0x17c>
    2438:	12 16       	cp	r1, r18
    243a:	13 06       	cpc	r1, r19
    243c:	6c f5       	brge	.+90     	; 0x2498 <_fpadd_parts+0x11a>
    243e:	37 01       	movw	r6, r14
    2440:	48 01       	movw	r8, r16
    2442:	06 2e       	mov	r0, r22
    2444:	04 c0       	rjmp	.+8      	; 0x244e <_fpadd_parts+0xd0>
    2446:	96 94       	lsr	r9
    2448:	87 94       	ror	r8
    244a:	77 94       	ror	r7
    244c:	67 94       	ror	r6
    244e:	0a 94       	dec	r0
    2450:	d2 f7       	brpl	.-12     	; 0x2446 <_fpadd_parts+0xc8>
    2452:	21 e0       	ldi	r18, 0x01	; 1
    2454:	30 e0       	ldi	r19, 0x00	; 0
    2456:	40 e0       	ldi	r20, 0x00	; 0
    2458:	50 e0       	ldi	r21, 0x00	; 0
    245a:	04 c0       	rjmp	.+8      	; 0x2464 <_fpadd_parts+0xe6>
    245c:	22 0f       	add	r18, r18
    245e:	33 1f       	adc	r19, r19
    2460:	44 1f       	adc	r20, r20
    2462:	55 1f       	adc	r21, r21
    2464:	6a 95       	dec	r22
    2466:	d2 f7       	brpl	.-12     	; 0x245c <_fpadd_parts+0xde>
    2468:	21 50       	subi	r18, 0x01	; 1
    246a:	30 40       	sbci	r19, 0x00	; 0
    246c:	40 40       	sbci	r20, 0x00	; 0
    246e:	50 40       	sbci	r21, 0x00	; 0
    2470:	2e 21       	and	r18, r14
    2472:	3f 21       	and	r19, r15
    2474:	40 23       	and	r20, r16
    2476:	51 23       	and	r21, r17
    2478:	21 15       	cp	r18, r1
    247a:	31 05       	cpc	r19, r1
    247c:	41 05       	cpc	r20, r1
    247e:	51 05       	cpc	r21, r1
    2480:	21 f0       	breq	.+8      	; 0x248a <_fpadd_parts+0x10c>
    2482:	21 e0       	ldi	r18, 0x01	; 1
    2484:	30 e0       	ldi	r19, 0x00	; 0
    2486:	40 e0       	ldi	r20, 0x00	; 0
    2488:	50 e0       	ldi	r21, 0x00	; 0
    248a:	79 01       	movw	r14, r18
    248c:	8a 01       	movw	r16, r20
    248e:	e6 28       	or	r14, r6
    2490:	f7 28       	or	r15, r7
    2492:	08 29       	or	r16, r8
    2494:	19 29       	or	r17, r9
    2496:	3c c0       	rjmp	.+120    	; 0x2510 <_fpadd_parts+0x192>
    2498:	23 2b       	or	r18, r19
    249a:	d1 f1       	breq	.+116    	; 0x2510 <_fpadd_parts+0x192>
    249c:	26 0e       	add	r2, r22
    249e:	37 1e       	adc	r3, r23
    24a0:	35 01       	movw	r6, r10
    24a2:	46 01       	movw	r8, r12
    24a4:	06 2e       	mov	r0, r22
    24a6:	04 c0       	rjmp	.+8      	; 0x24b0 <_fpadd_parts+0x132>
    24a8:	96 94       	lsr	r9
    24aa:	87 94       	ror	r8
    24ac:	77 94       	ror	r7
    24ae:	67 94       	ror	r6
    24b0:	0a 94       	dec	r0
    24b2:	d2 f7       	brpl	.-12     	; 0x24a8 <_fpadd_parts+0x12a>
    24b4:	21 e0       	ldi	r18, 0x01	; 1
    24b6:	30 e0       	ldi	r19, 0x00	; 0
    24b8:	40 e0       	ldi	r20, 0x00	; 0
    24ba:	50 e0       	ldi	r21, 0x00	; 0
    24bc:	04 c0       	rjmp	.+8      	; 0x24c6 <_fpadd_parts+0x148>
    24be:	22 0f       	add	r18, r18
    24c0:	33 1f       	adc	r19, r19
    24c2:	44 1f       	adc	r20, r20
    24c4:	55 1f       	adc	r21, r21
    24c6:	6a 95       	dec	r22
    24c8:	d2 f7       	brpl	.-12     	; 0x24be <_fpadd_parts+0x140>
    24ca:	21 50       	subi	r18, 0x01	; 1
    24cc:	30 40       	sbci	r19, 0x00	; 0
    24ce:	40 40       	sbci	r20, 0x00	; 0
    24d0:	50 40       	sbci	r21, 0x00	; 0
    24d2:	2a 21       	and	r18, r10
    24d4:	3b 21       	and	r19, r11
    24d6:	4c 21       	and	r20, r12
    24d8:	5d 21       	and	r21, r13
    24da:	21 15       	cp	r18, r1
    24dc:	31 05       	cpc	r19, r1
    24de:	41 05       	cpc	r20, r1
    24e0:	51 05       	cpc	r21, r1
    24e2:	21 f0       	breq	.+8      	; 0x24ec <_fpadd_parts+0x16e>
    24e4:	21 e0       	ldi	r18, 0x01	; 1
    24e6:	30 e0       	ldi	r19, 0x00	; 0
    24e8:	40 e0       	ldi	r20, 0x00	; 0
    24ea:	50 e0       	ldi	r21, 0x00	; 0
    24ec:	59 01       	movw	r10, r18
    24ee:	6a 01       	movw	r12, r20
    24f0:	a6 28       	or	r10, r6
    24f2:	b7 28       	or	r11, r7
    24f4:	c8 28       	or	r12, r8
    24f6:	d9 28       	or	r13, r9
    24f8:	0b c0       	rjmp	.+22     	; 0x2510 <_fpadd_parts+0x192>
    24fa:	82 15       	cp	r24, r2
    24fc:	93 05       	cpc	r25, r3
    24fe:	2c f0       	brlt	.+10     	; 0x250a <_fpadd_parts+0x18c>
    2500:	1c 01       	movw	r2, r24
    2502:	aa 24       	eor	r10, r10
    2504:	bb 24       	eor	r11, r11
    2506:	65 01       	movw	r12, r10
    2508:	03 c0       	rjmp	.+6      	; 0x2510 <_fpadd_parts+0x192>
    250a:	ee 24       	eor	r14, r14
    250c:	ff 24       	eor	r15, r15
    250e:	87 01       	movw	r16, r14
    2510:	11 96       	adiw	r26, 0x01	; 1
    2512:	9c 91       	ld	r25, X
    2514:	d2 01       	movw	r26, r4
    2516:	11 96       	adiw	r26, 0x01	; 1
    2518:	8c 91       	ld	r24, X
    251a:	98 17       	cp	r25, r24
    251c:	09 f4       	brne	.+2      	; 0x2520 <_fpadd_parts+0x1a2>
    251e:	45 c0       	rjmp	.+138    	; 0x25aa <_fpadd_parts+0x22c>
    2520:	99 23       	and	r25, r25
    2522:	39 f0       	breq	.+14     	; 0x2532 <_fpadd_parts+0x1b4>
    2524:	a8 01       	movw	r20, r16
    2526:	97 01       	movw	r18, r14
    2528:	2a 19       	sub	r18, r10
    252a:	3b 09       	sbc	r19, r11
    252c:	4c 09       	sbc	r20, r12
    252e:	5d 09       	sbc	r21, r13
    2530:	06 c0       	rjmp	.+12     	; 0x253e <_fpadd_parts+0x1c0>
    2532:	a6 01       	movw	r20, r12
    2534:	95 01       	movw	r18, r10
    2536:	2e 19       	sub	r18, r14
    2538:	3f 09       	sbc	r19, r15
    253a:	40 0b       	sbc	r20, r16
    253c:	51 0b       	sbc	r21, r17
    253e:	57 fd       	sbrc	r21, 7
    2540:	08 c0       	rjmp	.+16     	; 0x2552 <_fpadd_parts+0x1d4>
    2542:	11 82       	std	Z+1, r1	; 0x01
    2544:	33 82       	std	Z+3, r3	; 0x03
    2546:	22 82       	std	Z+2, r2	; 0x02
    2548:	24 83       	std	Z+4, r18	; 0x04
    254a:	35 83       	std	Z+5, r19	; 0x05
    254c:	46 83       	std	Z+6, r20	; 0x06
    254e:	57 83       	std	Z+7, r21	; 0x07
    2550:	1d c0       	rjmp	.+58     	; 0x258c <_fpadd_parts+0x20e>
    2552:	81 e0       	ldi	r24, 0x01	; 1
    2554:	81 83       	std	Z+1, r24	; 0x01
    2556:	33 82       	std	Z+3, r3	; 0x03
    2558:	22 82       	std	Z+2, r2	; 0x02
    255a:	88 27       	eor	r24, r24
    255c:	99 27       	eor	r25, r25
    255e:	dc 01       	movw	r26, r24
    2560:	82 1b       	sub	r24, r18
    2562:	93 0b       	sbc	r25, r19
    2564:	a4 0b       	sbc	r26, r20
    2566:	b5 0b       	sbc	r27, r21
    2568:	84 83       	std	Z+4, r24	; 0x04
    256a:	95 83       	std	Z+5, r25	; 0x05
    256c:	a6 83       	std	Z+6, r26	; 0x06
    256e:	b7 83       	std	Z+7, r27	; 0x07
    2570:	0d c0       	rjmp	.+26     	; 0x258c <_fpadd_parts+0x20e>
    2572:	22 0f       	add	r18, r18
    2574:	33 1f       	adc	r19, r19
    2576:	44 1f       	adc	r20, r20
    2578:	55 1f       	adc	r21, r21
    257a:	24 83       	std	Z+4, r18	; 0x04
    257c:	35 83       	std	Z+5, r19	; 0x05
    257e:	46 83       	std	Z+6, r20	; 0x06
    2580:	57 83       	std	Z+7, r21	; 0x07
    2582:	82 81       	ldd	r24, Z+2	; 0x02
    2584:	93 81       	ldd	r25, Z+3	; 0x03
    2586:	01 97       	sbiw	r24, 0x01	; 1
    2588:	93 83       	std	Z+3, r25	; 0x03
    258a:	82 83       	std	Z+2, r24	; 0x02
    258c:	24 81       	ldd	r18, Z+4	; 0x04
    258e:	35 81       	ldd	r19, Z+5	; 0x05
    2590:	46 81       	ldd	r20, Z+6	; 0x06
    2592:	57 81       	ldd	r21, Z+7	; 0x07
    2594:	da 01       	movw	r26, r20
    2596:	c9 01       	movw	r24, r18
    2598:	01 97       	sbiw	r24, 0x01	; 1
    259a:	a1 09       	sbc	r26, r1
    259c:	b1 09       	sbc	r27, r1
    259e:	8f 5f       	subi	r24, 0xFF	; 255
    25a0:	9f 4f       	sbci	r25, 0xFF	; 255
    25a2:	af 4f       	sbci	r26, 0xFF	; 255
    25a4:	bf 43       	sbci	r27, 0x3F	; 63
    25a6:	28 f3       	brcs	.-54     	; 0x2572 <_fpadd_parts+0x1f4>
    25a8:	0b c0       	rjmp	.+22     	; 0x25c0 <_fpadd_parts+0x242>
    25aa:	91 83       	std	Z+1, r25	; 0x01
    25ac:	33 82       	std	Z+3, r3	; 0x03
    25ae:	22 82       	std	Z+2, r2	; 0x02
    25b0:	ea 0c       	add	r14, r10
    25b2:	fb 1c       	adc	r15, r11
    25b4:	0c 1d       	adc	r16, r12
    25b6:	1d 1d       	adc	r17, r13
    25b8:	e4 82       	std	Z+4, r14	; 0x04
    25ba:	f5 82       	std	Z+5, r15	; 0x05
    25bc:	06 83       	std	Z+6, r16	; 0x06
    25be:	17 83       	std	Z+7, r17	; 0x07
    25c0:	83 e0       	ldi	r24, 0x03	; 3
    25c2:	80 83       	st	Z, r24
    25c4:	24 81       	ldd	r18, Z+4	; 0x04
    25c6:	35 81       	ldd	r19, Z+5	; 0x05
    25c8:	46 81       	ldd	r20, Z+6	; 0x06
    25ca:	57 81       	ldd	r21, Z+7	; 0x07
    25cc:	57 ff       	sbrs	r21, 7
    25ce:	1a c0       	rjmp	.+52     	; 0x2604 <_fpadd_parts+0x286>
    25d0:	c9 01       	movw	r24, r18
    25d2:	aa 27       	eor	r26, r26
    25d4:	97 fd       	sbrc	r25, 7
    25d6:	a0 95       	com	r26
    25d8:	ba 2f       	mov	r27, r26
    25da:	81 70       	andi	r24, 0x01	; 1
    25dc:	90 70       	andi	r25, 0x00	; 0
    25de:	a0 70       	andi	r26, 0x00	; 0
    25e0:	b0 70       	andi	r27, 0x00	; 0
    25e2:	56 95       	lsr	r21
    25e4:	47 95       	ror	r20
    25e6:	37 95       	ror	r19
    25e8:	27 95       	ror	r18
    25ea:	82 2b       	or	r24, r18
    25ec:	93 2b       	or	r25, r19
    25ee:	a4 2b       	or	r26, r20
    25f0:	b5 2b       	or	r27, r21
    25f2:	84 83       	std	Z+4, r24	; 0x04
    25f4:	95 83       	std	Z+5, r25	; 0x05
    25f6:	a6 83       	std	Z+6, r26	; 0x06
    25f8:	b7 83       	std	Z+7, r27	; 0x07
    25fa:	82 81       	ldd	r24, Z+2	; 0x02
    25fc:	93 81       	ldd	r25, Z+3	; 0x03
    25fe:	01 96       	adiw	r24, 0x01	; 1
    2600:	93 83       	std	Z+3, r25	; 0x03
    2602:	82 83       	std	Z+2, r24	; 0x02
    2604:	df 01       	movw	r26, r30
    2606:	01 c0       	rjmp	.+2      	; 0x260a <_fpadd_parts+0x28c>
    2608:	d2 01       	movw	r26, r4
    260a:	cd 01       	movw	r24, r26
    260c:	cd b7       	in	r28, 0x3d	; 61
    260e:	de b7       	in	r29, 0x3e	; 62
    2610:	e2 e1       	ldi	r30, 0x12	; 18
    2612:	0c 94 7d 18 	jmp	0x30fa	; 0x30fa <__epilogue_restores__>

00002616 <__subsf3>:
    2616:	a0 e2       	ldi	r26, 0x20	; 32
    2618:	b0 e0       	ldi	r27, 0x00	; 0
    261a:	e1 e1       	ldi	r30, 0x11	; 17
    261c:	f3 e1       	ldi	r31, 0x13	; 19
    261e:	0c 94 6d 18 	jmp	0x30da	; 0x30da <__prologue_saves__+0x18>
    2622:	69 83       	std	Y+1, r22	; 0x01
    2624:	7a 83       	std	Y+2, r23	; 0x02
    2626:	8b 83       	std	Y+3, r24	; 0x03
    2628:	9c 83       	std	Y+4, r25	; 0x04
    262a:	2d 83       	std	Y+5, r18	; 0x05
    262c:	3e 83       	std	Y+6, r19	; 0x06
    262e:	4f 83       	std	Y+7, r20	; 0x07
    2630:	58 87       	std	Y+8, r21	; 0x08
    2632:	e9 e0       	ldi	r30, 0x09	; 9
    2634:	ee 2e       	mov	r14, r30
    2636:	f1 2c       	mov	r15, r1
    2638:	ec 0e       	add	r14, r28
    263a:	fd 1e       	adc	r15, r29
    263c:	ce 01       	movw	r24, r28
    263e:	01 96       	adiw	r24, 0x01	; 1
    2640:	b7 01       	movw	r22, r14
    2642:	0e 94 90 17 	call	0x2f20	; 0x2f20 <__unpack_f>
    2646:	8e 01       	movw	r16, r28
    2648:	0f 5e       	subi	r16, 0xEF	; 239
    264a:	1f 4f       	sbci	r17, 0xFF	; 255
    264c:	ce 01       	movw	r24, r28
    264e:	05 96       	adiw	r24, 0x05	; 5
    2650:	b8 01       	movw	r22, r16
    2652:	0e 94 90 17 	call	0x2f20	; 0x2f20 <__unpack_f>
    2656:	8a 89       	ldd	r24, Y+18	; 0x12
    2658:	91 e0       	ldi	r25, 0x01	; 1
    265a:	89 27       	eor	r24, r25
    265c:	8a 8b       	std	Y+18, r24	; 0x12
    265e:	c7 01       	movw	r24, r14
    2660:	b8 01       	movw	r22, r16
    2662:	ae 01       	movw	r20, r28
    2664:	47 5e       	subi	r20, 0xE7	; 231
    2666:	5f 4f       	sbci	r21, 0xFF	; 255
    2668:	0e 94 bf 11 	call	0x237e	; 0x237e <_fpadd_parts>
    266c:	0e 94 bb 16 	call	0x2d76	; 0x2d76 <__pack_f>
    2670:	a0 96       	adiw	r28, 0x20	; 32
    2672:	e6 e0       	ldi	r30, 0x06	; 6
    2674:	0c 94 89 18 	jmp	0x3112	; 0x3112 <__epilogue_restores__+0x18>

00002678 <__addsf3>:
    2678:	a0 e2       	ldi	r26, 0x20	; 32
    267a:	b0 e0       	ldi	r27, 0x00	; 0
    267c:	e2 e4       	ldi	r30, 0x42	; 66
    267e:	f3 e1       	ldi	r31, 0x13	; 19
    2680:	0c 94 6d 18 	jmp	0x30da	; 0x30da <__prologue_saves__+0x18>
    2684:	69 83       	std	Y+1, r22	; 0x01
    2686:	7a 83       	std	Y+2, r23	; 0x02
    2688:	8b 83       	std	Y+3, r24	; 0x03
    268a:	9c 83       	std	Y+4, r25	; 0x04
    268c:	2d 83       	std	Y+5, r18	; 0x05
    268e:	3e 83       	std	Y+6, r19	; 0x06
    2690:	4f 83       	std	Y+7, r20	; 0x07
    2692:	58 87       	std	Y+8, r21	; 0x08
    2694:	f9 e0       	ldi	r31, 0x09	; 9
    2696:	ef 2e       	mov	r14, r31
    2698:	f1 2c       	mov	r15, r1
    269a:	ec 0e       	add	r14, r28
    269c:	fd 1e       	adc	r15, r29
    269e:	ce 01       	movw	r24, r28
    26a0:	01 96       	adiw	r24, 0x01	; 1
    26a2:	b7 01       	movw	r22, r14
    26a4:	0e 94 90 17 	call	0x2f20	; 0x2f20 <__unpack_f>
    26a8:	8e 01       	movw	r16, r28
    26aa:	0f 5e       	subi	r16, 0xEF	; 239
    26ac:	1f 4f       	sbci	r17, 0xFF	; 255
    26ae:	ce 01       	movw	r24, r28
    26b0:	05 96       	adiw	r24, 0x05	; 5
    26b2:	b8 01       	movw	r22, r16
    26b4:	0e 94 90 17 	call	0x2f20	; 0x2f20 <__unpack_f>
    26b8:	c7 01       	movw	r24, r14
    26ba:	b8 01       	movw	r22, r16
    26bc:	ae 01       	movw	r20, r28
    26be:	47 5e       	subi	r20, 0xE7	; 231
    26c0:	5f 4f       	sbci	r21, 0xFF	; 255
    26c2:	0e 94 bf 11 	call	0x237e	; 0x237e <_fpadd_parts>
    26c6:	0e 94 bb 16 	call	0x2d76	; 0x2d76 <__pack_f>
    26ca:	a0 96       	adiw	r28, 0x20	; 32
    26cc:	e6 e0       	ldi	r30, 0x06	; 6
    26ce:	0c 94 89 18 	jmp	0x3112	; 0x3112 <__epilogue_restores__+0x18>

000026d2 <__mulsf3>:
    26d2:	a0 e2       	ldi	r26, 0x20	; 32
    26d4:	b0 e0       	ldi	r27, 0x00	; 0
    26d6:	ef e6       	ldi	r30, 0x6F	; 111
    26d8:	f3 e1       	ldi	r31, 0x13	; 19
    26da:	0c 94 61 18 	jmp	0x30c2	; 0x30c2 <__prologue_saves__>
    26de:	69 83       	std	Y+1, r22	; 0x01
    26e0:	7a 83       	std	Y+2, r23	; 0x02
    26e2:	8b 83       	std	Y+3, r24	; 0x03
    26e4:	9c 83       	std	Y+4, r25	; 0x04
    26e6:	2d 83       	std	Y+5, r18	; 0x05
    26e8:	3e 83       	std	Y+6, r19	; 0x06
    26ea:	4f 83       	std	Y+7, r20	; 0x07
    26ec:	58 87       	std	Y+8, r21	; 0x08
    26ee:	ce 01       	movw	r24, r28
    26f0:	01 96       	adiw	r24, 0x01	; 1
    26f2:	be 01       	movw	r22, r28
    26f4:	67 5f       	subi	r22, 0xF7	; 247
    26f6:	7f 4f       	sbci	r23, 0xFF	; 255
    26f8:	0e 94 90 17 	call	0x2f20	; 0x2f20 <__unpack_f>
    26fc:	ce 01       	movw	r24, r28
    26fe:	05 96       	adiw	r24, 0x05	; 5
    2700:	be 01       	movw	r22, r28
    2702:	6f 5e       	subi	r22, 0xEF	; 239
    2704:	7f 4f       	sbci	r23, 0xFF	; 255
    2706:	0e 94 90 17 	call	0x2f20	; 0x2f20 <__unpack_f>
    270a:	99 85       	ldd	r25, Y+9	; 0x09
    270c:	92 30       	cpi	r25, 0x02	; 2
    270e:	88 f0       	brcs	.+34     	; 0x2732 <__mulsf3+0x60>
    2710:	89 89       	ldd	r24, Y+17	; 0x11
    2712:	82 30       	cpi	r24, 0x02	; 2
    2714:	c8 f0       	brcs	.+50     	; 0x2748 <__mulsf3+0x76>
    2716:	94 30       	cpi	r25, 0x04	; 4
    2718:	19 f4       	brne	.+6      	; 0x2720 <__mulsf3+0x4e>
    271a:	82 30       	cpi	r24, 0x02	; 2
    271c:	51 f4       	brne	.+20     	; 0x2732 <__mulsf3+0x60>
    271e:	04 c0       	rjmp	.+8      	; 0x2728 <__mulsf3+0x56>
    2720:	84 30       	cpi	r24, 0x04	; 4
    2722:	29 f4       	brne	.+10     	; 0x272e <__mulsf3+0x5c>
    2724:	92 30       	cpi	r25, 0x02	; 2
    2726:	81 f4       	brne	.+32     	; 0x2748 <__mulsf3+0x76>
    2728:	80 e0       	ldi	r24, 0x00	; 0
    272a:	92 e0       	ldi	r25, 0x02	; 2
    272c:	c6 c0       	rjmp	.+396    	; 0x28ba <__mulsf3+0x1e8>
    272e:	92 30       	cpi	r25, 0x02	; 2
    2730:	49 f4       	brne	.+18     	; 0x2744 <__mulsf3+0x72>
    2732:	20 e0       	ldi	r18, 0x00	; 0
    2734:	9a 85       	ldd	r25, Y+10	; 0x0a
    2736:	8a 89       	ldd	r24, Y+18	; 0x12
    2738:	98 13       	cpse	r25, r24
    273a:	21 e0       	ldi	r18, 0x01	; 1
    273c:	2a 87       	std	Y+10, r18	; 0x0a
    273e:	ce 01       	movw	r24, r28
    2740:	09 96       	adiw	r24, 0x09	; 9
    2742:	bb c0       	rjmp	.+374    	; 0x28ba <__mulsf3+0x1e8>
    2744:	82 30       	cpi	r24, 0x02	; 2
    2746:	49 f4       	brne	.+18     	; 0x275a <__mulsf3+0x88>
    2748:	20 e0       	ldi	r18, 0x00	; 0
    274a:	9a 85       	ldd	r25, Y+10	; 0x0a
    274c:	8a 89       	ldd	r24, Y+18	; 0x12
    274e:	98 13       	cpse	r25, r24
    2750:	21 e0       	ldi	r18, 0x01	; 1
    2752:	2a 8b       	std	Y+18, r18	; 0x12
    2754:	ce 01       	movw	r24, r28
    2756:	41 96       	adiw	r24, 0x11	; 17
    2758:	b0 c0       	rjmp	.+352    	; 0x28ba <__mulsf3+0x1e8>
    275a:	2d 84       	ldd	r2, Y+13	; 0x0d
    275c:	3e 84       	ldd	r3, Y+14	; 0x0e
    275e:	4f 84       	ldd	r4, Y+15	; 0x0f
    2760:	58 88       	ldd	r5, Y+16	; 0x10
    2762:	6d 88       	ldd	r6, Y+21	; 0x15
    2764:	7e 88       	ldd	r7, Y+22	; 0x16
    2766:	8f 88       	ldd	r8, Y+23	; 0x17
    2768:	98 8c       	ldd	r9, Y+24	; 0x18
    276a:	ee 24       	eor	r14, r14
    276c:	ff 24       	eor	r15, r15
    276e:	87 01       	movw	r16, r14
    2770:	aa 24       	eor	r10, r10
    2772:	bb 24       	eor	r11, r11
    2774:	65 01       	movw	r12, r10
    2776:	40 e0       	ldi	r20, 0x00	; 0
    2778:	50 e0       	ldi	r21, 0x00	; 0
    277a:	60 e0       	ldi	r22, 0x00	; 0
    277c:	70 e0       	ldi	r23, 0x00	; 0
    277e:	e0 e0       	ldi	r30, 0x00	; 0
    2780:	f0 e0       	ldi	r31, 0x00	; 0
    2782:	c1 01       	movw	r24, r2
    2784:	81 70       	andi	r24, 0x01	; 1
    2786:	90 70       	andi	r25, 0x00	; 0
    2788:	89 2b       	or	r24, r25
    278a:	e9 f0       	breq	.+58     	; 0x27c6 <__mulsf3+0xf4>
    278c:	e6 0c       	add	r14, r6
    278e:	f7 1c       	adc	r15, r7
    2790:	08 1d       	adc	r16, r8
    2792:	19 1d       	adc	r17, r9
    2794:	9a 01       	movw	r18, r20
    2796:	ab 01       	movw	r20, r22
    2798:	2a 0d       	add	r18, r10
    279a:	3b 1d       	adc	r19, r11
    279c:	4c 1d       	adc	r20, r12
    279e:	5d 1d       	adc	r21, r13
    27a0:	80 e0       	ldi	r24, 0x00	; 0
    27a2:	90 e0       	ldi	r25, 0x00	; 0
    27a4:	a0 e0       	ldi	r26, 0x00	; 0
    27a6:	b0 e0       	ldi	r27, 0x00	; 0
    27a8:	e6 14       	cp	r14, r6
    27aa:	f7 04       	cpc	r15, r7
    27ac:	08 05       	cpc	r16, r8
    27ae:	19 05       	cpc	r17, r9
    27b0:	20 f4       	brcc	.+8      	; 0x27ba <__mulsf3+0xe8>
    27b2:	81 e0       	ldi	r24, 0x01	; 1
    27b4:	90 e0       	ldi	r25, 0x00	; 0
    27b6:	a0 e0       	ldi	r26, 0x00	; 0
    27b8:	b0 e0       	ldi	r27, 0x00	; 0
    27ba:	ba 01       	movw	r22, r20
    27bc:	a9 01       	movw	r20, r18
    27be:	48 0f       	add	r20, r24
    27c0:	59 1f       	adc	r21, r25
    27c2:	6a 1f       	adc	r22, r26
    27c4:	7b 1f       	adc	r23, r27
    27c6:	aa 0c       	add	r10, r10
    27c8:	bb 1c       	adc	r11, r11
    27ca:	cc 1c       	adc	r12, r12
    27cc:	dd 1c       	adc	r13, r13
    27ce:	97 fe       	sbrs	r9, 7
    27d0:	08 c0       	rjmp	.+16     	; 0x27e2 <__mulsf3+0x110>
    27d2:	81 e0       	ldi	r24, 0x01	; 1
    27d4:	90 e0       	ldi	r25, 0x00	; 0
    27d6:	a0 e0       	ldi	r26, 0x00	; 0
    27d8:	b0 e0       	ldi	r27, 0x00	; 0
    27da:	a8 2a       	or	r10, r24
    27dc:	b9 2a       	or	r11, r25
    27de:	ca 2a       	or	r12, r26
    27e0:	db 2a       	or	r13, r27
    27e2:	31 96       	adiw	r30, 0x01	; 1
    27e4:	e0 32       	cpi	r30, 0x20	; 32
    27e6:	f1 05       	cpc	r31, r1
    27e8:	49 f0       	breq	.+18     	; 0x27fc <__mulsf3+0x12a>
    27ea:	66 0c       	add	r6, r6
    27ec:	77 1c       	adc	r7, r7
    27ee:	88 1c       	adc	r8, r8
    27f0:	99 1c       	adc	r9, r9
    27f2:	56 94       	lsr	r5
    27f4:	47 94       	ror	r4
    27f6:	37 94       	ror	r3
    27f8:	27 94       	ror	r2
    27fa:	c3 cf       	rjmp	.-122    	; 0x2782 <__mulsf3+0xb0>
    27fc:	fa 85       	ldd	r31, Y+10	; 0x0a
    27fe:	ea 89       	ldd	r30, Y+18	; 0x12
    2800:	2b 89       	ldd	r18, Y+19	; 0x13
    2802:	3c 89       	ldd	r19, Y+20	; 0x14
    2804:	8b 85       	ldd	r24, Y+11	; 0x0b
    2806:	9c 85       	ldd	r25, Y+12	; 0x0c
    2808:	28 0f       	add	r18, r24
    280a:	39 1f       	adc	r19, r25
    280c:	2e 5f       	subi	r18, 0xFE	; 254
    280e:	3f 4f       	sbci	r19, 0xFF	; 255
    2810:	17 c0       	rjmp	.+46     	; 0x2840 <__mulsf3+0x16e>
    2812:	ca 01       	movw	r24, r20
    2814:	81 70       	andi	r24, 0x01	; 1
    2816:	90 70       	andi	r25, 0x00	; 0
    2818:	89 2b       	or	r24, r25
    281a:	61 f0       	breq	.+24     	; 0x2834 <__mulsf3+0x162>
    281c:	16 95       	lsr	r17
    281e:	07 95       	ror	r16
    2820:	f7 94       	ror	r15
    2822:	e7 94       	ror	r14
    2824:	80 e0       	ldi	r24, 0x00	; 0
    2826:	90 e0       	ldi	r25, 0x00	; 0
    2828:	a0 e0       	ldi	r26, 0x00	; 0
    282a:	b0 e8       	ldi	r27, 0x80	; 128
    282c:	e8 2a       	or	r14, r24
    282e:	f9 2a       	or	r15, r25
    2830:	0a 2b       	or	r16, r26
    2832:	1b 2b       	or	r17, r27
    2834:	76 95       	lsr	r23
    2836:	67 95       	ror	r22
    2838:	57 95       	ror	r21
    283a:	47 95       	ror	r20
    283c:	2f 5f       	subi	r18, 0xFF	; 255
    283e:	3f 4f       	sbci	r19, 0xFF	; 255
    2840:	77 fd       	sbrc	r23, 7
    2842:	e7 cf       	rjmp	.-50     	; 0x2812 <__mulsf3+0x140>
    2844:	0c c0       	rjmp	.+24     	; 0x285e <__mulsf3+0x18c>
    2846:	44 0f       	add	r20, r20
    2848:	55 1f       	adc	r21, r21
    284a:	66 1f       	adc	r22, r22
    284c:	77 1f       	adc	r23, r23
    284e:	17 fd       	sbrc	r17, 7
    2850:	41 60       	ori	r20, 0x01	; 1
    2852:	ee 0c       	add	r14, r14
    2854:	ff 1c       	adc	r15, r15
    2856:	00 1f       	adc	r16, r16
    2858:	11 1f       	adc	r17, r17
    285a:	21 50       	subi	r18, 0x01	; 1
    285c:	30 40       	sbci	r19, 0x00	; 0
    285e:	40 30       	cpi	r20, 0x00	; 0
    2860:	90 e0       	ldi	r25, 0x00	; 0
    2862:	59 07       	cpc	r21, r25
    2864:	90 e0       	ldi	r25, 0x00	; 0
    2866:	69 07       	cpc	r22, r25
    2868:	90 e4       	ldi	r25, 0x40	; 64
    286a:	79 07       	cpc	r23, r25
    286c:	60 f3       	brcs	.-40     	; 0x2846 <__mulsf3+0x174>
    286e:	2b 8f       	std	Y+27, r18	; 0x1b
    2870:	3c 8f       	std	Y+28, r19	; 0x1c
    2872:	db 01       	movw	r26, r22
    2874:	ca 01       	movw	r24, r20
    2876:	8f 77       	andi	r24, 0x7F	; 127
    2878:	90 70       	andi	r25, 0x00	; 0
    287a:	a0 70       	andi	r26, 0x00	; 0
    287c:	b0 70       	andi	r27, 0x00	; 0
    287e:	80 34       	cpi	r24, 0x40	; 64
    2880:	91 05       	cpc	r25, r1
    2882:	a1 05       	cpc	r26, r1
    2884:	b1 05       	cpc	r27, r1
    2886:	61 f4       	brne	.+24     	; 0x28a0 <__mulsf3+0x1ce>
    2888:	47 fd       	sbrc	r20, 7
    288a:	0a c0       	rjmp	.+20     	; 0x28a0 <__mulsf3+0x1ce>
    288c:	e1 14       	cp	r14, r1
    288e:	f1 04       	cpc	r15, r1
    2890:	01 05       	cpc	r16, r1
    2892:	11 05       	cpc	r17, r1
    2894:	29 f0       	breq	.+10     	; 0x28a0 <__mulsf3+0x1ce>
    2896:	40 5c       	subi	r20, 0xC0	; 192
    2898:	5f 4f       	sbci	r21, 0xFF	; 255
    289a:	6f 4f       	sbci	r22, 0xFF	; 255
    289c:	7f 4f       	sbci	r23, 0xFF	; 255
    289e:	40 78       	andi	r20, 0x80	; 128
    28a0:	1a 8e       	std	Y+26, r1	; 0x1a
    28a2:	fe 17       	cp	r31, r30
    28a4:	11 f0       	breq	.+4      	; 0x28aa <__mulsf3+0x1d8>
    28a6:	81 e0       	ldi	r24, 0x01	; 1
    28a8:	8a 8f       	std	Y+26, r24	; 0x1a
    28aa:	4d 8f       	std	Y+29, r20	; 0x1d
    28ac:	5e 8f       	std	Y+30, r21	; 0x1e
    28ae:	6f 8f       	std	Y+31, r22	; 0x1f
    28b0:	78 a3       	std	Y+32, r23	; 0x20
    28b2:	83 e0       	ldi	r24, 0x03	; 3
    28b4:	89 8f       	std	Y+25, r24	; 0x19
    28b6:	ce 01       	movw	r24, r28
    28b8:	49 96       	adiw	r24, 0x19	; 25
    28ba:	0e 94 bb 16 	call	0x2d76	; 0x2d76 <__pack_f>
    28be:	a0 96       	adiw	r28, 0x20	; 32
    28c0:	e2 e1       	ldi	r30, 0x12	; 18
    28c2:	0c 94 7d 18 	jmp	0x30fa	; 0x30fa <__epilogue_restores__>

000028c6 <__divsf3>:
    28c6:	a8 e1       	ldi	r26, 0x18	; 24
    28c8:	b0 e0       	ldi	r27, 0x00	; 0
    28ca:	e9 e6       	ldi	r30, 0x69	; 105
    28cc:	f4 e1       	ldi	r31, 0x14	; 20
    28ce:	0c 94 69 18 	jmp	0x30d2	; 0x30d2 <__prologue_saves__+0x10>
    28d2:	69 83       	std	Y+1, r22	; 0x01
    28d4:	7a 83       	std	Y+2, r23	; 0x02
    28d6:	8b 83       	std	Y+3, r24	; 0x03
    28d8:	9c 83       	std	Y+4, r25	; 0x04
    28da:	2d 83       	std	Y+5, r18	; 0x05
    28dc:	3e 83       	std	Y+6, r19	; 0x06
    28de:	4f 83       	std	Y+7, r20	; 0x07
    28e0:	58 87       	std	Y+8, r21	; 0x08
    28e2:	b9 e0       	ldi	r27, 0x09	; 9
    28e4:	eb 2e       	mov	r14, r27
    28e6:	f1 2c       	mov	r15, r1
    28e8:	ec 0e       	add	r14, r28
    28ea:	fd 1e       	adc	r15, r29
    28ec:	ce 01       	movw	r24, r28
    28ee:	01 96       	adiw	r24, 0x01	; 1
    28f0:	b7 01       	movw	r22, r14
    28f2:	0e 94 90 17 	call	0x2f20	; 0x2f20 <__unpack_f>
    28f6:	8e 01       	movw	r16, r28
    28f8:	0f 5e       	subi	r16, 0xEF	; 239
    28fa:	1f 4f       	sbci	r17, 0xFF	; 255
    28fc:	ce 01       	movw	r24, r28
    28fe:	05 96       	adiw	r24, 0x05	; 5
    2900:	b8 01       	movw	r22, r16
    2902:	0e 94 90 17 	call	0x2f20	; 0x2f20 <__unpack_f>
    2906:	29 85       	ldd	r18, Y+9	; 0x09
    2908:	22 30       	cpi	r18, 0x02	; 2
    290a:	08 f4       	brcc	.+2      	; 0x290e <__divsf3+0x48>
    290c:	7e c0       	rjmp	.+252    	; 0x2a0a <__divsf3+0x144>
    290e:	39 89       	ldd	r19, Y+17	; 0x11
    2910:	32 30       	cpi	r19, 0x02	; 2
    2912:	10 f4       	brcc	.+4      	; 0x2918 <__divsf3+0x52>
    2914:	b8 01       	movw	r22, r16
    2916:	7c c0       	rjmp	.+248    	; 0x2a10 <__divsf3+0x14a>
    2918:	8a 85       	ldd	r24, Y+10	; 0x0a
    291a:	9a 89       	ldd	r25, Y+18	; 0x12
    291c:	89 27       	eor	r24, r25
    291e:	8a 87       	std	Y+10, r24	; 0x0a
    2920:	24 30       	cpi	r18, 0x04	; 4
    2922:	11 f0       	breq	.+4      	; 0x2928 <__divsf3+0x62>
    2924:	22 30       	cpi	r18, 0x02	; 2
    2926:	31 f4       	brne	.+12     	; 0x2934 <__divsf3+0x6e>
    2928:	23 17       	cp	r18, r19
    292a:	09 f0       	breq	.+2      	; 0x292e <__divsf3+0x68>
    292c:	6e c0       	rjmp	.+220    	; 0x2a0a <__divsf3+0x144>
    292e:	60 e0       	ldi	r22, 0x00	; 0
    2930:	72 e0       	ldi	r23, 0x02	; 2
    2932:	6e c0       	rjmp	.+220    	; 0x2a10 <__divsf3+0x14a>
    2934:	34 30       	cpi	r19, 0x04	; 4
    2936:	39 f4       	brne	.+14     	; 0x2946 <__divsf3+0x80>
    2938:	1d 86       	std	Y+13, r1	; 0x0d
    293a:	1e 86       	std	Y+14, r1	; 0x0e
    293c:	1f 86       	std	Y+15, r1	; 0x0f
    293e:	18 8a       	std	Y+16, r1	; 0x10
    2940:	1c 86       	std	Y+12, r1	; 0x0c
    2942:	1b 86       	std	Y+11, r1	; 0x0b
    2944:	04 c0       	rjmp	.+8      	; 0x294e <__divsf3+0x88>
    2946:	32 30       	cpi	r19, 0x02	; 2
    2948:	21 f4       	brne	.+8      	; 0x2952 <__divsf3+0x8c>
    294a:	84 e0       	ldi	r24, 0x04	; 4
    294c:	89 87       	std	Y+9, r24	; 0x09
    294e:	b7 01       	movw	r22, r14
    2950:	5f c0       	rjmp	.+190    	; 0x2a10 <__divsf3+0x14a>
    2952:	2b 85       	ldd	r18, Y+11	; 0x0b
    2954:	3c 85       	ldd	r19, Y+12	; 0x0c
    2956:	8b 89       	ldd	r24, Y+19	; 0x13
    2958:	9c 89       	ldd	r25, Y+20	; 0x14
    295a:	28 1b       	sub	r18, r24
    295c:	39 0b       	sbc	r19, r25
    295e:	3c 87       	std	Y+12, r19	; 0x0c
    2960:	2b 87       	std	Y+11, r18	; 0x0b
    2962:	ed 84       	ldd	r14, Y+13	; 0x0d
    2964:	fe 84       	ldd	r15, Y+14	; 0x0e
    2966:	0f 85       	ldd	r16, Y+15	; 0x0f
    2968:	18 89       	ldd	r17, Y+16	; 0x10
    296a:	ad 88       	ldd	r10, Y+21	; 0x15
    296c:	be 88       	ldd	r11, Y+22	; 0x16
    296e:	cf 88       	ldd	r12, Y+23	; 0x17
    2970:	d8 8c       	ldd	r13, Y+24	; 0x18
    2972:	ea 14       	cp	r14, r10
    2974:	fb 04       	cpc	r15, r11
    2976:	0c 05       	cpc	r16, r12
    2978:	1d 05       	cpc	r17, r13
    297a:	40 f4       	brcc	.+16     	; 0x298c <__divsf3+0xc6>
    297c:	ee 0c       	add	r14, r14
    297e:	ff 1c       	adc	r15, r15
    2980:	00 1f       	adc	r16, r16
    2982:	11 1f       	adc	r17, r17
    2984:	21 50       	subi	r18, 0x01	; 1
    2986:	30 40       	sbci	r19, 0x00	; 0
    2988:	3c 87       	std	Y+12, r19	; 0x0c
    298a:	2b 87       	std	Y+11, r18	; 0x0b
    298c:	20 e0       	ldi	r18, 0x00	; 0
    298e:	30 e0       	ldi	r19, 0x00	; 0
    2990:	40 e0       	ldi	r20, 0x00	; 0
    2992:	50 e0       	ldi	r21, 0x00	; 0
    2994:	80 e0       	ldi	r24, 0x00	; 0
    2996:	90 e0       	ldi	r25, 0x00	; 0
    2998:	a0 e0       	ldi	r26, 0x00	; 0
    299a:	b0 e4       	ldi	r27, 0x40	; 64
    299c:	60 e0       	ldi	r22, 0x00	; 0
    299e:	70 e0       	ldi	r23, 0x00	; 0
    29a0:	ea 14       	cp	r14, r10
    29a2:	fb 04       	cpc	r15, r11
    29a4:	0c 05       	cpc	r16, r12
    29a6:	1d 05       	cpc	r17, r13
    29a8:	40 f0       	brcs	.+16     	; 0x29ba <__divsf3+0xf4>
    29aa:	28 2b       	or	r18, r24
    29ac:	39 2b       	or	r19, r25
    29ae:	4a 2b       	or	r20, r26
    29b0:	5b 2b       	or	r21, r27
    29b2:	ea 18       	sub	r14, r10
    29b4:	fb 08       	sbc	r15, r11
    29b6:	0c 09       	sbc	r16, r12
    29b8:	1d 09       	sbc	r17, r13
    29ba:	b6 95       	lsr	r27
    29bc:	a7 95       	ror	r26
    29be:	97 95       	ror	r25
    29c0:	87 95       	ror	r24
    29c2:	ee 0c       	add	r14, r14
    29c4:	ff 1c       	adc	r15, r15
    29c6:	00 1f       	adc	r16, r16
    29c8:	11 1f       	adc	r17, r17
    29ca:	6f 5f       	subi	r22, 0xFF	; 255
    29cc:	7f 4f       	sbci	r23, 0xFF	; 255
    29ce:	6f 31       	cpi	r22, 0x1F	; 31
    29d0:	71 05       	cpc	r23, r1
    29d2:	31 f7       	brne	.-52     	; 0x29a0 <__divsf3+0xda>
    29d4:	da 01       	movw	r26, r20
    29d6:	c9 01       	movw	r24, r18
    29d8:	8f 77       	andi	r24, 0x7F	; 127
    29da:	90 70       	andi	r25, 0x00	; 0
    29dc:	a0 70       	andi	r26, 0x00	; 0
    29de:	b0 70       	andi	r27, 0x00	; 0
    29e0:	80 34       	cpi	r24, 0x40	; 64
    29e2:	91 05       	cpc	r25, r1
    29e4:	a1 05       	cpc	r26, r1
    29e6:	b1 05       	cpc	r27, r1
    29e8:	61 f4       	brne	.+24     	; 0x2a02 <__divsf3+0x13c>
    29ea:	27 fd       	sbrc	r18, 7
    29ec:	0a c0       	rjmp	.+20     	; 0x2a02 <__divsf3+0x13c>
    29ee:	e1 14       	cp	r14, r1
    29f0:	f1 04       	cpc	r15, r1
    29f2:	01 05       	cpc	r16, r1
    29f4:	11 05       	cpc	r17, r1
    29f6:	29 f0       	breq	.+10     	; 0x2a02 <__divsf3+0x13c>
    29f8:	20 5c       	subi	r18, 0xC0	; 192
    29fa:	3f 4f       	sbci	r19, 0xFF	; 255
    29fc:	4f 4f       	sbci	r20, 0xFF	; 255
    29fe:	5f 4f       	sbci	r21, 0xFF	; 255
    2a00:	20 78       	andi	r18, 0x80	; 128
    2a02:	2d 87       	std	Y+13, r18	; 0x0d
    2a04:	3e 87       	std	Y+14, r19	; 0x0e
    2a06:	4f 87       	std	Y+15, r20	; 0x0f
    2a08:	58 8b       	std	Y+16, r21	; 0x10
    2a0a:	be 01       	movw	r22, r28
    2a0c:	67 5f       	subi	r22, 0xF7	; 247
    2a0e:	7f 4f       	sbci	r23, 0xFF	; 255
    2a10:	cb 01       	movw	r24, r22
    2a12:	0e 94 bb 16 	call	0x2d76	; 0x2d76 <__pack_f>
    2a16:	68 96       	adiw	r28, 0x18	; 24
    2a18:	ea e0       	ldi	r30, 0x0A	; 10
    2a1a:	0c 94 85 18 	jmp	0x310a	; 0x310a <__epilogue_restores__+0x10>

00002a1e <__gtsf2>:
    2a1e:	a8 e1       	ldi	r26, 0x18	; 24
    2a20:	b0 e0       	ldi	r27, 0x00	; 0
    2a22:	e5 e1       	ldi	r30, 0x15	; 21
    2a24:	f5 e1       	ldi	r31, 0x15	; 21
    2a26:	0c 94 6d 18 	jmp	0x30da	; 0x30da <__prologue_saves__+0x18>
    2a2a:	69 83       	std	Y+1, r22	; 0x01
    2a2c:	7a 83       	std	Y+2, r23	; 0x02
    2a2e:	8b 83       	std	Y+3, r24	; 0x03
    2a30:	9c 83       	std	Y+4, r25	; 0x04
    2a32:	2d 83       	std	Y+5, r18	; 0x05
    2a34:	3e 83       	std	Y+6, r19	; 0x06
    2a36:	4f 83       	std	Y+7, r20	; 0x07
    2a38:	58 87       	std	Y+8, r21	; 0x08
    2a3a:	89 e0       	ldi	r24, 0x09	; 9
    2a3c:	e8 2e       	mov	r14, r24
    2a3e:	f1 2c       	mov	r15, r1
    2a40:	ec 0e       	add	r14, r28
    2a42:	fd 1e       	adc	r15, r29
    2a44:	ce 01       	movw	r24, r28
    2a46:	01 96       	adiw	r24, 0x01	; 1
    2a48:	b7 01       	movw	r22, r14
    2a4a:	0e 94 90 17 	call	0x2f20	; 0x2f20 <__unpack_f>
    2a4e:	8e 01       	movw	r16, r28
    2a50:	0f 5e       	subi	r16, 0xEF	; 239
    2a52:	1f 4f       	sbci	r17, 0xFF	; 255
    2a54:	ce 01       	movw	r24, r28
    2a56:	05 96       	adiw	r24, 0x05	; 5
    2a58:	b8 01       	movw	r22, r16
    2a5a:	0e 94 90 17 	call	0x2f20	; 0x2f20 <__unpack_f>
    2a5e:	89 85       	ldd	r24, Y+9	; 0x09
    2a60:	82 30       	cpi	r24, 0x02	; 2
    2a62:	40 f0       	brcs	.+16     	; 0x2a74 <__gtsf2+0x56>
    2a64:	89 89       	ldd	r24, Y+17	; 0x11
    2a66:	82 30       	cpi	r24, 0x02	; 2
    2a68:	28 f0       	brcs	.+10     	; 0x2a74 <__gtsf2+0x56>
    2a6a:	c7 01       	movw	r24, r14
    2a6c:	b8 01       	movw	r22, r16
    2a6e:	0e 94 08 18 	call	0x3010	; 0x3010 <__fpcmp_parts_f>
    2a72:	01 c0       	rjmp	.+2      	; 0x2a76 <__gtsf2+0x58>
    2a74:	8f ef       	ldi	r24, 0xFF	; 255
    2a76:	68 96       	adiw	r28, 0x18	; 24
    2a78:	e6 e0       	ldi	r30, 0x06	; 6
    2a7a:	0c 94 89 18 	jmp	0x3112	; 0x3112 <__epilogue_restores__+0x18>

00002a7e <__gesf2>:
    2a7e:	a8 e1       	ldi	r26, 0x18	; 24
    2a80:	b0 e0       	ldi	r27, 0x00	; 0
    2a82:	e5 e4       	ldi	r30, 0x45	; 69
    2a84:	f5 e1       	ldi	r31, 0x15	; 21
    2a86:	0c 94 6d 18 	jmp	0x30da	; 0x30da <__prologue_saves__+0x18>
    2a8a:	69 83       	std	Y+1, r22	; 0x01
    2a8c:	7a 83       	std	Y+2, r23	; 0x02
    2a8e:	8b 83       	std	Y+3, r24	; 0x03
    2a90:	9c 83       	std	Y+4, r25	; 0x04
    2a92:	2d 83       	std	Y+5, r18	; 0x05
    2a94:	3e 83       	std	Y+6, r19	; 0x06
    2a96:	4f 83       	std	Y+7, r20	; 0x07
    2a98:	58 87       	std	Y+8, r21	; 0x08
    2a9a:	89 e0       	ldi	r24, 0x09	; 9
    2a9c:	e8 2e       	mov	r14, r24
    2a9e:	f1 2c       	mov	r15, r1
    2aa0:	ec 0e       	add	r14, r28
    2aa2:	fd 1e       	adc	r15, r29
    2aa4:	ce 01       	movw	r24, r28
    2aa6:	01 96       	adiw	r24, 0x01	; 1
    2aa8:	b7 01       	movw	r22, r14
    2aaa:	0e 94 90 17 	call	0x2f20	; 0x2f20 <__unpack_f>
    2aae:	8e 01       	movw	r16, r28
    2ab0:	0f 5e       	subi	r16, 0xEF	; 239
    2ab2:	1f 4f       	sbci	r17, 0xFF	; 255
    2ab4:	ce 01       	movw	r24, r28
    2ab6:	05 96       	adiw	r24, 0x05	; 5
    2ab8:	b8 01       	movw	r22, r16
    2aba:	0e 94 90 17 	call	0x2f20	; 0x2f20 <__unpack_f>
    2abe:	89 85       	ldd	r24, Y+9	; 0x09
    2ac0:	82 30       	cpi	r24, 0x02	; 2
    2ac2:	40 f0       	brcs	.+16     	; 0x2ad4 <__gesf2+0x56>
    2ac4:	89 89       	ldd	r24, Y+17	; 0x11
    2ac6:	82 30       	cpi	r24, 0x02	; 2
    2ac8:	28 f0       	brcs	.+10     	; 0x2ad4 <__gesf2+0x56>
    2aca:	c7 01       	movw	r24, r14
    2acc:	b8 01       	movw	r22, r16
    2ace:	0e 94 08 18 	call	0x3010	; 0x3010 <__fpcmp_parts_f>
    2ad2:	01 c0       	rjmp	.+2      	; 0x2ad6 <__gesf2+0x58>
    2ad4:	8f ef       	ldi	r24, 0xFF	; 255
    2ad6:	68 96       	adiw	r28, 0x18	; 24
    2ad8:	e6 e0       	ldi	r30, 0x06	; 6
    2ada:	0c 94 89 18 	jmp	0x3112	; 0x3112 <__epilogue_restores__+0x18>

00002ade <__ltsf2>:
    2ade:	a8 e1       	ldi	r26, 0x18	; 24
    2ae0:	b0 e0       	ldi	r27, 0x00	; 0
    2ae2:	e5 e7       	ldi	r30, 0x75	; 117
    2ae4:	f5 e1       	ldi	r31, 0x15	; 21
    2ae6:	0c 94 6d 18 	jmp	0x30da	; 0x30da <__prologue_saves__+0x18>
    2aea:	69 83       	std	Y+1, r22	; 0x01
    2aec:	7a 83       	std	Y+2, r23	; 0x02
    2aee:	8b 83       	std	Y+3, r24	; 0x03
    2af0:	9c 83       	std	Y+4, r25	; 0x04
    2af2:	2d 83       	std	Y+5, r18	; 0x05
    2af4:	3e 83       	std	Y+6, r19	; 0x06
    2af6:	4f 83       	std	Y+7, r20	; 0x07
    2af8:	58 87       	std	Y+8, r21	; 0x08
    2afa:	89 e0       	ldi	r24, 0x09	; 9
    2afc:	e8 2e       	mov	r14, r24
    2afe:	f1 2c       	mov	r15, r1
    2b00:	ec 0e       	add	r14, r28
    2b02:	fd 1e       	adc	r15, r29
    2b04:	ce 01       	movw	r24, r28
    2b06:	01 96       	adiw	r24, 0x01	; 1
    2b08:	b7 01       	movw	r22, r14
    2b0a:	0e 94 90 17 	call	0x2f20	; 0x2f20 <__unpack_f>
    2b0e:	8e 01       	movw	r16, r28
    2b10:	0f 5e       	subi	r16, 0xEF	; 239
    2b12:	1f 4f       	sbci	r17, 0xFF	; 255
    2b14:	ce 01       	movw	r24, r28
    2b16:	05 96       	adiw	r24, 0x05	; 5
    2b18:	b8 01       	movw	r22, r16
    2b1a:	0e 94 90 17 	call	0x2f20	; 0x2f20 <__unpack_f>
    2b1e:	89 85       	ldd	r24, Y+9	; 0x09
    2b20:	82 30       	cpi	r24, 0x02	; 2
    2b22:	40 f0       	brcs	.+16     	; 0x2b34 <__ltsf2+0x56>
    2b24:	89 89       	ldd	r24, Y+17	; 0x11
    2b26:	82 30       	cpi	r24, 0x02	; 2
    2b28:	28 f0       	brcs	.+10     	; 0x2b34 <__ltsf2+0x56>
    2b2a:	c7 01       	movw	r24, r14
    2b2c:	b8 01       	movw	r22, r16
    2b2e:	0e 94 08 18 	call	0x3010	; 0x3010 <__fpcmp_parts_f>
    2b32:	01 c0       	rjmp	.+2      	; 0x2b36 <__ltsf2+0x58>
    2b34:	81 e0       	ldi	r24, 0x01	; 1
    2b36:	68 96       	adiw	r28, 0x18	; 24
    2b38:	e6 e0       	ldi	r30, 0x06	; 6
    2b3a:	0c 94 89 18 	jmp	0x3112	; 0x3112 <__epilogue_restores__+0x18>

00002b3e <__fixsfsi>:
    2b3e:	ac e0       	ldi	r26, 0x0C	; 12
    2b40:	b0 e0       	ldi	r27, 0x00	; 0
    2b42:	e5 ea       	ldi	r30, 0xA5	; 165
    2b44:	f5 e1       	ldi	r31, 0x15	; 21
    2b46:	0c 94 71 18 	jmp	0x30e2	; 0x30e2 <__prologue_saves__+0x20>
    2b4a:	69 83       	std	Y+1, r22	; 0x01
    2b4c:	7a 83       	std	Y+2, r23	; 0x02
    2b4e:	8b 83       	std	Y+3, r24	; 0x03
    2b50:	9c 83       	std	Y+4, r25	; 0x04
    2b52:	ce 01       	movw	r24, r28
    2b54:	01 96       	adiw	r24, 0x01	; 1
    2b56:	be 01       	movw	r22, r28
    2b58:	6b 5f       	subi	r22, 0xFB	; 251
    2b5a:	7f 4f       	sbci	r23, 0xFF	; 255
    2b5c:	0e 94 90 17 	call	0x2f20	; 0x2f20 <__unpack_f>
    2b60:	8d 81       	ldd	r24, Y+5	; 0x05
    2b62:	82 30       	cpi	r24, 0x02	; 2
    2b64:	61 f1       	breq	.+88     	; 0x2bbe <__fixsfsi+0x80>
    2b66:	82 30       	cpi	r24, 0x02	; 2
    2b68:	50 f1       	brcs	.+84     	; 0x2bbe <__fixsfsi+0x80>
    2b6a:	84 30       	cpi	r24, 0x04	; 4
    2b6c:	21 f4       	brne	.+8      	; 0x2b76 <__fixsfsi+0x38>
    2b6e:	8e 81       	ldd	r24, Y+6	; 0x06
    2b70:	88 23       	and	r24, r24
    2b72:	51 f1       	breq	.+84     	; 0x2bc8 <__fixsfsi+0x8a>
    2b74:	2e c0       	rjmp	.+92     	; 0x2bd2 <__fixsfsi+0x94>
    2b76:	2f 81       	ldd	r18, Y+7	; 0x07
    2b78:	38 85       	ldd	r19, Y+8	; 0x08
    2b7a:	37 fd       	sbrc	r19, 7
    2b7c:	20 c0       	rjmp	.+64     	; 0x2bbe <__fixsfsi+0x80>
    2b7e:	6e 81       	ldd	r22, Y+6	; 0x06
    2b80:	2f 31       	cpi	r18, 0x1F	; 31
    2b82:	31 05       	cpc	r19, r1
    2b84:	1c f0       	brlt	.+6      	; 0x2b8c <__fixsfsi+0x4e>
    2b86:	66 23       	and	r22, r22
    2b88:	f9 f0       	breq	.+62     	; 0x2bc8 <__fixsfsi+0x8a>
    2b8a:	23 c0       	rjmp	.+70     	; 0x2bd2 <__fixsfsi+0x94>
    2b8c:	8e e1       	ldi	r24, 0x1E	; 30
    2b8e:	90 e0       	ldi	r25, 0x00	; 0
    2b90:	82 1b       	sub	r24, r18
    2b92:	93 0b       	sbc	r25, r19
    2b94:	29 85       	ldd	r18, Y+9	; 0x09
    2b96:	3a 85       	ldd	r19, Y+10	; 0x0a
    2b98:	4b 85       	ldd	r20, Y+11	; 0x0b
    2b9a:	5c 85       	ldd	r21, Y+12	; 0x0c
    2b9c:	04 c0       	rjmp	.+8      	; 0x2ba6 <__fixsfsi+0x68>
    2b9e:	56 95       	lsr	r21
    2ba0:	47 95       	ror	r20
    2ba2:	37 95       	ror	r19
    2ba4:	27 95       	ror	r18
    2ba6:	8a 95       	dec	r24
    2ba8:	d2 f7       	brpl	.-12     	; 0x2b9e <__fixsfsi+0x60>
    2baa:	66 23       	and	r22, r22
    2bac:	b1 f0       	breq	.+44     	; 0x2bda <__fixsfsi+0x9c>
    2bae:	50 95       	com	r21
    2bb0:	40 95       	com	r20
    2bb2:	30 95       	com	r19
    2bb4:	21 95       	neg	r18
    2bb6:	3f 4f       	sbci	r19, 0xFF	; 255
    2bb8:	4f 4f       	sbci	r20, 0xFF	; 255
    2bba:	5f 4f       	sbci	r21, 0xFF	; 255
    2bbc:	0e c0       	rjmp	.+28     	; 0x2bda <__fixsfsi+0x9c>
    2bbe:	20 e0       	ldi	r18, 0x00	; 0
    2bc0:	30 e0       	ldi	r19, 0x00	; 0
    2bc2:	40 e0       	ldi	r20, 0x00	; 0
    2bc4:	50 e0       	ldi	r21, 0x00	; 0
    2bc6:	09 c0       	rjmp	.+18     	; 0x2bda <__fixsfsi+0x9c>
    2bc8:	2f ef       	ldi	r18, 0xFF	; 255
    2bca:	3f ef       	ldi	r19, 0xFF	; 255
    2bcc:	4f ef       	ldi	r20, 0xFF	; 255
    2bce:	5f e7       	ldi	r21, 0x7F	; 127
    2bd0:	04 c0       	rjmp	.+8      	; 0x2bda <__fixsfsi+0x9c>
    2bd2:	20 e0       	ldi	r18, 0x00	; 0
    2bd4:	30 e0       	ldi	r19, 0x00	; 0
    2bd6:	40 e0       	ldi	r20, 0x00	; 0
    2bd8:	50 e8       	ldi	r21, 0x80	; 128
    2bda:	b9 01       	movw	r22, r18
    2bdc:	ca 01       	movw	r24, r20
    2bde:	2c 96       	adiw	r28, 0x0c	; 12
    2be0:	e2 e0       	ldi	r30, 0x02	; 2
    2be2:	0c 94 8d 18 	jmp	0x311a	; 0x311a <__epilogue_restores__+0x20>

00002be6 <__floatunsisf>:
    2be6:	a8 e0       	ldi	r26, 0x08	; 8
    2be8:	b0 e0       	ldi	r27, 0x00	; 0
    2bea:	e9 ef       	ldi	r30, 0xF9	; 249
    2bec:	f5 e1       	ldi	r31, 0x15	; 21
    2bee:	0c 94 69 18 	jmp	0x30d2	; 0x30d2 <__prologue_saves__+0x10>
    2bf2:	7b 01       	movw	r14, r22
    2bf4:	8c 01       	movw	r16, r24
    2bf6:	61 15       	cp	r22, r1
    2bf8:	71 05       	cpc	r23, r1
    2bfa:	81 05       	cpc	r24, r1
    2bfc:	91 05       	cpc	r25, r1
    2bfe:	19 f4       	brne	.+6      	; 0x2c06 <__floatunsisf+0x20>
    2c00:	82 e0       	ldi	r24, 0x02	; 2
    2c02:	89 83       	std	Y+1, r24	; 0x01
    2c04:	60 c0       	rjmp	.+192    	; 0x2cc6 <__floatunsisf+0xe0>
    2c06:	83 e0       	ldi	r24, 0x03	; 3
    2c08:	89 83       	std	Y+1, r24	; 0x01
    2c0a:	8e e1       	ldi	r24, 0x1E	; 30
    2c0c:	c8 2e       	mov	r12, r24
    2c0e:	d1 2c       	mov	r13, r1
    2c10:	dc 82       	std	Y+4, r13	; 0x04
    2c12:	cb 82       	std	Y+3, r12	; 0x03
    2c14:	ed 82       	std	Y+5, r14	; 0x05
    2c16:	fe 82       	std	Y+6, r15	; 0x06
    2c18:	0f 83       	std	Y+7, r16	; 0x07
    2c1a:	18 87       	std	Y+8, r17	; 0x08
    2c1c:	c8 01       	movw	r24, r16
    2c1e:	b7 01       	movw	r22, r14
    2c20:	0e 94 6c 16 	call	0x2cd8	; 0x2cd8 <__clzsi2>
    2c24:	fc 01       	movw	r30, r24
    2c26:	31 97       	sbiw	r30, 0x01	; 1
    2c28:	f7 ff       	sbrs	r31, 7
    2c2a:	3b c0       	rjmp	.+118    	; 0x2ca2 <__floatunsisf+0xbc>
    2c2c:	22 27       	eor	r18, r18
    2c2e:	33 27       	eor	r19, r19
    2c30:	2e 1b       	sub	r18, r30
    2c32:	3f 0b       	sbc	r19, r31
    2c34:	57 01       	movw	r10, r14
    2c36:	68 01       	movw	r12, r16
    2c38:	02 2e       	mov	r0, r18
    2c3a:	04 c0       	rjmp	.+8      	; 0x2c44 <__floatunsisf+0x5e>
    2c3c:	d6 94       	lsr	r13
    2c3e:	c7 94       	ror	r12
    2c40:	b7 94       	ror	r11
    2c42:	a7 94       	ror	r10
    2c44:	0a 94       	dec	r0
    2c46:	d2 f7       	brpl	.-12     	; 0x2c3c <__floatunsisf+0x56>
    2c48:	40 e0       	ldi	r20, 0x00	; 0
    2c4a:	50 e0       	ldi	r21, 0x00	; 0
    2c4c:	60 e0       	ldi	r22, 0x00	; 0
    2c4e:	70 e0       	ldi	r23, 0x00	; 0
    2c50:	81 e0       	ldi	r24, 0x01	; 1
    2c52:	90 e0       	ldi	r25, 0x00	; 0
    2c54:	a0 e0       	ldi	r26, 0x00	; 0
    2c56:	b0 e0       	ldi	r27, 0x00	; 0
    2c58:	04 c0       	rjmp	.+8      	; 0x2c62 <__floatunsisf+0x7c>
    2c5a:	88 0f       	add	r24, r24
    2c5c:	99 1f       	adc	r25, r25
    2c5e:	aa 1f       	adc	r26, r26
    2c60:	bb 1f       	adc	r27, r27
    2c62:	2a 95       	dec	r18
    2c64:	d2 f7       	brpl	.-12     	; 0x2c5a <__floatunsisf+0x74>
    2c66:	01 97       	sbiw	r24, 0x01	; 1
    2c68:	a1 09       	sbc	r26, r1
    2c6a:	b1 09       	sbc	r27, r1
    2c6c:	8e 21       	and	r24, r14
    2c6e:	9f 21       	and	r25, r15
    2c70:	a0 23       	and	r26, r16
    2c72:	b1 23       	and	r27, r17
    2c74:	00 97       	sbiw	r24, 0x00	; 0
    2c76:	a1 05       	cpc	r26, r1
    2c78:	b1 05       	cpc	r27, r1
    2c7a:	21 f0       	breq	.+8      	; 0x2c84 <__floatunsisf+0x9e>
    2c7c:	41 e0       	ldi	r20, 0x01	; 1
    2c7e:	50 e0       	ldi	r21, 0x00	; 0
    2c80:	60 e0       	ldi	r22, 0x00	; 0
    2c82:	70 e0       	ldi	r23, 0x00	; 0
    2c84:	4a 29       	or	r20, r10
    2c86:	5b 29       	or	r21, r11
    2c88:	6c 29       	or	r22, r12
    2c8a:	7d 29       	or	r23, r13
    2c8c:	4d 83       	std	Y+5, r20	; 0x05
    2c8e:	5e 83       	std	Y+6, r21	; 0x06
    2c90:	6f 83       	std	Y+7, r22	; 0x07
    2c92:	78 87       	std	Y+8, r23	; 0x08
    2c94:	8e e1       	ldi	r24, 0x1E	; 30
    2c96:	90 e0       	ldi	r25, 0x00	; 0
    2c98:	8e 1b       	sub	r24, r30
    2c9a:	9f 0b       	sbc	r25, r31
    2c9c:	9c 83       	std	Y+4, r25	; 0x04
    2c9e:	8b 83       	std	Y+3, r24	; 0x03
    2ca0:	12 c0       	rjmp	.+36     	; 0x2cc6 <__floatunsisf+0xe0>
    2ca2:	30 97       	sbiw	r30, 0x00	; 0
    2ca4:	81 f0       	breq	.+32     	; 0x2cc6 <__floatunsisf+0xe0>
    2ca6:	0e 2e       	mov	r0, r30
    2ca8:	04 c0       	rjmp	.+8      	; 0x2cb2 <__floatunsisf+0xcc>
    2caa:	ee 0c       	add	r14, r14
    2cac:	ff 1c       	adc	r15, r15
    2cae:	00 1f       	adc	r16, r16
    2cb0:	11 1f       	adc	r17, r17
    2cb2:	0a 94       	dec	r0
    2cb4:	d2 f7       	brpl	.-12     	; 0x2caa <__floatunsisf+0xc4>
    2cb6:	ed 82       	std	Y+5, r14	; 0x05
    2cb8:	fe 82       	std	Y+6, r15	; 0x06
    2cba:	0f 83       	std	Y+7, r16	; 0x07
    2cbc:	18 87       	std	Y+8, r17	; 0x08
    2cbe:	ce 1a       	sub	r12, r30
    2cc0:	df 0a       	sbc	r13, r31
    2cc2:	dc 82       	std	Y+4, r13	; 0x04
    2cc4:	cb 82       	std	Y+3, r12	; 0x03
    2cc6:	1a 82       	std	Y+2, r1	; 0x02
    2cc8:	ce 01       	movw	r24, r28
    2cca:	01 96       	adiw	r24, 0x01	; 1
    2ccc:	0e 94 bb 16 	call	0x2d76	; 0x2d76 <__pack_f>
    2cd0:	28 96       	adiw	r28, 0x08	; 8
    2cd2:	ea e0       	ldi	r30, 0x0A	; 10
    2cd4:	0c 94 85 18 	jmp	0x310a	; 0x310a <__epilogue_restores__+0x10>

00002cd8 <__clzsi2>:
    2cd8:	ef 92       	push	r14
    2cda:	ff 92       	push	r15
    2cdc:	0f 93       	push	r16
    2cde:	1f 93       	push	r17
    2ce0:	7b 01       	movw	r14, r22
    2ce2:	8c 01       	movw	r16, r24
    2ce4:	80 e0       	ldi	r24, 0x00	; 0
    2ce6:	e8 16       	cp	r14, r24
    2ce8:	80 e0       	ldi	r24, 0x00	; 0
    2cea:	f8 06       	cpc	r15, r24
    2cec:	81 e0       	ldi	r24, 0x01	; 1
    2cee:	08 07       	cpc	r16, r24
    2cf0:	80 e0       	ldi	r24, 0x00	; 0
    2cf2:	18 07       	cpc	r17, r24
    2cf4:	88 f4       	brcc	.+34     	; 0x2d18 <__clzsi2+0x40>
    2cf6:	8f ef       	ldi	r24, 0xFF	; 255
    2cf8:	e8 16       	cp	r14, r24
    2cfa:	f1 04       	cpc	r15, r1
    2cfc:	01 05       	cpc	r16, r1
    2cfe:	11 05       	cpc	r17, r1
    2d00:	31 f0       	breq	.+12     	; 0x2d0e <__clzsi2+0x36>
    2d02:	28 f0       	brcs	.+10     	; 0x2d0e <__clzsi2+0x36>
    2d04:	88 e0       	ldi	r24, 0x08	; 8
    2d06:	90 e0       	ldi	r25, 0x00	; 0
    2d08:	a0 e0       	ldi	r26, 0x00	; 0
    2d0a:	b0 e0       	ldi	r27, 0x00	; 0
    2d0c:	17 c0       	rjmp	.+46     	; 0x2d3c <__clzsi2+0x64>
    2d0e:	80 e0       	ldi	r24, 0x00	; 0
    2d10:	90 e0       	ldi	r25, 0x00	; 0
    2d12:	a0 e0       	ldi	r26, 0x00	; 0
    2d14:	b0 e0       	ldi	r27, 0x00	; 0
    2d16:	12 c0       	rjmp	.+36     	; 0x2d3c <__clzsi2+0x64>
    2d18:	80 e0       	ldi	r24, 0x00	; 0
    2d1a:	e8 16       	cp	r14, r24
    2d1c:	80 e0       	ldi	r24, 0x00	; 0
    2d1e:	f8 06       	cpc	r15, r24
    2d20:	80 e0       	ldi	r24, 0x00	; 0
    2d22:	08 07       	cpc	r16, r24
    2d24:	81 e0       	ldi	r24, 0x01	; 1
    2d26:	18 07       	cpc	r17, r24
    2d28:	28 f0       	brcs	.+10     	; 0x2d34 <__clzsi2+0x5c>
    2d2a:	88 e1       	ldi	r24, 0x18	; 24
    2d2c:	90 e0       	ldi	r25, 0x00	; 0
    2d2e:	a0 e0       	ldi	r26, 0x00	; 0
    2d30:	b0 e0       	ldi	r27, 0x00	; 0
    2d32:	04 c0       	rjmp	.+8      	; 0x2d3c <__clzsi2+0x64>
    2d34:	80 e1       	ldi	r24, 0x10	; 16
    2d36:	90 e0       	ldi	r25, 0x00	; 0
    2d38:	a0 e0       	ldi	r26, 0x00	; 0
    2d3a:	b0 e0       	ldi	r27, 0x00	; 0
    2d3c:	20 e2       	ldi	r18, 0x20	; 32
    2d3e:	30 e0       	ldi	r19, 0x00	; 0
    2d40:	40 e0       	ldi	r20, 0x00	; 0
    2d42:	50 e0       	ldi	r21, 0x00	; 0
    2d44:	28 1b       	sub	r18, r24
    2d46:	39 0b       	sbc	r19, r25
    2d48:	4a 0b       	sbc	r20, r26
    2d4a:	5b 0b       	sbc	r21, r27
    2d4c:	04 c0       	rjmp	.+8      	; 0x2d56 <__clzsi2+0x7e>
    2d4e:	16 95       	lsr	r17
    2d50:	07 95       	ror	r16
    2d52:	f7 94       	ror	r15
    2d54:	e7 94       	ror	r14
    2d56:	8a 95       	dec	r24
    2d58:	d2 f7       	brpl	.-12     	; 0x2d4e <__clzsi2+0x76>
    2d5a:	f7 01       	movw	r30, r14
    2d5c:	e8 5f       	subi	r30, 0xF8	; 248
    2d5e:	fd 4f       	sbci	r31, 0xFD	; 253
    2d60:	80 81       	ld	r24, Z
    2d62:	28 1b       	sub	r18, r24
    2d64:	31 09       	sbc	r19, r1
    2d66:	41 09       	sbc	r20, r1
    2d68:	51 09       	sbc	r21, r1
    2d6a:	c9 01       	movw	r24, r18
    2d6c:	1f 91       	pop	r17
    2d6e:	0f 91       	pop	r16
    2d70:	ff 90       	pop	r15
    2d72:	ef 90       	pop	r14
    2d74:	08 95       	ret

00002d76 <__pack_f>:
    2d76:	df 92       	push	r13
    2d78:	ef 92       	push	r14
    2d7a:	ff 92       	push	r15
    2d7c:	0f 93       	push	r16
    2d7e:	1f 93       	push	r17
    2d80:	fc 01       	movw	r30, r24
    2d82:	e4 80       	ldd	r14, Z+4	; 0x04
    2d84:	f5 80       	ldd	r15, Z+5	; 0x05
    2d86:	06 81       	ldd	r16, Z+6	; 0x06
    2d88:	17 81       	ldd	r17, Z+7	; 0x07
    2d8a:	d1 80       	ldd	r13, Z+1	; 0x01
    2d8c:	80 81       	ld	r24, Z
    2d8e:	82 30       	cpi	r24, 0x02	; 2
    2d90:	48 f4       	brcc	.+18     	; 0x2da4 <__pack_f+0x2e>
    2d92:	80 e0       	ldi	r24, 0x00	; 0
    2d94:	90 e0       	ldi	r25, 0x00	; 0
    2d96:	a0 e1       	ldi	r26, 0x10	; 16
    2d98:	b0 e0       	ldi	r27, 0x00	; 0
    2d9a:	e8 2a       	or	r14, r24
    2d9c:	f9 2a       	or	r15, r25
    2d9e:	0a 2b       	or	r16, r26
    2da0:	1b 2b       	or	r17, r27
    2da2:	a5 c0       	rjmp	.+330    	; 0x2eee <__pack_f+0x178>
    2da4:	84 30       	cpi	r24, 0x04	; 4
    2da6:	09 f4       	brne	.+2      	; 0x2daa <__pack_f+0x34>
    2da8:	9f c0       	rjmp	.+318    	; 0x2ee8 <__pack_f+0x172>
    2daa:	82 30       	cpi	r24, 0x02	; 2
    2dac:	21 f4       	brne	.+8      	; 0x2db6 <__pack_f+0x40>
    2dae:	ee 24       	eor	r14, r14
    2db0:	ff 24       	eor	r15, r15
    2db2:	87 01       	movw	r16, r14
    2db4:	05 c0       	rjmp	.+10     	; 0x2dc0 <__pack_f+0x4a>
    2db6:	e1 14       	cp	r14, r1
    2db8:	f1 04       	cpc	r15, r1
    2dba:	01 05       	cpc	r16, r1
    2dbc:	11 05       	cpc	r17, r1
    2dbe:	19 f4       	brne	.+6      	; 0x2dc6 <__pack_f+0x50>
    2dc0:	e0 e0       	ldi	r30, 0x00	; 0
    2dc2:	f0 e0       	ldi	r31, 0x00	; 0
    2dc4:	96 c0       	rjmp	.+300    	; 0x2ef2 <__pack_f+0x17c>
    2dc6:	62 81       	ldd	r22, Z+2	; 0x02
    2dc8:	73 81       	ldd	r23, Z+3	; 0x03
    2dca:	9f ef       	ldi	r25, 0xFF	; 255
    2dcc:	62 38       	cpi	r22, 0x82	; 130
    2dce:	79 07       	cpc	r23, r25
    2dd0:	0c f0       	brlt	.+2      	; 0x2dd4 <__pack_f+0x5e>
    2dd2:	5b c0       	rjmp	.+182    	; 0x2e8a <__pack_f+0x114>
    2dd4:	22 e8       	ldi	r18, 0x82	; 130
    2dd6:	3f ef       	ldi	r19, 0xFF	; 255
    2dd8:	26 1b       	sub	r18, r22
    2dda:	37 0b       	sbc	r19, r23
    2ddc:	2a 31       	cpi	r18, 0x1A	; 26
    2dde:	31 05       	cpc	r19, r1
    2de0:	2c f0       	brlt	.+10     	; 0x2dec <__pack_f+0x76>
    2de2:	20 e0       	ldi	r18, 0x00	; 0
    2de4:	30 e0       	ldi	r19, 0x00	; 0
    2de6:	40 e0       	ldi	r20, 0x00	; 0
    2de8:	50 e0       	ldi	r21, 0x00	; 0
    2dea:	2a c0       	rjmp	.+84     	; 0x2e40 <__pack_f+0xca>
    2dec:	b8 01       	movw	r22, r16
    2dee:	a7 01       	movw	r20, r14
    2df0:	02 2e       	mov	r0, r18
    2df2:	04 c0       	rjmp	.+8      	; 0x2dfc <__pack_f+0x86>
    2df4:	76 95       	lsr	r23
    2df6:	67 95       	ror	r22
    2df8:	57 95       	ror	r21
    2dfa:	47 95       	ror	r20
    2dfc:	0a 94       	dec	r0
    2dfe:	d2 f7       	brpl	.-12     	; 0x2df4 <__pack_f+0x7e>
    2e00:	81 e0       	ldi	r24, 0x01	; 1
    2e02:	90 e0       	ldi	r25, 0x00	; 0
    2e04:	a0 e0       	ldi	r26, 0x00	; 0
    2e06:	b0 e0       	ldi	r27, 0x00	; 0
    2e08:	04 c0       	rjmp	.+8      	; 0x2e12 <__pack_f+0x9c>
    2e0a:	88 0f       	add	r24, r24
    2e0c:	99 1f       	adc	r25, r25
    2e0e:	aa 1f       	adc	r26, r26
    2e10:	bb 1f       	adc	r27, r27
    2e12:	2a 95       	dec	r18
    2e14:	d2 f7       	brpl	.-12     	; 0x2e0a <__pack_f+0x94>
    2e16:	01 97       	sbiw	r24, 0x01	; 1
    2e18:	a1 09       	sbc	r26, r1
    2e1a:	b1 09       	sbc	r27, r1
    2e1c:	8e 21       	and	r24, r14
    2e1e:	9f 21       	and	r25, r15
    2e20:	a0 23       	and	r26, r16
    2e22:	b1 23       	and	r27, r17
    2e24:	00 97       	sbiw	r24, 0x00	; 0
    2e26:	a1 05       	cpc	r26, r1
    2e28:	b1 05       	cpc	r27, r1
    2e2a:	21 f0       	breq	.+8      	; 0x2e34 <__pack_f+0xbe>
    2e2c:	81 e0       	ldi	r24, 0x01	; 1
    2e2e:	90 e0       	ldi	r25, 0x00	; 0
    2e30:	a0 e0       	ldi	r26, 0x00	; 0
    2e32:	b0 e0       	ldi	r27, 0x00	; 0
    2e34:	9a 01       	movw	r18, r20
    2e36:	ab 01       	movw	r20, r22
    2e38:	28 2b       	or	r18, r24
    2e3a:	39 2b       	or	r19, r25
    2e3c:	4a 2b       	or	r20, r26
    2e3e:	5b 2b       	or	r21, r27
    2e40:	da 01       	movw	r26, r20
    2e42:	c9 01       	movw	r24, r18
    2e44:	8f 77       	andi	r24, 0x7F	; 127
    2e46:	90 70       	andi	r25, 0x00	; 0
    2e48:	a0 70       	andi	r26, 0x00	; 0
    2e4a:	b0 70       	andi	r27, 0x00	; 0
    2e4c:	80 34       	cpi	r24, 0x40	; 64
    2e4e:	91 05       	cpc	r25, r1
    2e50:	a1 05       	cpc	r26, r1
    2e52:	b1 05       	cpc	r27, r1
    2e54:	39 f4       	brne	.+14     	; 0x2e64 <__pack_f+0xee>
    2e56:	27 ff       	sbrs	r18, 7
    2e58:	09 c0       	rjmp	.+18     	; 0x2e6c <__pack_f+0xf6>
    2e5a:	20 5c       	subi	r18, 0xC0	; 192
    2e5c:	3f 4f       	sbci	r19, 0xFF	; 255
    2e5e:	4f 4f       	sbci	r20, 0xFF	; 255
    2e60:	5f 4f       	sbci	r21, 0xFF	; 255
    2e62:	04 c0       	rjmp	.+8      	; 0x2e6c <__pack_f+0xf6>
    2e64:	21 5c       	subi	r18, 0xC1	; 193
    2e66:	3f 4f       	sbci	r19, 0xFF	; 255
    2e68:	4f 4f       	sbci	r20, 0xFF	; 255
    2e6a:	5f 4f       	sbci	r21, 0xFF	; 255
    2e6c:	e0 e0       	ldi	r30, 0x00	; 0
    2e6e:	f0 e0       	ldi	r31, 0x00	; 0
    2e70:	20 30       	cpi	r18, 0x00	; 0
    2e72:	a0 e0       	ldi	r26, 0x00	; 0
    2e74:	3a 07       	cpc	r19, r26
    2e76:	a0 e0       	ldi	r26, 0x00	; 0
    2e78:	4a 07       	cpc	r20, r26
    2e7a:	a0 e4       	ldi	r26, 0x40	; 64
    2e7c:	5a 07       	cpc	r21, r26
    2e7e:	10 f0       	brcs	.+4      	; 0x2e84 <__pack_f+0x10e>
    2e80:	e1 e0       	ldi	r30, 0x01	; 1
    2e82:	f0 e0       	ldi	r31, 0x00	; 0
    2e84:	79 01       	movw	r14, r18
    2e86:	8a 01       	movw	r16, r20
    2e88:	27 c0       	rjmp	.+78     	; 0x2ed8 <__pack_f+0x162>
    2e8a:	60 38       	cpi	r22, 0x80	; 128
    2e8c:	71 05       	cpc	r23, r1
    2e8e:	64 f5       	brge	.+88     	; 0x2ee8 <__pack_f+0x172>
    2e90:	fb 01       	movw	r30, r22
    2e92:	e1 58       	subi	r30, 0x81	; 129
    2e94:	ff 4f       	sbci	r31, 0xFF	; 255
    2e96:	d8 01       	movw	r26, r16
    2e98:	c7 01       	movw	r24, r14
    2e9a:	8f 77       	andi	r24, 0x7F	; 127
    2e9c:	90 70       	andi	r25, 0x00	; 0
    2e9e:	a0 70       	andi	r26, 0x00	; 0
    2ea0:	b0 70       	andi	r27, 0x00	; 0
    2ea2:	80 34       	cpi	r24, 0x40	; 64
    2ea4:	91 05       	cpc	r25, r1
    2ea6:	a1 05       	cpc	r26, r1
    2ea8:	b1 05       	cpc	r27, r1
    2eaa:	39 f4       	brne	.+14     	; 0x2eba <__pack_f+0x144>
    2eac:	e7 fe       	sbrs	r14, 7
    2eae:	0d c0       	rjmp	.+26     	; 0x2eca <__pack_f+0x154>
    2eb0:	80 e4       	ldi	r24, 0x40	; 64
    2eb2:	90 e0       	ldi	r25, 0x00	; 0
    2eb4:	a0 e0       	ldi	r26, 0x00	; 0
    2eb6:	b0 e0       	ldi	r27, 0x00	; 0
    2eb8:	04 c0       	rjmp	.+8      	; 0x2ec2 <__pack_f+0x14c>
    2eba:	8f e3       	ldi	r24, 0x3F	; 63
    2ebc:	90 e0       	ldi	r25, 0x00	; 0
    2ebe:	a0 e0       	ldi	r26, 0x00	; 0
    2ec0:	b0 e0       	ldi	r27, 0x00	; 0
    2ec2:	e8 0e       	add	r14, r24
    2ec4:	f9 1e       	adc	r15, r25
    2ec6:	0a 1f       	adc	r16, r26
    2ec8:	1b 1f       	adc	r17, r27
    2eca:	17 ff       	sbrs	r17, 7
    2ecc:	05 c0       	rjmp	.+10     	; 0x2ed8 <__pack_f+0x162>
    2ece:	16 95       	lsr	r17
    2ed0:	07 95       	ror	r16
    2ed2:	f7 94       	ror	r15
    2ed4:	e7 94       	ror	r14
    2ed6:	31 96       	adiw	r30, 0x01	; 1
    2ed8:	87 e0       	ldi	r24, 0x07	; 7
    2eda:	16 95       	lsr	r17
    2edc:	07 95       	ror	r16
    2ede:	f7 94       	ror	r15
    2ee0:	e7 94       	ror	r14
    2ee2:	8a 95       	dec	r24
    2ee4:	d1 f7       	brne	.-12     	; 0x2eda <__pack_f+0x164>
    2ee6:	05 c0       	rjmp	.+10     	; 0x2ef2 <__pack_f+0x17c>
    2ee8:	ee 24       	eor	r14, r14
    2eea:	ff 24       	eor	r15, r15
    2eec:	87 01       	movw	r16, r14
    2eee:	ef ef       	ldi	r30, 0xFF	; 255
    2ef0:	f0 e0       	ldi	r31, 0x00	; 0
    2ef2:	6e 2f       	mov	r22, r30
    2ef4:	67 95       	ror	r22
    2ef6:	66 27       	eor	r22, r22
    2ef8:	67 95       	ror	r22
    2efa:	90 2f       	mov	r25, r16
    2efc:	9f 77       	andi	r25, 0x7F	; 127
    2efe:	d7 94       	ror	r13
    2f00:	dd 24       	eor	r13, r13
    2f02:	d7 94       	ror	r13
    2f04:	8e 2f       	mov	r24, r30
    2f06:	86 95       	lsr	r24
    2f08:	49 2f       	mov	r20, r25
    2f0a:	46 2b       	or	r20, r22
    2f0c:	58 2f       	mov	r21, r24
    2f0e:	5d 29       	or	r21, r13
    2f10:	b7 01       	movw	r22, r14
    2f12:	ca 01       	movw	r24, r20
    2f14:	1f 91       	pop	r17
    2f16:	0f 91       	pop	r16
    2f18:	ff 90       	pop	r15
    2f1a:	ef 90       	pop	r14
    2f1c:	df 90       	pop	r13
    2f1e:	08 95       	ret

00002f20 <__unpack_f>:
    2f20:	fc 01       	movw	r30, r24
    2f22:	db 01       	movw	r26, r22
    2f24:	40 81       	ld	r20, Z
    2f26:	51 81       	ldd	r21, Z+1	; 0x01
    2f28:	22 81       	ldd	r18, Z+2	; 0x02
    2f2a:	62 2f       	mov	r22, r18
    2f2c:	6f 77       	andi	r22, 0x7F	; 127
    2f2e:	70 e0       	ldi	r23, 0x00	; 0
    2f30:	22 1f       	adc	r18, r18
    2f32:	22 27       	eor	r18, r18
    2f34:	22 1f       	adc	r18, r18
    2f36:	93 81       	ldd	r25, Z+3	; 0x03
    2f38:	89 2f       	mov	r24, r25
    2f3a:	88 0f       	add	r24, r24
    2f3c:	82 2b       	or	r24, r18
    2f3e:	28 2f       	mov	r18, r24
    2f40:	30 e0       	ldi	r19, 0x00	; 0
    2f42:	99 1f       	adc	r25, r25
    2f44:	99 27       	eor	r25, r25
    2f46:	99 1f       	adc	r25, r25
    2f48:	11 96       	adiw	r26, 0x01	; 1
    2f4a:	9c 93       	st	X, r25
    2f4c:	11 97       	sbiw	r26, 0x01	; 1
    2f4e:	21 15       	cp	r18, r1
    2f50:	31 05       	cpc	r19, r1
    2f52:	a9 f5       	brne	.+106    	; 0x2fbe <__unpack_f+0x9e>
    2f54:	41 15       	cp	r20, r1
    2f56:	51 05       	cpc	r21, r1
    2f58:	61 05       	cpc	r22, r1
    2f5a:	71 05       	cpc	r23, r1
    2f5c:	11 f4       	brne	.+4      	; 0x2f62 <__unpack_f+0x42>
    2f5e:	82 e0       	ldi	r24, 0x02	; 2
    2f60:	37 c0       	rjmp	.+110    	; 0x2fd0 <__unpack_f+0xb0>
    2f62:	82 e8       	ldi	r24, 0x82	; 130
    2f64:	9f ef       	ldi	r25, 0xFF	; 255
    2f66:	13 96       	adiw	r26, 0x03	; 3
    2f68:	9c 93       	st	X, r25
    2f6a:	8e 93       	st	-X, r24
    2f6c:	12 97       	sbiw	r26, 0x02	; 2
    2f6e:	9a 01       	movw	r18, r20
    2f70:	ab 01       	movw	r20, r22
    2f72:	67 e0       	ldi	r22, 0x07	; 7
    2f74:	22 0f       	add	r18, r18
    2f76:	33 1f       	adc	r19, r19
    2f78:	44 1f       	adc	r20, r20
    2f7a:	55 1f       	adc	r21, r21
    2f7c:	6a 95       	dec	r22
    2f7e:	d1 f7       	brne	.-12     	; 0x2f74 <__unpack_f+0x54>
    2f80:	83 e0       	ldi	r24, 0x03	; 3
    2f82:	8c 93       	st	X, r24
    2f84:	0d c0       	rjmp	.+26     	; 0x2fa0 <__unpack_f+0x80>
    2f86:	22 0f       	add	r18, r18
    2f88:	33 1f       	adc	r19, r19
    2f8a:	44 1f       	adc	r20, r20
    2f8c:	55 1f       	adc	r21, r21
    2f8e:	12 96       	adiw	r26, 0x02	; 2
    2f90:	8d 91       	ld	r24, X+
    2f92:	9c 91       	ld	r25, X
    2f94:	13 97       	sbiw	r26, 0x03	; 3
    2f96:	01 97       	sbiw	r24, 0x01	; 1
    2f98:	13 96       	adiw	r26, 0x03	; 3
    2f9a:	9c 93       	st	X, r25
    2f9c:	8e 93       	st	-X, r24
    2f9e:	12 97       	sbiw	r26, 0x02	; 2
    2fa0:	20 30       	cpi	r18, 0x00	; 0
    2fa2:	80 e0       	ldi	r24, 0x00	; 0
    2fa4:	38 07       	cpc	r19, r24
    2fa6:	80 e0       	ldi	r24, 0x00	; 0
    2fa8:	48 07       	cpc	r20, r24
    2faa:	80 e4       	ldi	r24, 0x40	; 64
    2fac:	58 07       	cpc	r21, r24
    2fae:	58 f3       	brcs	.-42     	; 0x2f86 <__unpack_f+0x66>
    2fb0:	14 96       	adiw	r26, 0x04	; 4
    2fb2:	2d 93       	st	X+, r18
    2fb4:	3d 93       	st	X+, r19
    2fb6:	4d 93       	st	X+, r20
    2fb8:	5c 93       	st	X, r21
    2fba:	17 97       	sbiw	r26, 0x07	; 7
    2fbc:	08 95       	ret
    2fbe:	2f 3f       	cpi	r18, 0xFF	; 255
    2fc0:	31 05       	cpc	r19, r1
    2fc2:	79 f4       	brne	.+30     	; 0x2fe2 <__unpack_f+0xc2>
    2fc4:	41 15       	cp	r20, r1
    2fc6:	51 05       	cpc	r21, r1
    2fc8:	61 05       	cpc	r22, r1
    2fca:	71 05       	cpc	r23, r1
    2fcc:	19 f4       	brne	.+6      	; 0x2fd4 <__unpack_f+0xb4>
    2fce:	84 e0       	ldi	r24, 0x04	; 4
    2fd0:	8c 93       	st	X, r24
    2fd2:	08 95       	ret
    2fd4:	64 ff       	sbrs	r22, 4
    2fd6:	03 c0       	rjmp	.+6      	; 0x2fde <__unpack_f+0xbe>
    2fd8:	81 e0       	ldi	r24, 0x01	; 1
    2fda:	8c 93       	st	X, r24
    2fdc:	12 c0       	rjmp	.+36     	; 0x3002 <__unpack_f+0xe2>
    2fde:	1c 92       	st	X, r1
    2fe0:	10 c0       	rjmp	.+32     	; 0x3002 <__unpack_f+0xe2>
    2fe2:	2f 57       	subi	r18, 0x7F	; 127
    2fe4:	30 40       	sbci	r19, 0x00	; 0
    2fe6:	13 96       	adiw	r26, 0x03	; 3
    2fe8:	3c 93       	st	X, r19
    2fea:	2e 93       	st	-X, r18
    2fec:	12 97       	sbiw	r26, 0x02	; 2
    2fee:	83 e0       	ldi	r24, 0x03	; 3
    2ff0:	8c 93       	st	X, r24
    2ff2:	87 e0       	ldi	r24, 0x07	; 7
    2ff4:	44 0f       	add	r20, r20
    2ff6:	55 1f       	adc	r21, r21
    2ff8:	66 1f       	adc	r22, r22
    2ffa:	77 1f       	adc	r23, r23
    2ffc:	8a 95       	dec	r24
    2ffe:	d1 f7       	brne	.-12     	; 0x2ff4 <__unpack_f+0xd4>
    3000:	70 64       	ori	r23, 0x40	; 64
    3002:	14 96       	adiw	r26, 0x04	; 4
    3004:	4d 93       	st	X+, r20
    3006:	5d 93       	st	X+, r21
    3008:	6d 93       	st	X+, r22
    300a:	7c 93       	st	X, r23
    300c:	17 97       	sbiw	r26, 0x07	; 7
    300e:	08 95       	ret

00003010 <__fpcmp_parts_f>:
    3010:	1f 93       	push	r17
    3012:	dc 01       	movw	r26, r24
    3014:	fb 01       	movw	r30, r22
    3016:	9c 91       	ld	r25, X
    3018:	92 30       	cpi	r25, 0x02	; 2
    301a:	08 f4       	brcc	.+2      	; 0x301e <__fpcmp_parts_f+0xe>
    301c:	47 c0       	rjmp	.+142    	; 0x30ac <__fpcmp_parts_f+0x9c>
    301e:	80 81       	ld	r24, Z
    3020:	82 30       	cpi	r24, 0x02	; 2
    3022:	08 f4       	brcc	.+2      	; 0x3026 <__fpcmp_parts_f+0x16>
    3024:	43 c0       	rjmp	.+134    	; 0x30ac <__fpcmp_parts_f+0x9c>
    3026:	94 30       	cpi	r25, 0x04	; 4
    3028:	51 f4       	brne	.+20     	; 0x303e <__fpcmp_parts_f+0x2e>
    302a:	11 96       	adiw	r26, 0x01	; 1
    302c:	1c 91       	ld	r17, X
    302e:	84 30       	cpi	r24, 0x04	; 4
    3030:	99 f5       	brne	.+102    	; 0x3098 <__fpcmp_parts_f+0x88>
    3032:	81 81       	ldd	r24, Z+1	; 0x01
    3034:	68 2f       	mov	r22, r24
    3036:	70 e0       	ldi	r23, 0x00	; 0
    3038:	61 1b       	sub	r22, r17
    303a:	71 09       	sbc	r23, r1
    303c:	3f c0       	rjmp	.+126    	; 0x30bc <__fpcmp_parts_f+0xac>
    303e:	84 30       	cpi	r24, 0x04	; 4
    3040:	21 f0       	breq	.+8      	; 0x304a <__fpcmp_parts_f+0x3a>
    3042:	92 30       	cpi	r25, 0x02	; 2
    3044:	31 f4       	brne	.+12     	; 0x3052 <__fpcmp_parts_f+0x42>
    3046:	82 30       	cpi	r24, 0x02	; 2
    3048:	b9 f1       	breq	.+110    	; 0x30b8 <__fpcmp_parts_f+0xa8>
    304a:	81 81       	ldd	r24, Z+1	; 0x01
    304c:	88 23       	and	r24, r24
    304e:	89 f1       	breq	.+98     	; 0x30b2 <__fpcmp_parts_f+0xa2>
    3050:	2d c0       	rjmp	.+90     	; 0x30ac <__fpcmp_parts_f+0x9c>
    3052:	11 96       	adiw	r26, 0x01	; 1
    3054:	1c 91       	ld	r17, X
    3056:	11 97       	sbiw	r26, 0x01	; 1
    3058:	82 30       	cpi	r24, 0x02	; 2
    305a:	f1 f0       	breq	.+60     	; 0x3098 <__fpcmp_parts_f+0x88>
    305c:	81 81       	ldd	r24, Z+1	; 0x01
    305e:	18 17       	cp	r17, r24
    3060:	d9 f4       	brne	.+54     	; 0x3098 <__fpcmp_parts_f+0x88>
    3062:	12 96       	adiw	r26, 0x02	; 2
    3064:	2d 91       	ld	r18, X+
    3066:	3c 91       	ld	r19, X
    3068:	13 97       	sbiw	r26, 0x03	; 3
    306a:	82 81       	ldd	r24, Z+2	; 0x02
    306c:	93 81       	ldd	r25, Z+3	; 0x03
    306e:	82 17       	cp	r24, r18
    3070:	93 07       	cpc	r25, r19
    3072:	94 f0       	brlt	.+36     	; 0x3098 <__fpcmp_parts_f+0x88>
    3074:	28 17       	cp	r18, r24
    3076:	39 07       	cpc	r19, r25
    3078:	bc f0       	brlt	.+46     	; 0x30a8 <__fpcmp_parts_f+0x98>
    307a:	14 96       	adiw	r26, 0x04	; 4
    307c:	8d 91       	ld	r24, X+
    307e:	9d 91       	ld	r25, X+
    3080:	0d 90       	ld	r0, X+
    3082:	bc 91       	ld	r27, X
    3084:	a0 2d       	mov	r26, r0
    3086:	24 81       	ldd	r18, Z+4	; 0x04
    3088:	35 81       	ldd	r19, Z+5	; 0x05
    308a:	46 81       	ldd	r20, Z+6	; 0x06
    308c:	57 81       	ldd	r21, Z+7	; 0x07
    308e:	28 17       	cp	r18, r24
    3090:	39 07       	cpc	r19, r25
    3092:	4a 07       	cpc	r20, r26
    3094:	5b 07       	cpc	r21, r27
    3096:	18 f4       	brcc	.+6      	; 0x309e <__fpcmp_parts_f+0x8e>
    3098:	11 23       	and	r17, r17
    309a:	41 f0       	breq	.+16     	; 0x30ac <__fpcmp_parts_f+0x9c>
    309c:	0a c0       	rjmp	.+20     	; 0x30b2 <__fpcmp_parts_f+0xa2>
    309e:	82 17       	cp	r24, r18
    30a0:	93 07       	cpc	r25, r19
    30a2:	a4 07       	cpc	r26, r20
    30a4:	b5 07       	cpc	r27, r21
    30a6:	40 f4       	brcc	.+16     	; 0x30b8 <__fpcmp_parts_f+0xa8>
    30a8:	11 23       	and	r17, r17
    30aa:	19 f0       	breq	.+6      	; 0x30b2 <__fpcmp_parts_f+0xa2>
    30ac:	61 e0       	ldi	r22, 0x01	; 1
    30ae:	70 e0       	ldi	r23, 0x00	; 0
    30b0:	05 c0       	rjmp	.+10     	; 0x30bc <__fpcmp_parts_f+0xac>
    30b2:	6f ef       	ldi	r22, 0xFF	; 255
    30b4:	7f ef       	ldi	r23, 0xFF	; 255
    30b6:	02 c0       	rjmp	.+4      	; 0x30bc <__fpcmp_parts_f+0xac>
    30b8:	60 e0       	ldi	r22, 0x00	; 0
    30ba:	70 e0       	ldi	r23, 0x00	; 0
    30bc:	cb 01       	movw	r24, r22
    30be:	1f 91       	pop	r17
    30c0:	08 95       	ret

000030c2 <__prologue_saves__>:
    30c2:	2f 92       	push	r2
    30c4:	3f 92       	push	r3
    30c6:	4f 92       	push	r4
    30c8:	5f 92       	push	r5
    30ca:	6f 92       	push	r6
    30cc:	7f 92       	push	r7
    30ce:	8f 92       	push	r8
    30d0:	9f 92       	push	r9
    30d2:	af 92       	push	r10
    30d4:	bf 92       	push	r11
    30d6:	cf 92       	push	r12
    30d8:	df 92       	push	r13
    30da:	ef 92       	push	r14
    30dc:	ff 92       	push	r15
    30de:	0f 93       	push	r16
    30e0:	1f 93       	push	r17
    30e2:	cf 93       	push	r28
    30e4:	df 93       	push	r29
    30e6:	cd b7       	in	r28, 0x3d	; 61
    30e8:	de b7       	in	r29, 0x3e	; 62
    30ea:	ca 1b       	sub	r28, r26
    30ec:	db 0b       	sbc	r29, r27
    30ee:	0f b6       	in	r0, 0x3f	; 63
    30f0:	f8 94       	cli
    30f2:	de bf       	out	0x3e, r29	; 62
    30f4:	0f be       	out	0x3f, r0	; 63
    30f6:	cd bf       	out	0x3d, r28	; 61
    30f8:	19 94       	eijmp

000030fa <__epilogue_restores__>:
    30fa:	2a 88       	ldd	r2, Y+18	; 0x12
    30fc:	39 88       	ldd	r3, Y+17	; 0x11
    30fe:	48 88       	ldd	r4, Y+16	; 0x10
    3100:	5f 84       	ldd	r5, Y+15	; 0x0f
    3102:	6e 84       	ldd	r6, Y+14	; 0x0e
    3104:	7d 84       	ldd	r7, Y+13	; 0x0d
    3106:	8c 84       	ldd	r8, Y+12	; 0x0c
    3108:	9b 84       	ldd	r9, Y+11	; 0x0b
    310a:	aa 84       	ldd	r10, Y+10	; 0x0a
    310c:	b9 84       	ldd	r11, Y+9	; 0x09
    310e:	c8 84       	ldd	r12, Y+8	; 0x08
    3110:	df 80       	ldd	r13, Y+7	; 0x07
    3112:	ee 80       	ldd	r14, Y+6	; 0x06
    3114:	fd 80       	ldd	r15, Y+5	; 0x05
    3116:	0c 81       	ldd	r16, Y+4	; 0x04
    3118:	1b 81       	ldd	r17, Y+3	; 0x03
    311a:	aa 81       	ldd	r26, Y+2	; 0x02
    311c:	b9 81       	ldd	r27, Y+1	; 0x01
    311e:	ce 0f       	add	r28, r30
    3120:	d1 1d       	adc	r29, r1
    3122:	0f b6       	in	r0, 0x3f	; 63
    3124:	f8 94       	cli
    3126:	de bf       	out	0x3e, r29	; 62
    3128:	0f be       	out	0x3f, r0	; 63
    312a:	cd bf       	out	0x3d, r28	; 61
    312c:	ed 01       	movw	r28, r26
    312e:	08 95       	ret

00003130 <_exit>:
    3130:	f8 94       	cli

00003132 <__stop_program>:
    3132:	ff cf       	rjmp	.-2      	; 0x3132 <__stop_program>
